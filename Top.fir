circuit Top :
  module Bitmap :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[2][2], flip mat2 : UInt<16>[2][2], bitmap1 : UInt<16>[2][2], bitmap2 : UInt<16>[2][2]}

    wire _matReg1_WIRE : UInt<16>[2] @[Bitmap.scala 14:67]
    _matReg1_WIRE[0] <= UInt<16>("h0") @[Bitmap.scala 14:67]
    _matReg1_WIRE[1] <= UInt<16>("h0") @[Bitmap.scala 14:67]
    wire _matReg1_WIRE_1 : UInt<16>[2] @[Bitmap.scala 14:67]
    _matReg1_WIRE_1[0] <= UInt<16>("h0") @[Bitmap.scala 14:67]
    _matReg1_WIRE_1[1] <= UInt<16>("h0") @[Bitmap.scala 14:67]
    wire _matReg1_WIRE_2 : UInt<16>[2][2] @[Bitmap.scala 14:34]
    _matReg1_WIRE_2[0] <= _matReg1_WIRE @[Bitmap.scala 14:34]
    _matReg1_WIRE_2[1] <= _matReg1_WIRE_1 @[Bitmap.scala 14:34]
    reg matReg1 : UInt<16>[2][2], clock with :
      reset => (reset, _matReg1_WIRE_2) @[Bitmap.scala 14:26]
    wire _matReg2_WIRE : UInt<16>[2] @[Bitmap.scala 15:67]
    _matReg2_WIRE[0] <= UInt<16>("h0") @[Bitmap.scala 15:67]
    _matReg2_WIRE[1] <= UInt<16>("h0") @[Bitmap.scala 15:67]
    wire _matReg2_WIRE_1 : UInt<16>[2] @[Bitmap.scala 15:67]
    _matReg2_WIRE_1[0] <= UInt<16>("h0") @[Bitmap.scala 15:67]
    _matReg2_WIRE_1[1] <= UInt<16>("h0") @[Bitmap.scala 15:67]
    wire _matReg2_WIRE_2 : UInt<16>[2][2] @[Bitmap.scala 15:34]
    _matReg2_WIRE_2[0] <= _matReg2_WIRE @[Bitmap.scala 15:34]
    _matReg2_WIRE_2[1] <= _matReg2_WIRE_1 @[Bitmap.scala 15:34]
    reg matReg2 : UInt<16>[2][2], clock with :
      reset => (reset, _matReg2_WIRE_2) @[Bitmap.scala 15:26]
    io.bitmap1 <= matReg1 @[Bitmap.scala 16:16]
    io.bitmap2 <= matReg2 @[Bitmap.scala 17:16]
    reg i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Bitmap.scala 19:20]
    reg j : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Bitmap.scala 20:20]
    node _T = lt(j, UInt<2>("h2")) @[Bitmap.scala 22:13]
    when _T : @[Bitmap.scala 22:33]
      node _T_1 = neq(io.mat1[i][j], UInt<1>("h0")) @[Bitmap.scala 23:41]
      when _T_1 : @[Bitmap.scala 23:49]
        matReg1[i][j] <= UInt<1>("h1") @[Bitmap.scala 24:31]
      else :
        matReg1[i][j] <= UInt<1>("h0") @[Bitmap.scala 26:31]
      node _T_2 = neq(io.mat2[i][j], UInt<1>("h0")) @[Bitmap.scala 28:33]
      when _T_2 : @[Bitmap.scala 28:41]
        matReg2[i][j] <= UInt<1>("h1") @[Bitmap.scala 29:31]
      else :
        matReg2[i][j] <= UInt<1>("h0") @[Bitmap.scala 31:31]
      node _j_T = add(j, UInt<1>("h1")) @[Bitmap.scala 33:17]
      node _j_T_1 = tail(_j_T, 1) @[Bitmap.scala 33:17]
      j <= _j_T_1 @[Bitmap.scala 33:12]
    node _T_3 = eq(j, UInt<1>("h1")) @[Bitmap.scala 35:11]
    when _T_3 : @[Bitmap.scala 35:36]
      node _i_T = add(i, UInt<1>("h1")) @[Bitmap.scala 36:12]
      node _i_T_1 = tail(_i_T, 1) @[Bitmap.scala 36:12]
      i <= _i_T_1 @[Bitmap.scala 36:7]

  module Regor :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[2][2], flip mat2 : UInt<16>[2][2], compressedBitmap : UInt<16>[2][2], End : UInt<1>}

    wire _matReg1_WIRE : UInt<16>[2] @[MatrixPRE-Processor.scala 15:57]
    _matReg1_WIRE[0] <= UInt<16>("h0") @[MatrixPRE-Processor.scala 15:57]
    _matReg1_WIRE[1] <= UInt<16>("h0") @[MatrixPRE-Processor.scala 15:57]
    wire _matReg1_WIRE_1 : UInt<16>[2] @[MatrixPRE-Processor.scala 15:57]
    _matReg1_WIRE_1[0] <= UInt<16>("h0") @[MatrixPRE-Processor.scala 15:57]
    _matReg1_WIRE_1[1] <= UInt<16>("h0") @[MatrixPRE-Processor.scala 15:57]
    wire _matReg1_WIRE_2 : UInt<16>[2][2] @[MatrixPRE-Processor.scala 15:34]
    _matReg1_WIRE_2[0] <= _matReg1_WIRE @[MatrixPRE-Processor.scala 15:34]
    _matReg1_WIRE_2[1] <= _matReg1_WIRE_1 @[MatrixPRE-Processor.scala 15:34]
    reg matReg1 : UInt<16>[2][2], clock with :
      reset => (reset, _matReg1_WIRE_2) @[MatrixPRE-Processor.scala 15:26]
    io.compressedBitmap <= matReg1 @[MatrixPRE-Processor.scala 16:25]
    inst bitmap of Bitmap @[MatrixPRE-Processor.scala 18:24]
    bitmap.clock <= clock
    bitmap.reset <= reset
    bitmap.io.mat1[0][0] <= io.mat1[0][0] @[MatrixPRE-Processor.scala 19:20]
    bitmap.io.mat1[0][1] <= io.mat1[0][1] @[MatrixPRE-Processor.scala 19:20]
    bitmap.io.mat1[1][0] <= io.mat1[1][0] @[MatrixPRE-Processor.scala 19:20]
    bitmap.io.mat1[1][1] <= io.mat1[1][1] @[MatrixPRE-Processor.scala 19:20]
    bitmap.io.mat2[0][0] <= io.mat2[0][0] @[MatrixPRE-Processor.scala 20:20]
    bitmap.io.mat2[0][1] <= io.mat2[0][1] @[MatrixPRE-Processor.scala 20:20]
    bitmap.io.mat2[1][0] <= io.mat2[1][0] @[MatrixPRE-Processor.scala 20:20]
    bitmap.io.mat2[1][1] <= io.mat2[1][1] @[MatrixPRE-Processor.scala 20:20]
    wire _reg_WIRE : UInt<1>[2] @[MatrixPRE-Processor.scala 22:30]
    _reg_WIRE[0] <= UInt<1>("h0") @[MatrixPRE-Processor.scala 22:30]
    _reg_WIRE[1] <= UInt<1>("h0") @[MatrixPRE-Processor.scala 22:30]
    reg reg : UInt<1>[2], clock with :
      reset => (reset, _reg_WIRE) @[MatrixPRE-Processor.scala 22:22]
    node _reg_0_T = neq(io.mat2[0][0], UInt<1>("h0")) @[MatrixPRE-Processor.scala 24:36]
    node _reg_0_T_1 = neq(io.mat2[0][1], UInt<1>("h0")) @[MatrixPRE-Processor.scala 24:36]
    node _reg_0_T_2 = or(_reg_0_T, _reg_0_T_1) @[MatrixPRE-Processor.scala 24:54]
    reg[0] <= _reg_0_T_2 @[MatrixPRE-Processor.scala 24:16]
    node _reg_1_T = neq(io.mat2[1][0], UInt<1>("h0")) @[MatrixPRE-Processor.scala 24:36]
    node _reg_1_T_1 = neq(io.mat2[1][1], UInt<1>("h0")) @[MatrixPRE-Processor.scala 24:36]
    node _reg_1_T_2 = or(_reg_1_T, _reg_1_T_1) @[MatrixPRE-Processor.scala 24:54]
    reg[1] <= _reg_1_T_2 @[MatrixPRE-Processor.scala 24:16]
    reg i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[MatrixPRE-Processor.scala 29:20]
    reg j : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[MatrixPRE-Processor.scala 30:20]
    node _io_End_T = eq(i, UInt<1>("h1")) @[MatrixPRE-Processor.scala 34:18]
    node _io_End_T_1 = eq(j, UInt<1>("h1")) @[MatrixPRE-Processor.scala 34:51]
    node _io_End_T_2 = and(_io_End_T, _io_End_T_1) @[MatrixPRE-Processor.scala 34:45]
    io.End <= _io_End_T_2 @[MatrixPRE-Processor.scala 34:12]
    node _T = lt(i, UInt<2>("h2")) @[MatrixPRE-Processor.scala 39:13]
    when _T : @[MatrixPRE-Processor.scala 39:23]
      node _T_1 = eq(reg[j], UInt<1>("h0")) @[MatrixPRE-Processor.scala 40:23]
      node _T_2 = eq(bitmap.io.bitmap1[i][j], UInt<1>("h1")) @[MatrixPRE-Processor.scala 40:60]
      node _T_3 = and(_T_1, _T_2) @[MatrixPRE-Processor.scala 40:32]
      when _T_3 : @[MatrixPRE-Processor.scala 40:69]
        matReg1[i][j] <= UInt<1>("h0") @[MatrixPRE-Processor.scala 41:27]
      else :
        matReg1[i][j] <= io.mat1[i][j] @[MatrixPRE-Processor.scala 43:27]
      node _i_T = add(i, UInt<1>("h1")) @[MatrixPRE-Processor.scala 45:16]
      node _i_T_1 = tail(_i_T, 1) @[MatrixPRE-Processor.scala 45:16]
      i <= _i_T_1 @[MatrixPRE-Processor.scala 45:11]
    node _T_4 = eq(i, UInt<1>("h1")) @[MatrixPRE-Processor.scala 47:14]
    node _T_5 = eq(j, UInt<1>("h1")) @[MatrixPRE-Processor.scala 47:47]
    node _T_6 = and(_T_4, _T_5) @[MatrixPRE-Processor.scala 47:41]
    when _T_6 : @[MatrixPRE-Processor.scala 47:74]
      i <= i @[MatrixPRE-Processor.scala 48:11]
      j <= j @[MatrixPRE-Processor.scala 49:11]
    else :
      node _T_7 = eq(i, UInt<1>("h1")) @[MatrixPRE-Processor.scala 50:19]
      when _T_7 : @[MatrixPRE-Processor.scala 50:34]
        node _j_T = add(j, UInt<1>("h1")) @[MatrixPRE-Processor.scala 51:16]
        node _j_T_1 = tail(_j_T, 1) @[MatrixPRE-Processor.scala 51:16]
        j <= _j_T_1 @[MatrixPRE-Processor.scala 51:11]

  module Muxes :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[2][2], flip mat2 : UInt<16>[2], flip counterMatrix1 : UInt<16>[2][2], flip counterMatrix2 : UInt<16>[2], i_mux_bus : UInt<4>[4], Source : UInt<16>[4], destination : UInt<16>[4], flip valid : UInt<1>, End : UInt<1>}

    reg prevStationary_matrix : UInt<16>[2][2], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[2], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 26:28]
    when _T : @[Muxes.scala 26:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 27:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 26:28]
    when _T_1 : @[Muxes.scala 26:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 27:28]
    node _T_2 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 30:23]
    when _T_2 : @[Muxes.scala 30:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 31:26]
    node _T_3 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 26:28]
    when _T_3 : @[Muxes.scala 26:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 27:28]
    node _T_4 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 26:28]
    when _T_4 : @[Muxes.scala 26:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 27:28]
    node _T_5 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 30:23]
    when _T_5 : @[Muxes.scala 30:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 31:26]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 36:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 37:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 38:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 39:26]
    wire _mux_WIRE : UInt<4>[4] @[Muxes.scala 40:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 40:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 40:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 40:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 40:30]
    reg mux : UInt<4>[4], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 40:22]
    wire _src_WIRE : UInt<16>[4] @[Muxes.scala 41:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 41:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 41:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 41:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 41:30]
    reg src : UInt<16>[4], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 41:22]
    wire _dest_WIRE : UInt<16>[4] @[Muxes.scala 42:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 42:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 42:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 42:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 42:31]
    reg dest : UInt<16>[4], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 42:23]
    io.i_mux_bus <= mux @[Muxes.scala 46:18]
    io.Source <= src @[Muxes.scala 47:15]
    io.destination <= dest @[Muxes.scala 48:20]
    node _T_6 = eq(j, UInt<2>("h2")) @[Muxes.scala 52:13]
    when _T_6 : @[Muxes.scala 52:21]
      io.End <= UInt<1>("h0") @[Muxes.scala 53:14]
    node _T_7 = bits(j, 0, 0)
    node _T_8 = bits(i, 0, 0)
    node _T_9 = neq(io.mat1[_T_7][_T_8], UInt<1>("h0")) @[Muxes.scala 58:26]
    node _T_10 = bits(i, 0, 0)
    node _T_11 = neq(io.mat2[_T_10], UInt<1>("h0")) @[Muxes.scala 58:50]
    node _T_12 = and(_T_9, _T_11) @[Muxes.scala 58:35]
    when _T_12 : @[Muxes.scala 58:60]
      node _T_13 = bits(j, 0, 0)
      node _T_14 = bits(i, 0, 0)
      node _T_15 = bits(i, 0, 0)
      node _T_16 = lt(io.counterMatrix1[_T_13][_T_14], io.counterMatrix2[_T_15]) @[Muxes.scala 59:38]
      when _T_16 : @[Muxes.scala 59:61]
        node _T_17 = bits(counter, 1, 0)
        node _mux_T = bits(i, 0, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 60:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 60:51]
        node _mux_T_3 = bits(j, 0, 0)
        node _mux_T_4 = bits(i, 0, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 60:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 60:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 60:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 60:58]
        mux[_T_17] <= _mux_T_8 @[Muxes.scala 60:24]
        node _T_18 = bits(counter, 1, 0)
        node _src_T = bits(i, 0, 0)
        src[_T_18] <= io.mat2[_src_T] @[Muxes.scala 61:24]
        node _T_19 = bits(counter, 1, 0)
        node _dest_T = bits(j, 0, 0)
        node _dest_T_1 = bits(i, 0, 0)
        dest[_T_19] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 62:25]
      else :
        node _T_20 = bits(counter, 1, 0)
        node _mux_T_9 = bits(j, 0, 0)
        node _mux_T_10 = bits(i, 0, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 64:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 64:54]
        node _mux_T_13 = bits(i, 0, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 64:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 64:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 64:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 64:61]
        mux[_T_20] <= _mux_T_17 @[Muxes.scala 64:24]
        node _T_21 = bits(counter, 1, 0)
        node _src_T_1 = bits(i, 0, 0)
        src[_T_21] <= io.mat2[_src_T_1] @[Muxes.scala 65:24]
        node _T_22 = bits(counter, 1, 0)
        node _dest_T_2 = bits(j, 0, 0)
        node _dest_T_3 = bits(i, 0, 0)
        dest[_T_22] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 66:25]
      node _T_23 = not(jValid) @[Muxes.scala 69:15]
      when _T_23 : @[Muxes.scala 69:24]
        node _T_24 = eq(j, UInt<1>("h1")) @[Muxes.scala 71:22]
        node _T_25 = eq(i, UInt<1>("h1")) @[Muxes.scala 71:56]
        node _T_26 = and(_T_24, _T_25) @[Muxes.scala 71:50]
        node _T_27 = not(_T_26) @[Muxes.scala 71:17]
        when _T_27 : @[Muxes.scala 71:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 72:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 72:30]
          counter <= _counter_T_1 @[Muxes.scala 72:19]
    wire _muxVAl_WIRE : UInt<32>[4] @[Muxes.scala 79:30]
    _muxVAl_WIRE[0] <= UInt<32>("h0") @[Muxes.scala 79:30]
    _muxVAl_WIRE[1] <= UInt<32>("h0") @[Muxes.scala 79:30]
    _muxVAl_WIRE[2] <= UInt<32>("h0") @[Muxes.scala 79:30]
    _muxVAl_WIRE[3] <= UInt<32>("h0") @[Muxes.scala 79:30]
    reg muxVAl : UInt<32>[4], clock with :
      reset => (reset, _muxVAl_WIRE) @[Muxes.scala 79:22]
    when io.valid : @[Muxes.scala 82:16]
      node _T_28 = eq(i, UInt<1>("h1")) @[Muxes.scala 84:12]
      node _T_29 = eq(j, UInt<1>("h1")) @[Muxes.scala 84:27]
      node _T_30 = and(_T_28, _T_29) @[Muxes.scala 84:20]
      when _T_30 : @[Muxes.scala 84:36]
        node _T_31 = neq(io.mat1[1][1], UInt<1>("h0")) @[Muxes.scala 86:30]
        node _T_32 = neq(io.mat2[1], UInt<1>("h0")) @[Muxes.scala 86:54]
        node _T_33 = and(_T_31, _T_32) @[Muxes.scala 86:39]
        when _T_33 : @[Muxes.scala 86:64]
          node _T_34 = lt(io.counterMatrix1[1][1], io.counterMatrix2[1]) @[Muxes.scala 88:38]
          when _T_34 : @[Muxes.scala 88:61]
            node _T_35 = bits(counter, 1, 0)
            node _mux_T_18 = sub(io.counterMatrix2[1], UInt<1>("h1")) @[Muxes.scala 89:51]
            node _mux_T_19 = tail(_mux_T_18, 1) @[Muxes.scala 89:51]
            node _mux_T_20 = sub(io.counterMatrix1[1][1], UInt<1>("h1")) @[Muxes.scala 89:85]
            node _mux_T_21 = tail(_mux_T_20, 1) @[Muxes.scala 89:85]
            node _mux_T_22 = sub(_mux_T_19, _mux_T_21) @[Muxes.scala 89:58]
            node _mux_T_23 = tail(_mux_T_22, 1) @[Muxes.scala 89:58]
            mux[_T_35] <= _mux_T_23 @[Muxes.scala 89:24]
            node _T_36 = bits(counter, 1, 0)
            src[_T_36] <= io.mat2[1] @[Muxes.scala 90:24]
            node _T_37 = bits(counter, 1, 0)
            dest[_T_37] <= io.mat1[1][1] @[Muxes.scala 91:25]
          else :
            node _T_38 = bits(counter, 1, 0)
            node _mux_T_24 = sub(io.counterMatrix1[1][1], UInt<1>("h1")) @[Muxes.scala 93:54]
            node _mux_T_25 = tail(_mux_T_24, 1) @[Muxes.scala 93:54]
            node _mux_T_26 = sub(io.counterMatrix2[1], UInt<1>("h1")) @[Muxes.scala 93:85]
            node _mux_T_27 = tail(_mux_T_26, 1) @[Muxes.scala 93:85]
            node _mux_T_28 = sub(_mux_T_25, _mux_T_27) @[Muxes.scala 93:61]
            node _mux_T_29 = tail(_mux_T_28, 1) @[Muxes.scala 93:61]
            mux[_T_38] <= _mux_T_29 @[Muxes.scala 93:24]
            node _T_39 = bits(counter, 1, 0)
            src[_T_39] <= io.mat2[1] @[Muxes.scala 94:24]
            node _T_40 = bits(counter, 1, 0)
            dest[_T_40] <= io.mat1[1][1] @[Muxes.scala 95:25]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 98:12]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 98:12]
        j <= _j_T_1 @[Muxes.scala 98:7]
        counter <= counter @[Muxes.scala 99:13]
        i <= i @[Muxes.scala 100:9]
        src <= src @[Muxes.scala 101:11]
        dest <= dest @[Muxes.scala 102:12]
        mux <= mux @[Muxes.scala 103:11]
      else :
        node _T_41 = eq(j, UInt<2>("h2")) @[Muxes.scala 104:16]
        when _T_41 : @[Muxes.scala 104:24]
          j <= j @[Muxes.scala 105:7]
      node _T_42 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 107:19]
      when _T_42 : @[Muxes.scala 107:29]
        node _T_43 = lt(j, UInt<1>("h1")) @[Muxes.scala 109:14]
        when _T_43 : @[Muxes.scala 109:40]
          node _j_T_2 = add(j, UInt<1>("h1")) @[Muxes.scala 110:16]
          node _j_T_3 = tail(_j_T_2, 1) @[Muxes.scala 110:16]
          j <= _j_T_3 @[Muxes.scala 110:11]
        else :
          node _T_44 = eq(j, UInt<1>("h1")) @[Muxes.scala 111:21]
          node _T_45 = eq(i, UInt<1>("h1")) @[Muxes.scala 111:54]
          node _T_46 = and(_T_44, _T_45) @[Muxes.scala 111:48]
          when _T_46 : @[Muxes.scala 111:82]
            jValid <= UInt<1>("h1") @[Muxes.scala 112:16]
          else :
            j <= UInt<1>("h0") @[Muxes.scala 114:11]
            node _T_47 = lt(i, UInt<1>("h1")) @[Muxes.scala 115:16]
            when _T_47 : @[Muxes.scala 115:42]
              node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 116:18]
              node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 116:18]
              i <= _i_T_1 @[Muxes.scala 116:13]
      else :
        node _T_48 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 120:25]
        node _T_49 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 120:55]
        node _T_50 = and(_T_48, _T_49) @[Muxes.scala 120:34]
        when _T_50 : @[Muxes.scala 120:64]
          i <= UInt<1>("h0") @[Muxes.scala 122:9]
          j <= UInt<1>("h0") @[Muxes.scala 123:9]
          jValid <= UInt<1>("h0") @[Muxes.scala 124:14]
          counter <= UInt<1>("h0") @[Muxes.scala 125:15]
          src[0] <= UInt<1>("h0") @[Muxes.scala 128:16]
          dest[0] <= UInt<1>("h0") @[Muxes.scala 129:17]
          mux[0] <= UInt<1>("h0") @[Muxes.scala 130:16]
          src[1] <= UInt<1>("h0") @[Muxes.scala 128:16]
          dest[1] <= UInt<1>("h0") @[Muxes.scala 129:17]
          mux[1] <= UInt<1>("h0") @[Muxes.scala 130:16]
          src[2] <= UInt<1>("h0") @[Muxes.scala 128:16]
          dest[2] <= UInt<1>("h0") @[Muxes.scala 129:17]
          mux[2] <= UInt<1>("h0") @[Muxes.scala 130:16]
          src[3] <= UInt<1>("h0") @[Muxes.scala 128:16]
          dest[3] <= UInt<1>("h0") @[Muxes.scala 129:17]
          mux[3] <= UInt<1>("h0") @[Muxes.scala 130:16]
    node _io_End_T = eq(i, UInt<1>("h1")) @[Muxes.scala 134:34]
    node _io_End_T_1 = eq(j, UInt<1>("h1")) @[Muxes.scala 134:67]
    node _io_End_T_2 = and(_io_End_T, _io_End_T_1) @[Muxes.scala 134:61]
    reg io_End_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_End_REG) @[Muxes.scala 134:30]
    io_End_REG <= _io_End_T_2 @[Muxes.scala 134:30]
    reg io_End_REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_End_REG_1) @[Muxes.scala 134:22]
    io_End_REG_1 <= io_End_REG @[Muxes.scala 134:22]
    io.End <= io_End_REG_1 @[Muxes.scala 134:12]

  module SourceDestination :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[2][2], flip Streaming_matrix : UInt<16>[2], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[2][2]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[2]}, valid : UInt<1>, flip Ivalid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[2][2], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 16:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 16:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 16:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 16:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 16:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 17:31]
    matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 18:22]
    node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 22:41]
    when _T : @[SourceDestination.scala 22:74]
      matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 23:28]
    node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 22:41]
    when _T_1 : @[SourceDestination.scala 22:74]
      matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 23:28]
    node _T_2 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 22:41]
    when _T_2 : @[SourceDestination.scala 22:74]
      matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 23:28]
    node _T_3 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 22:41]
    when _T_3 : @[SourceDestination.scala 22:74]
      matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 23:28]
    wire _counterRegs1_WIRE : UInt<16>[2] @[SourceDestination.scala 30:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 30:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 30:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[2] @[SourceDestination.scala 30:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 30:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 30:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[2][2] @[SourceDestination.scala 30:39]
    _counterRegs1_WIRE_2[0] <= _counterRegs1_WIRE @[SourceDestination.scala 30:39]
    _counterRegs1_WIRE_2[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 30:39]
    reg counterRegs1 : UInt<16>[2][2], clock with :
      reset => (reset, _counterRegs1_WIRE_2) @[SourceDestination.scala 30:31]
    wire _counterRegs2_WIRE : UInt<16>[2] @[SourceDestination.scala 31:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 31:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 31:39]
    reg counterRegs2 : UInt<16>[2], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 31:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 33:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 34:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 36:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 37:21]
    jValid <= UInt<1>("h0") @[SourceDestination.scala 38:12]
    reg kvalid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), kvalid) @[SourceDestination.scala 39:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 40:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 42:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 43:27]
    when io.Ivalid : @[SourceDestination.scala 45:17]
      node _T_4 = bits(i, 0, 0)
      node _T_5 = bits(j, 0, 0)
      node _T_6 = neq(io.Stationary_matrix[_T_4][_T_5], UInt<1>("h0")) @[SourceDestination.scala 46:38]
      when _T_6 : @[SourceDestination.scala 46:47]
        node _T_7 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 47:22]
        when _T_7 : @[SourceDestination.scala 47:48]
          node _T_8 = bits(i, 0, 0)
          node _T_9 = bits(j, 0, 0)
          counterRegs1[_T_8][_T_9] <= counter1 @[SourceDestination.scala 48:28]
          node _T_10 = eq(j, UInt<1>("h1")) @[SourceDestination.scala 49:20]
          node _T_11 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 49:54]
          node _T_12 = and(_T_10, _T_11) @[SourceDestination.scala 49:48]
          node _T_13 = not(_T_12) @[SourceDestination.scala 49:15]
          node _T_14 = and(_T_13, io.Ivalid) @[SourceDestination.scala 49:83]
          when _T_14 : @[SourceDestination.scala 49:98]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 50:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 50:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 50:20]
        else :
          node _T_15 = bits(i, 0, 0)
          node _T_16 = bits(j, 0, 0)
          counterRegs1[_T_15][_T_16] <= UInt<1>("h1") @[SourceDestination.scala 53:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 54:18]
      else :
        node _T_17 = bits(i, 0, 0)
        node _T_18 = bits(j, 0, 0)
        counterRegs1[_T_17][_T_18] <= UInt<1>("h0") @[SourceDestination.scala 57:26]
      node _T_19 = bits(k, 0, 0)
      node _T_20 = neq(io.Streaming_matrix[_T_19], UInt<1>("h0")) @[SourceDestination.scala 60:34]
      when _T_20 : @[SourceDestination.scala 60:43]
        node _T_21 = lt(counter2, UInt<3>("h5")) @[SourceDestination.scala 61:22]
        when _T_21 : @[SourceDestination.scala 61:48]
          node _T_22 = sub(k, UInt<1>("h1")) @[SourceDestination.scala 62:24]
          node _T_23 = tail(_T_22, 1) @[SourceDestination.scala 62:24]
          node _T_24 = bits(_T_23, 0, 0)
          node _counterRegs2_T = sub(counter2, UInt<1>("h1")) @[SourceDestination.scala 62:43]
          node _counterRegs2_T_1 = tail(_counterRegs2_T, 1) @[SourceDestination.scala 62:43]
          counterRegs2[_T_24] <= _counterRegs2_T_1 @[SourceDestination.scala 62:31]
          node _T_25 = eq(j, UInt<1>("h1")) @[SourceDestination.scala 63:20]
          node _T_26 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 63:54]
          node _T_27 = and(_T_25, _T_26) @[SourceDestination.scala 63:48]
          node _T_28 = not(_T_27) @[SourceDestination.scala 63:15]
          when _T_28 : @[SourceDestination.scala 63:83]
            node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 64:32]
            node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 64:32]
            counter2 <= _counter2_T_1 @[SourceDestination.scala 64:20]
            node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 65:18]
            node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 65:18]
            k <= _k_T_1 @[SourceDestination.scala 65:13]
    node _reg_i_T = eq(j, UInt<1>("h1")) @[SourceDestination.scala 70:29]
    node _reg_i_T_1 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 70:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 70:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 70:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 70:24]
    node _valid1_T = eq(j, UInt<2>("h2")) @[SourceDestination.scala 71:23]
    node _valid1_T_1 = eq(i, UInt<2>("h2")) @[SourceDestination.scala 71:53]
    node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:47]
    node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:78]
    node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
    valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
    node _io_valid_T = eq(j, UInt<1>("h1")) @[SourceDestination.scala 72:21]
    node _io_valid_T_1 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 72:53]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 72:47]
    io.valid <= _io_valid_T_2 @[SourceDestination.scala 72:14]
    when io.Ivalid : @[SourceDestination.scala 78:16]
      node _T_29 = eq(k, UInt<2>("h2")) @[SourceDestination.scala 79:12]
      when _T_29 : @[SourceDestination.scala 79:36]
        k <= k @[SourceDestination.scala 80:9]
        counter2 <= counter2 @[SourceDestination.scala 81:16]
      node _T_30 = eq(j, UInt<1>("h1")) @[SourceDestination.scala 84:14]
      node _T_31 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 84:46]
      node _T_32 = and(_T_30, _T_31) @[SourceDestination.scala 84:40]
      when _T_32 : @[SourceDestination.scala 84:72]
        i <= i @[SourceDestination.scala 85:9]
        j <= j @[SourceDestination.scala 86:9]
      node _T_33 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 90:18]
      when _T_33 : @[SourceDestination.scala 90:26]
        node _T_34 = lt(j, UInt<1>("h1")) @[SourceDestination.scala 91:14]
        when _T_34 : @[SourceDestination.scala 91:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 92:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 92:16]
          j <= _j_T_1 @[SourceDestination.scala 92:11]
        else :
          node _T_35 = eq(j, UInt<1>("h1")) @[SourceDestination.scala 93:21]
          node _T_36 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 93:53]
          node _T_37 = and(_T_35, _T_36) @[SourceDestination.scala 93:47]
          when _T_37 : @[SourceDestination.scala 93:79]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 96:11]
            node _T_38 = lt(i, UInt<1>("h1")) @[SourceDestination.scala 97:16]
            when _T_38 : @[SourceDestination.scala 97:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 98:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 98:18]
              i <= _i_T_1 @[SourceDestination.scala 98:13]
      else :
        node _T_39 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 101:25]
        node _T_40 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 101:55]
        node _T_41 = and(_T_39, _T_40) @[SourceDestination.scala 101:34]
        when _T_41 : @[SourceDestination.scala 101:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 102:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 103:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 104:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 105:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 106:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 109:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 109:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 111:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 109:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 109:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 111:25]
    node _T_42 = eq(j, UInt<1>("h1")) @[SourceDestination.scala 117:14]
    node _T_43 = eq(i, UInt<1>("h1")) @[SourceDestination.scala 117:48]
    node _T_44 = and(_T_42, _T_43) @[SourceDestination.scala 117:42]
    when _T_44 : @[SourceDestination.scala 117:76]
      io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 118:31]
      io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 119:31]
    else :
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 121:31]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 122:31]
    io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 125:28]
    io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 126:28]

  module PathFinder :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[2][2], flip Streaming_matrix : UInt<16>[2], i_mux_bus : UInt<4>[4], Source : UInt<16>[4], destination : UInt<16>[4], PF_Valid : UInt<1>, flip Ivalid : UInt<1>}

    wire _counterRegs1_WIRE : UInt<16>[2] @[PathFinder.scala 18:70]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 18:70]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 18:70]
    wire _counterRegs1_WIRE_1 : UInt<16>[2] @[PathFinder.scala 18:70]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 18:70]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 18:70]
    wire _counterRegs1_WIRE_2 : UInt<16>[2][2] @[PathFinder.scala 18:37]
    _counterRegs1_WIRE_2[0] <= _counterRegs1_WIRE @[PathFinder.scala 18:37]
    _counterRegs1_WIRE_2[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 18:37]
    reg counterRegs1 : UInt<16>[2][2], clock with :
      reset => (reset, _counterRegs1_WIRE_2) @[PathFinder.scala 18:29]
    wire _counterRegs2_WIRE : UInt<16>[2] @[PathFinder.scala 19:37]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 19:37]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 19:37]
    reg counterRegs2 : UInt<16>[2], clock with :
      reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 19:29]
    when io.Ivalid : @[PathFinder.scala 21:17]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 22:22]
      inst myMuxes of Muxes @[PathFinder.scala 23:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      node _T = lt(delay, UInt<4>("h8")) @[PathFinder.scala 25:14]
      when _T : @[PathFinder.scala 25:83]
        node _delay_T = add(delay, UInt<1>("h1")) @[PathFinder.scala 26:20]
        node _delay_T_1 = tail(_delay_T, 1) @[PathFinder.scala 26:20]
        delay <= _delay_T_1 @[PathFinder.scala 26:11]
      inst myCounter of SourceDestination @[PathFinder.scala 29:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      myCounter.io.Ivalid <= io.Ivalid @[PathFinder.scala 30:23]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 31:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 31:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 31:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 31:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 32:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 32:33]
      node _T_1 = geq(delay, UInt<3>("h4")) @[PathFinder.scala 35:15]
      node _T_2 = and(_T_1, myCounter.io.counterMatrix1.valid) @[PathFinder.scala 35:55]
      node _T_3 = and(_T_2, myCounter.io.counterMatrix2.valid) @[PathFinder.scala 35:92]
      when _T_3 : @[PathFinder.scala 35:130]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 37:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 38:39]
        myMuxes.io.valid <= myCounter.io.valid @[PathFinder.scala 39:22]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 40:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 40:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 40:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 40:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 41:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 41:21]
        myMuxes.io.counterMatrix1 <= myCounter.io.counterMatrix1.bits @[PathFinder.scala 42:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 43:31]
        io.PF_Valid <= myMuxes.io.End @[PathFinder.scala 44:17]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 47:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 48:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 49:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 49:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 49:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 49:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 50:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 50:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 51:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 51:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 51:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 51:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 52:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 52:31]
        myMuxes.io.valid <= UInt<1>("h0") @[PathFinder.scala 53:22]
        io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 54:17]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 58:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 59:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 60:18]
    else :
      wire _WIRE : UInt<1>[4] @[PathFinder.scala 62:26]
      _WIRE[0] <= UInt<1>("h0") @[PathFinder.scala 62:26]
      _WIRE[1] <= UInt<1>("h0") @[PathFinder.scala 62:26]
      _WIRE[2] <= UInt<1>("h0") @[PathFinder.scala 62:26]
      _WIRE[3] <= UInt<1>("h0") @[PathFinder.scala 62:26]
      io.i_mux_bus <= _WIRE @[PathFinder.scala 62:16]
      wire _WIRE_1 : UInt<1>[4] @[PathFinder.scala 63:23]
      _WIRE_1[0] <= UInt<1>("h0") @[PathFinder.scala 63:23]
      _WIRE_1[1] <= UInt<1>("h0") @[PathFinder.scala 63:23]
      _WIRE_1[2] <= UInt<1>("h0") @[PathFinder.scala 63:23]
      _WIRE_1[3] <= UInt<1>("h0") @[PathFinder.scala 63:23]
      io.Source <= _WIRE_1 @[PathFinder.scala 63:13]
      wire _WIRE_2 : UInt<1>[4] @[PathFinder.scala 64:28]
      _WIRE_2[0] <= UInt<1>("h0") @[PathFinder.scala 64:28]
      _WIRE_2[1] <= UInt<1>("h0") @[PathFinder.scala 64:28]
      _WIRE_2[2] <= UInt<1>("h0") @[PathFinder.scala 64:28]
      _WIRE_2[3] <= UInt<1>("h0") @[PathFinder.scala 64:28]
      io.destination <= _WIRE_2 @[PathFinder.scala 64:18]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 65:15]

  module MuxesWrapper :
    input clock : Clock
    input reset : Reset
    output io : { flip valid : UInt<1>, flip src : UInt<32>[4], flip muxes : UInt<32>[4], Osrc : UInt<32>[4], Omuxes : UInt<32>[4][4]}

    wire _mat_WIRE : UInt<32>[4] @[MuxesWrapper.scala 14:51]
    _mat_WIRE[0] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE[1] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE[2] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE[3] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    wire _mat_WIRE_1 : UInt<32>[4] @[MuxesWrapper.scala 14:51]
    _mat_WIRE_1[0] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_1[1] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_1[2] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_1[3] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    wire _mat_WIRE_2 : UInt<32>[4] @[MuxesWrapper.scala 14:51]
    _mat_WIRE_2[0] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_2[1] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_2[2] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_2[3] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    wire _mat_WIRE_3 : UInt<32>[4] @[MuxesWrapper.scala 14:51]
    _mat_WIRE_3[0] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_3[1] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_3[2] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    _mat_WIRE_3[3] <= UInt<32>("h0") @[MuxesWrapper.scala 14:51]
    wire _mat_WIRE_4 : UInt<32>[4][4] @[MuxesWrapper.scala 14:31]
    _mat_WIRE_4[0] <= _mat_WIRE @[MuxesWrapper.scala 14:31]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[MuxesWrapper.scala 14:31]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[MuxesWrapper.scala 14:31]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[MuxesWrapper.scala 14:31]
    wire mat : UInt<32>[4][4]
    mat <= _mat_WIRE_4
    wire _src_WIRE : UInt<32>[4] @[MuxesWrapper.scala 15:31]
    _src_WIRE[0] <= UInt<32>("h0") @[MuxesWrapper.scala 15:31]
    _src_WIRE[1] <= UInt<32>("h0") @[MuxesWrapper.scala 15:31]
    _src_WIRE[2] <= UInt<32>("h0") @[MuxesWrapper.scala 15:31]
    _src_WIRE[3] <= UInt<32>("h0") @[MuxesWrapper.scala 15:31]
    wire src : UInt<32>[4]
    src <= _src_WIRE
    when io.valid : @[MuxesWrapper.scala 17:20]
      io.Omuxes <= mat @[MuxesWrapper.scala 18:19]
      io.Osrc <= src @[MuxesWrapper.scala 19:17]
      node _T = neq(io.src[0], UInt<1>("h0")) @[MuxesWrapper.scala 20:26]
      node _T_1 = neq(io.src[1], UInt<1>("h0")) @[MuxesWrapper.scala 20:49]
      node _T_2 = and(_T, _T_1) @[MuxesWrapper.scala 20:35]
      node _T_3 = neq(io.src[2], UInt<1>("h0")) @[MuxesWrapper.scala 20:72]
      node _T_4 = and(_T_2, _T_3) @[MuxesWrapper.scala 20:58]
      node _T_5 = neq(io.src[3], UInt<1>("h0")) @[MuxesWrapper.scala 20:95]
      node _T_6 = and(_T_4, _T_5) @[MuxesWrapper.scala 20:81]
      when _T_6 : @[MuxesWrapper.scala 20:104]
        node _T_7 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 21:25]
        node _T_8 = neq(_T_7, io.src[2]) @[MuxesWrapper.scala 21:39]
        node _T_9 = neq(_T_8, io.src[3]) @[MuxesWrapper.scala 21:53]
        when _T_9 : @[MuxesWrapper.scala 21:67]
          src <= io.src @[MuxesWrapper.scala 22:17]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 23:23]
          mat[1][0] <= io.muxes[1] @[MuxesWrapper.scala 24:23]
          mat[2][0] <= io.muxes[2] @[MuxesWrapper.scala 25:23]
          mat[3][0] <= io.muxes[3] @[MuxesWrapper.scala 26:23]
        node _T_10 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 28:26]
        node _T_11 = neq(io.src[1], io.src[2]) @[MuxesWrapper.scala 28:56]
        node _T_12 = and(_T_10, _T_11) @[MuxesWrapper.scala 28:41]
        node _T_13 = eq(io.src[2], io.src[3]) @[MuxesWrapper.scala 28:85]
        node _T_14 = and(_T_12, _T_13) @[MuxesWrapper.scala 28:71]
        when _T_14 : @[MuxesWrapper.scala 28:100]
          src[3] <= UInt<1>("h0") @[MuxesWrapper.scala 29:20]
          src[2] <= io.src[2] @[MuxesWrapper.scala 30:20]
          src[1] <= io.src[1] @[MuxesWrapper.scala 31:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 32:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 33:23]
          mat[1][0] <= io.muxes[1] @[MuxesWrapper.scala 34:23]
          mat[2][0] <= io.muxes[2] @[MuxesWrapper.scala 35:23]
          mat[2][1] <= io.muxes[3] @[MuxesWrapper.scala 36:23]
          mat[3][0] <= UInt<1>("h0") @[MuxesWrapper.scala 37:23]
        node _T_15 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 40:30]
        node _T_16 = neq(io.src[1], io.src[2]) @[MuxesWrapper.scala 40:60]
        node _T_17 = and(_T_15, _T_16) @[MuxesWrapper.scala 40:45]
        node _T_18 = eq(io.src[2], io.src[3]) @[MuxesWrapper.scala 40:89]
        node _T_19 = and(_T_17, _T_18) @[MuxesWrapper.scala 40:75]
        when _T_19 : @[MuxesWrapper.scala 40:104]
          src[2] <= UInt<1>("h0") @[MuxesWrapper.scala 41:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 42:20]
          src[1] <= io.src[2] @[MuxesWrapper.scala 43:20]
          src[3] <= UInt<1>("h0") @[MuxesWrapper.scala 44:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 45:23]
          mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 46:23]
          mat[1][0] <= io.muxes[2] @[MuxesWrapper.scala 47:23]
          mat[1][1] <= io.muxes[3] @[MuxesWrapper.scala 48:23]
        node _T_20 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 51:26]
        node _T_21 = neq(io.src[1], io.src[2]) @[MuxesWrapper.scala 51:56]
        node _T_22 = and(_T_20, _T_21) @[MuxesWrapper.scala 51:41]
        node _T_23 = neq(io.src[2], io.src[3]) @[MuxesWrapper.scala 51:85]
        node _T_24 = and(_T_22, _T_23) @[MuxesWrapper.scala 51:71]
        when _T_24 : @[MuxesWrapper.scala 51:100]
          src[3] <= UInt<1>("h0") @[MuxesWrapper.scala 52:20]
          src[2] <= io.src[3] @[MuxesWrapper.scala 53:20]
          src[1] <= io.src[2] @[MuxesWrapper.scala 54:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 55:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 56:23]
          mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 57:23]
          mat[1][0] <= io.muxes[2] @[MuxesWrapper.scala 58:23]
          mat[2][0] <= io.muxes[3] @[MuxesWrapper.scala 59:23]
          mat[3][0] <= UInt<1>("h0") @[MuxesWrapper.scala 60:23]
        node _T_25 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 65:30]
        node _T_26 = eq(io.src[1], io.src[2]) @[MuxesWrapper.scala 65:60]
        node _T_27 = and(_T_25, _T_26) @[MuxesWrapper.scala 65:45]
        node _T_28 = neq(io.src[2], io.src[3]) @[MuxesWrapper.scala 65:89]
        node _T_29 = and(_T_27, _T_28) @[MuxesWrapper.scala 65:75]
        when _T_29 : @[MuxesWrapper.scala 65:104]
          src[2] <= UInt<1>("h0") @[MuxesWrapper.scala 66:20]
          src[3] <= io.src[3] @[MuxesWrapper.scala 67:20]
          src[1] <= io.src[1] @[MuxesWrapper.scala 68:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 69:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 70:23]
          mat[1][0] <= io.muxes[1] @[MuxesWrapper.scala 71:23]
          mat[1][1] <= io.muxes[2] @[MuxesWrapper.scala 72:23]
          mat[2][0] <= UInt<1>("h0") @[MuxesWrapper.scala 73:23]
          mat[3][0] <= io.muxes[3] @[MuxesWrapper.scala 74:23]
        node _T_30 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 77:26]
        node _T_31 = eq(io.src[1], io.src[2]) @[MuxesWrapper.scala 77:56]
        node _T_32 = and(_T_30, _T_31) @[MuxesWrapper.scala 77:41]
        node _T_33 = eq(io.src[2], io.src[3]) @[MuxesWrapper.scala 77:85]
        node _T_34 = and(_T_32, _T_33) @[MuxesWrapper.scala 77:71]
        when _T_34 : @[MuxesWrapper.scala 77:100]
          src[2] <= UInt<1>("h0") @[MuxesWrapper.scala 78:20]
          src[3] <= UInt<1>("h0") @[MuxesWrapper.scala 79:20]
          src[1] <= io.src[1] @[MuxesWrapper.scala 80:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 81:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 82:23]
          mat[1][0] <= io.muxes[1] @[MuxesWrapper.scala 83:23]
          mat[1][1] <= io.muxes[2] @[MuxesWrapper.scala 84:23]
          mat[1][2] <= io.muxes[3] @[MuxesWrapper.scala 85:23]
          mat[2][0] <= UInt<1>("h0") @[MuxesWrapper.scala 86:23]
          mat[3][0] <= UInt<1>("h0") @[MuxesWrapper.scala 87:23]
        node _T_35 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 90:26]
        node _T_36 = eq(io.src[1], io.src[2]) @[MuxesWrapper.scala 90:56]
        node _T_37 = and(_T_35, _T_36) @[MuxesWrapper.scala 90:41]
        node _T_38 = neq(io.src[2], io.src[3]) @[MuxesWrapper.scala 90:85]
        node _T_39 = and(_T_37, _T_38) @[MuxesWrapper.scala 90:71]
        when _T_39 : @[MuxesWrapper.scala 90:100]
          src[2] <= UInt<1>("h0") @[MuxesWrapper.scala 91:20]
          src[3] <= io.src[3] @[MuxesWrapper.scala 92:20]
          src[1] <= UInt<1>("h0") @[MuxesWrapper.scala 93:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 94:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 95:23]
          mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 96:23]
          mat[0][2] <= io.muxes[2] @[MuxesWrapper.scala 97:23]
          mat[1][0] <= UInt<1>("h0") @[MuxesWrapper.scala 98:23]
          mat[2][0] <= UInt<1>("h0") @[MuxesWrapper.scala 99:23]
          mat[3][0] <= io.muxes[3] @[MuxesWrapper.scala 100:23]
        node _T_40 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 105:26]
        node _T_41 = eq(io.src[1], io.src[2]) @[MuxesWrapper.scala 105:56]
        node _T_42 = and(_T_40, _T_41) @[MuxesWrapper.scala 105:41]
        node _T_43 = eq(io.src[2], io.src[3]) @[MuxesWrapper.scala 105:85]
        node _T_44 = and(_T_42, _T_43) @[MuxesWrapper.scala 105:71]
        when _T_44 : @[MuxesWrapper.scala 105:100]
          src[2] <= UInt<1>("h0") @[MuxesWrapper.scala 106:20]
          src[3] <= UInt<1>("h0") @[MuxesWrapper.scala 107:20]
          src[1] <= UInt<1>("h0") @[MuxesWrapper.scala 108:20]
          src[0] <= io.src[0] @[MuxesWrapper.scala 109:20]
          mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 110:23]
          mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 111:23]
          mat[0][2] <= io.muxes[2] @[MuxesWrapper.scala 112:23]
          mat[0][3] <= io.muxes[3] @[MuxesWrapper.scala 113:23]
          mat[1][0] <= UInt<1>("h0") @[MuxesWrapper.scala 114:23]
          mat[2][0] <= UInt<1>("h0") @[MuxesWrapper.scala 115:23]
          mat[3][0] <= UInt<1>("h0") @[MuxesWrapper.scala 116:23]
      else :
        node _T_45 = neq(io.src[0], UInt<1>("h0")) @[MuxesWrapper.scala 119:32]
        node _T_46 = neq(io.src[1], UInt<1>("h0")) @[MuxesWrapper.scala 119:55]
        node _T_47 = and(_T_45, _T_46) @[MuxesWrapper.scala 119:41]
        node _T_48 = neq(io.src[2], UInt<1>("h0")) @[MuxesWrapper.scala 119:78]
        node _T_49 = and(_T_47, _T_48) @[MuxesWrapper.scala 119:64]
        node _T_50 = eq(io.src[3], UInt<1>("h0")) @[MuxesWrapper.scala 119:101]
        node _T_51 = and(_T_49, _T_50) @[MuxesWrapper.scala 119:87]
        when _T_51 : @[MuxesWrapper.scala 119:111]
          node _T_52 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 120:30]
          node _T_53 = neq(io.src[1], io.src[2]) @[MuxesWrapper.scala 120:60]
          node _T_54 = and(_T_52, _T_53) @[MuxesWrapper.scala 120:45]
          when _T_54 : @[MuxesWrapper.scala 120:75]
            src[1] <= io.src[2] @[MuxesWrapper.scala 121:24]
            src[0] <= io.src[0] @[MuxesWrapper.scala 122:24]
            mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 123:27]
            mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 124:27]
            mat[1][0] <= io.muxes[2] @[MuxesWrapper.scala 125:27]
          else :
            node _T_55 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 126:35]
            node _T_56 = eq(io.src[1], io.src[2]) @[MuxesWrapper.scala 126:65]
            node _T_57 = and(_T_55, _T_56) @[MuxesWrapper.scala 126:50]
            when _T_57 : @[MuxesWrapper.scala 126:80]
              src[1] <= io.src[1] @[MuxesWrapper.scala 127:24]
              src[0] <= io.src[0] @[MuxesWrapper.scala 128:24]
              mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 129:27]
              mat[1][0] <= io.muxes[1] @[MuxesWrapper.scala 130:27]
              mat[1][1] <= io.muxes[2] @[MuxesWrapper.scala 131:27]
        else :
          node _T_58 = neq(io.src[0], UInt<1>("h0")) @[MuxesWrapper.scala 133:32]
          node _T_59 = neq(io.src[1], UInt<1>("h0")) @[MuxesWrapper.scala 133:55]
          node _T_60 = and(_T_58, _T_59) @[MuxesWrapper.scala 133:41]
          node _T_61 = eq(io.src[2], UInt<1>("h0")) @[MuxesWrapper.scala 133:78]
          node _T_62 = and(_T_60, _T_61) @[MuxesWrapper.scala 133:64]
          node _T_63 = eq(io.src[3], UInt<1>("h0")) @[MuxesWrapper.scala 133:101]
          node _T_64 = and(_T_62, _T_63) @[MuxesWrapper.scala 133:87]
          when _T_64 : @[MuxesWrapper.scala 133:111]
            node _T_65 = eq(io.src[0], io.src[1]) @[MuxesWrapper.scala 134:30]
            when _T_65 : @[MuxesWrapper.scala 134:45]
              src[1] <= io.src[1] @[MuxesWrapper.scala 135:24]
              src[0] <= io.src[0] @[MuxesWrapper.scala 136:24]
              mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 137:27]
              mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 138:27]
            else :
              node _T_66 = neq(io.src[0], io.src[1]) @[MuxesWrapper.scala 139:35]
              when _T_66 : @[MuxesWrapper.scala 139:50]
                src[1] <= io.src[1] @[MuxesWrapper.scala 140:24]
                src[0] <= io.src[0] @[MuxesWrapper.scala 141:24]
                mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 142:27]
                mat[0][1] <= io.muxes[1] @[MuxesWrapper.scala 143:27]
          else :
            node _T_67 = neq(io.src[0], UInt<1>("h0")) @[MuxesWrapper.scala 145:32]
            node _T_68 = eq(io.src[1], UInt<1>("h0")) @[MuxesWrapper.scala 145:55]
            node _T_69 = and(_T_67, _T_68) @[MuxesWrapper.scala 145:41]
            node _T_70 = eq(io.src[2], UInt<1>("h0")) @[MuxesWrapper.scala 145:78]
            node _T_71 = and(_T_69, _T_70) @[MuxesWrapper.scala 145:64]
            node _T_72 = eq(io.src[3], UInt<1>("h0")) @[MuxesWrapper.scala 145:101]
            node _T_73 = and(_T_71, _T_72) @[MuxesWrapper.scala 145:87]
            when _T_73 : @[MuxesWrapper.scala 145:111]
              src[0] <= io.src[0] @[MuxesWrapper.scala 146:24]
              mat[0][0] <= io.muxes[0] @[MuxesWrapper.scala 147:27]
    else :
      wire _WIRE : UInt<1>[4] @[MuxesWrapper.scala 150:58]
      _WIRE[0] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE[1] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE[2] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE[3] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      wire _WIRE_1 : UInt<1>[4] @[MuxesWrapper.scala 150:58]
      _WIRE_1[0] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_1[1] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_1[2] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_1[3] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      wire _WIRE_2 : UInt<1>[4] @[MuxesWrapper.scala 150:58]
      _WIRE_2[0] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_2[1] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_2[2] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_2[3] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      wire _WIRE_3 : UInt<1>[4] @[MuxesWrapper.scala 150:58]
      _WIRE_3[0] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_3[1] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_3[2] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      _WIRE_3[3] <= UInt<1>("h0") @[MuxesWrapper.scala 150:58]
      wire _WIRE_4 : UInt<1>[4][4] @[MuxesWrapper.scala 150:38]
      _WIRE_4[0] <= _WIRE @[MuxesWrapper.scala 150:38]
      _WIRE_4[1] <= _WIRE_1 @[MuxesWrapper.scala 150:38]
      _WIRE_4[2] <= _WIRE_2 @[MuxesWrapper.scala 150:38]
      _WIRE_4[3] <= _WIRE_3 @[MuxesWrapper.scala 150:38]
      wire _WIRE_5 : UInt<1>[4][4]
      _WIRE_5 <= _WIRE_4
      io.Omuxes <= _WIRE_5 @[MuxesWrapper.scala 150:19]
      wire _WIRE_6 : UInt<1>[4] @[MuxesWrapper.scala 151:27]
      _WIRE_6[0] <= UInt<1>("h0") @[MuxesWrapper.scala 151:27]
      _WIRE_6[1] <= UInt<1>("h0") @[MuxesWrapper.scala 151:27]
      _WIRE_6[2] <= UInt<1>("h0") @[MuxesWrapper.scala 151:27]
      _WIRE_6[3] <= UInt<1>("h0") @[MuxesWrapper.scala 151:27]
      io.Osrc <= _WIRE_6 @[MuxesWrapper.scala 151:17]

  module ivncontrol4 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[2][2], o_vn : UInt<5>[4]}

    wire _i_vn_WIRE : UInt<5>[4] @[ivncontrol4.scala 15:31]
    _i_vn_WIRE[0] <= UInt<5>("h0") @[ivncontrol4.scala 15:31]
    _i_vn_WIRE[1] <= UInt<5>("h0") @[ivncontrol4.scala 15:31]
    _i_vn_WIRE[2] <= UInt<5>("h0") @[ivncontrol4.scala 15:31]
    _i_vn_WIRE[3] <= UInt<5>("h0") @[ivncontrol4.scala 15:31]
    reg i_vn : UInt<5>[4], clock with :
      reset => (reset, _i_vn_WIRE) @[ivncontrol4.scala 15:23]
    wire _rowcount_WIRE : UInt<32>[2] @[ivncontrol4.scala 19:35]
    _rowcount_WIRE[0] <= UInt<32>("h0") @[ivncontrol4.scala 19:35]
    _rowcount_WIRE[1] <= UInt<32>("h0") @[ivncontrol4.scala 19:35]
    reg rowcount : UInt<32>[2], clock with :
      reset => (reset, _rowcount_WIRE) @[ivncontrol4.scala 19:27]
    wire valid : UInt<1>
    valid <= UInt<1>("h0")
    wire valid1 : UInt<1>
    valid1 <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol4.scala 24:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol4.scala 25:20]
    wire rowlength : UInt
    rowlength <= UInt<1>("h0")
    wire matlength : UInt
    matlength <= UInt<1>("h0")
    reg mat : UInt<32>[2][2], clock with :
      reset => (UInt<1>("h0"), mat) @[ivncontrol4.scala 30:18]
    reg count : UInt<32>[2], clock with :
      reset => (UInt<1>("h0"), count) @[ivncontrol4.scala 34:20]
    node _T = bits(i, 0, 0)
    node _T_1 = bits(j, 0, 0)
    node _mat_T = bits(i, 0, 0)
    node _mat_T_1 = bits(j, 0, 0)
    mat[_T][_T_1] <= io.Stationary_matrix[_mat_T][_mat_T_1] @[ivncontrol4.scala 39:14]
    node _T_2 = bits(i, 0, 0)
    node _T_3 = bits(j, 0, 0)
    node _T_4 = neq(io.Stationary_matrix[_T_2][_T_3], UInt<1>("h0")) @[ivncontrol4.scala 41:43]
    node _T_5 = lt(j, UInt<2>("h2")) @[ivncontrol4.scala 41:57]
    node _T_6 = and(_T_4, _T_5) @[ivncontrol4.scala 41:51]
    when _T_6 : @[ivncontrol4.scala 41:79]
      node _T_7 = bits(i, 0, 0)
      node _count_T = bits(i, 0, 0)
      node _count_T_1 = add(count[_count_T], UInt<1>("h1")) @[ivncontrol4.scala 43:33]
      node _count_T_2 = tail(_count_T_1, 1) @[ivncontrol4.scala 43:33]
      count[_T_7] <= _count_T_2 @[ivncontrol4.scala 43:22]
    matlength <= UInt<2>("h2") @[ivncontrol4.scala 48:15]
    node _T_8 = eq(i, UInt<1>("h1")) @[ivncontrol4.scala 61:14]
    node _T_9 = eq(j, UInt<2>("h2")) @[ivncontrol4.scala 61:45]
    node _T_10 = and(_T_8, _T_9) @[ivncontrol4.scala 61:39]
    when _T_10 : @[ivncontrol4.scala 61:69]
      rowcount[0] <= count[0] @[ivncontrol4.scala 64:21]
      rowcount[1] <= count[1] @[ivncontrol4.scala 64:21]
    node _T_11 = lt(i, UInt<1>("h1")) @[ivncontrol4.scala 70:14]
    node _T_12 = eq(j, UInt<1>("h1")) @[ivncontrol4.scala 70:44]
    node _T_13 = and(_T_11, _T_12) @[ivncontrol4.scala 70:38]
    when _T_13 : @[ivncontrol4.scala 70:70]
      node _i_T = add(i, UInt<1>("h1")) @[ivncontrol4.scala 71:16]
      node _i_T_1 = tail(_i_T, 1) @[ivncontrol4.scala 71:16]
      i <= _i_T_1 @[ivncontrol4.scala 71:11]
    node _T_14 = lt(j, UInt<1>("h1")) @[ivncontrol4.scala 74:14]
    node _T_15 = leq(i, UInt<1>("h1")) @[ivncontrol4.scala 74:42]
    node _T_16 = and(_T_14, _T_15) @[ivncontrol4.scala 74:37]
    when _T_16 : @[ivncontrol4.scala 74:67]
      node _j_T = add(j, UInt<1>("h1")) @[ivncontrol4.scala 75:16]
      node _j_T_1 = tail(_j_T, 1) @[ivncontrol4.scala 75:16]
      j <= _j_T_1 @[ivncontrol4.scala 75:11]
    else :
      node _T_17 = eq(i, UInt<1>("h1")) @[ivncontrol4.scala 77:18]
      node _T_18 = eq(j, UInt<1>("h1")) @[ivncontrol4.scala 77:49]
      node _T_19 = and(_T_17, _T_18) @[ivncontrol4.scala 77:43]
      when _T_19 : @[ivncontrol4.scala 77:75]
        node _j_T_2 = add(j, UInt<1>("h1")) @[ivncontrol4.scala 78:15]
        node _j_T_3 = tail(_j_T_2, 1) @[ivncontrol4.scala 78:15]
        j <= _j_T_3 @[ivncontrol4.scala 78:11]
      else :
        node _T_20 = eq(i, UInt<1>("h1")) @[ivncontrol4.scala 79:18]
        node _T_21 = eq(j, UInt<2>("h2")) @[ivncontrol4.scala 79:49]
        node _T_22 = and(_T_20, _T_21) @[ivncontrol4.scala 79:43]
        when _T_22 : @[ivncontrol4.scala 79:73]
          j <= j @[ivncontrol4.scala 80:11]
        else :
          j <= UInt<1>("h0") @[ivncontrol4.scala 83:11]
    io.o_vn <= i_vn @[ivncontrol4.scala 90:13]
    i_vn[0] <= UInt<5>("h1c") @[ivncontrol4.scala 93:17]
    i_vn[1] <= UInt<5>("h10") @[ivncontrol4.scala 93:17]
    i_vn[2] <= UInt<5>("h12") @[ivncontrol4.scala 93:17]
    i_vn[3] <= UInt<5>("h8") @[ivncontrol4.scala 93:17]
    node _T_23 = eq(i, UInt<1>("h1")) @[ivncontrol4.scala 103:14]
    node _T_24 = eq(j, UInt<1>("h1")) @[ivncontrol4.scala 103:45]
    node _T_25 = and(_T_23, _T_24) @[ivncontrol4.scala 103:39]
    when _T_25 : @[ivncontrol4.scala 103:71]
      valid <= UInt<1>("h1") @[ivncontrol4.scala 104:14]
    else :
      valid <= UInt<1>("h0") @[ivncontrol4.scala 106:14]
    rowlength <= UInt<2>("h2") @[ivncontrol4.scala 110:16]
    node _T_26 = eq(rowcount[0], UInt<2>("h2")) @[ivncontrol4.scala 117:29]
    when _T_26 : @[ivncontrol4.scala 117:38]
      i_vn[0] <= UInt<1>("h0") @[ivncontrol4.scala 118:25]
      i_vn[1] <= UInt<1>("h0") @[ivncontrol4.scala 119:25]
      node _T_27 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol4.scala 120:34]
      when _T_27 : @[ivncontrol4.scala 120:42]
        i_vn[2] <= UInt<1>("h1") @[ivncontrol4.scala 121:29]
        i_vn[3] <= UInt<1>("h1") @[ivncontrol4.scala 122:29]
    else :
      node _T_28 = eq(rowcount[0], UInt<1>("h1")) @[ivncontrol4.scala 126:35]
      when _T_28 : @[ivncontrol4.scala 126:43]
        i_vn[0] <= UInt<1>("h0") @[ivncontrol4.scala 127:25]
        node _T_29 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol4.scala 128:33]
        when _T_29 : @[ivncontrol4.scala 128:40]
          i_vn[1] <= UInt<1>("h1") @[ivncontrol4.scala 129:29]
        else :
          node _T_30 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol4.scala 131:39]
          when _T_30 : @[ivncontrol4.scala 131:46]
            i_vn[1] <= UInt<1>("h1") @[ivncontrol4.scala 132:29]
            i_vn[2] <= UInt<1>("h1") @[ivncontrol4.scala 133:29]
      else :
        node _T_31 = eq(rowcount[0], UInt<1>("h0")) @[ivncontrol4.scala 144:35]
        when _T_31 : @[ivncontrol4.scala 144:43]
          node _T_32 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol4.scala 145:33]
          when _T_32 : @[ivncontrol4.scala 145:41]
            i_vn[0] <= UInt<1>("h1") @[ivncontrol4.scala 146:29]
            i_vn[1] <= UInt<1>("h1") @[ivncontrol4.scala 147:29]
          else :
            node _T_33 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol4.scala 149:39]
            when _T_33 : @[ivncontrol4.scala 149:46]
              i_vn[0] <= UInt<1>("h1") @[ivncontrol4.scala 150:29]

  module fancontrol4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, o_reduction_add : UInt[3], o_reduction_cmd : UInt<3>[3], o_reduction_valid : UInt<1>}

    wire _r_reduction_add_WIRE : UInt<1>[3] @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    reg r_reduction_add : UInt<1>[3], clock with :
      reset => (reset, _r_reduction_add_WIRE) @[FanCtrl.scala 19:34]
    wire _r_reduction_cmd_WIRE : UInt<3>[3] @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    reg r_reduction_cmd : UInt<3>[3], clock with :
      reset => (reset, _r_reduction_cmd_WIRE) @[FanCtrl.scala 20:34]
    wire _r_add_lvl_0Reg_WIRE : UInt<1>[8] @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[5] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[6] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[7] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    reg r_add_lvl_0Reg : UInt<1>[8], clock with :
      reset => (reset, _r_add_lvl_0Reg_WIRE) @[FanCtrl.scala 23:33]
    wire _r_add_lvl_1Reg_WIRE : UInt<1>[5] @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    reg r_add_lvl_1Reg : UInt<1>[5], clock with :
      reset => (reset, _r_add_lvl_1Reg_WIRE) @[FanCtrl.scala 24:33]
    wire _r_cmd_lvl_0Reg_WIRE : UInt<3>[8] @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[5] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[6] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[7] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    reg r_cmd_lvl_0Reg : UInt<3>[8], clock with :
      reset => (reset, _r_cmd_lvl_0Reg_WIRE) @[FanCtrl.scala 27:33]
    wire _r_cmd_lvl_1Reg_WIRE : UInt<3>[5] @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    reg r_cmd_lvl_1Reg : UInt<3>[5], clock with :
      reset => (reset, _r_cmd_lvl_1Reg_WIRE) @[FanCtrl.scala 28:33]
    wire _w_vn_WIRE : UInt<5>[4] @[FanCtrl.scala 34:31]
    _w_vn_WIRE[0] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[1] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[2] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[3] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    reg w_vn : UInt<5>[4], clock with :
      reset => (reset, _w_vn_WIRE) @[FanCtrl.scala 34:23]
    wire _r_valid_WIRE : UInt<1>[5] @[FanCtrl.scala 35:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    reg r_valid : UInt<1>[5], clock with :
      reset => (reset, _r_valid_WIRE) @[FanCtrl.scala 35:26]
    w_vn <= io.i_vn @[FanCtrl.scala 37:10]
    node _T = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T : @[FanCtrl.scala 40:25]
      node _T_1 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_1 : @[FanCtrl.scala 41:34]
        node _T_2 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:25]
        node _T_3 = add(_T_2, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_4 = tail(_T_3, 1) @[FanCtrl.scala 42:31]
        node _T_5 = bits(_T_4, 1, 0)
        node _T_6 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:52]
        node _T_7 = add(_T_6, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_8 = tail(_T_7, 1) @[FanCtrl.scala 42:58]
        node _T_9 = bits(_T_8, 1, 0)
        node _T_10 = eq(w_vn[_T_5], w_vn[_T_9]) @[FanCtrl.scala 42:39]
        when _T_10 : @[FanCtrl.scala 42:66]
          node _T_11 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 43:34]
          node _T_12 = tail(_T_11, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_12] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_13 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 45:32]
          node _T_14 = tail(_T_13, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_14] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_15 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 48:28]
        node _T_16 = add(_T_15, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_17 = tail(_T_16, 1) @[FanCtrl.scala 48:34]
        node _T_18 = bits(_T_17, 1, 0)
        node _T_19 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 49:26]
        node _T_20 = add(_T_19, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_21 = tail(_T_20, 1) @[FanCtrl.scala 49:32]
        node _T_22 = bits(_T_21, 1, 0)
        node _T_23 = neq(w_vn[_T_18], w_vn[_T_22]) @[FanCtrl.scala 48:41]
        node _T_24 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 50:27]
        node _T_25 = add(_T_24, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_26 = tail(_T_25, 1) @[FanCtrl.scala 50:33]
        node _T_27 = bits(_T_26, 1, 0)
        node _T_28 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 51:26]
        node _T_29 = add(_T_28, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_30 = tail(_T_29, 1) @[FanCtrl.scala 51:32]
        node _T_31 = bits(_T_30, 1, 0)
        node _T_32 = neq(w_vn[_T_27], w_vn[_T_31]) @[FanCtrl.scala 50:41]
        node _T_33 = and(_T_23, _T_32) @[FanCtrl.scala 49:41]
        when _T_33 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_34 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 55:34]
          node _T_35 = add(_T_34, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_36 = tail(_T_35, 1) @[FanCtrl.scala 55:40]
          node _T_37 = bits(_T_36, 1, 0)
          node _T_38 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 56:32]
          node _T_39 = add(_T_38, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_40 = tail(_T_39, 1) @[FanCtrl.scala 56:38]
          node _T_41 = bits(_T_40, 1, 0)
          node _T_42 = eq(w_vn[_T_37], w_vn[_T_41]) @[FanCtrl.scala 55:48]
          node _T_43 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 57:33]
          node _T_44 = add(_T_43, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_45 = tail(_T_44, 1) @[FanCtrl.scala 57:39]
          node _T_46 = bits(_T_45, 1, 0)
          node _T_47 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 58:32]
          node _T_48 = add(_T_47, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_49 = tail(_T_48, 1) @[FanCtrl.scala 58:38]
          node _T_50 = bits(_T_49, 1, 0)
          node _T_51 = neq(w_vn[_T_46], w_vn[_T_50]) @[FanCtrl.scala 57:46]
          node _T_52 = and(_T_42, _T_51) @[FanCtrl.scala 56:46]
          when _T_52 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_53 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 67:32]
        node _T_54 = tail(_T_53, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_54] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_55 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 77:29]
      node _T_56 = tail(_T_55, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_56] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_57 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_57 : @[FanCtrl.scala 81:34]
        node _T_58 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:25]
        node _T_59 = add(_T_58, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_60 = tail(_T_59, 1) @[FanCtrl.scala 82:31]
        node _T_61 = bits(_T_60, 1, 0)
        node _T_62 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:52]
        node _T_63 = add(_T_62, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_64 = tail(_T_63, 1) @[FanCtrl.scala 82:58]
        node _T_65 = bits(_T_64, 1, 0)
        node _T_66 = eq(w_vn[_T_61], w_vn[_T_65]) @[FanCtrl.scala 82:39]
        when _T_66 : @[FanCtrl.scala 82:66]
          node _T_67 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 83:33]
          node _T_68 = tail(_T_67, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_68] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_69 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 85:33]
          node _T_70 = tail(_T_69, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_70] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_71 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:26]
        node _T_72 = add(_T_71, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_73 = tail(_T_72, 1) @[FanCtrl.scala 88:32]
        node _T_74 = bits(_T_73, 1, 0)
        node _T_75 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:52]
        node _T_76 = sub(_T_75, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_77 = tail(_T_76, 1) @[FanCtrl.scala 88:58]
        node _T_78 = bits(_T_77, 1, 0)
        node _T_79 = neq(w_vn[_T_74], w_vn[_T_78]) @[FanCtrl.scala 88:39]
        node _T_80 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:23]
        node _T_81 = add(_T_80, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_82 = tail(_T_81, 1) @[FanCtrl.scala 89:29]
        node _T_83 = bits(_T_82, 1, 0)
        node _T_84 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:50]
        node _T_85 = add(_T_84, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_86 = tail(_T_85, 1) @[FanCtrl.scala 89:56]
        node _T_87 = bits(_T_86, 1, 0)
        node _T_88 = neq(w_vn[_T_83], w_vn[_T_87]) @[FanCtrl.scala 89:37]
        node _T_89 = and(_T_79, _T_88) @[FanCtrl.scala 88:67]
        when _T_89 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_90 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:32]
          node _T_91 = add(_T_90, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_92 = tail(_T_91, 1) @[FanCtrl.scala 93:38]
          node _T_93 = bits(_T_92, 1, 0)
          node _T_94 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:59]
          node _T_95 = sub(_T_94, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_96 = tail(_T_95, 1) @[FanCtrl.scala 93:65]
          node _T_97 = bits(_T_96, 1, 0)
          node _T_98 = eq(w_vn[_T_93], w_vn[_T_97]) @[FanCtrl.scala 93:46]
          node _T_99 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:23]
          node _T_100 = add(_T_99, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_101 = tail(_T_100, 1) @[FanCtrl.scala 94:29]
          node _T_102 = bits(_T_101, 1, 0)
          node _T_103 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:50]
          node _T_104 = add(_T_103, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_105 = tail(_T_104, 1) @[FanCtrl.scala 94:56]
          node _T_106 = bits(_T_105, 1, 0)
          node _T_107 = neq(w_vn[_T_102], w_vn[_T_106]) @[FanCtrl.scala 94:37]
          node _T_108 = and(_T_98, _T_107) @[FanCtrl.scala 93:73]
          when _T_108 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_109 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 102:31]
        node _T_110 = tail(_T_109, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_110] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_111 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T_111 : @[FanCtrl.scala 40:25]
      node _T_112 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_112 : @[FanCtrl.scala 41:34]
        node _T_113 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:25]
        node _T_114 = add(_T_113, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_115 = tail(_T_114, 1) @[FanCtrl.scala 42:31]
        node _T_116 = bits(_T_115, 1, 0)
        node _T_117 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:52]
        node _T_118 = add(_T_117, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_119 = tail(_T_118, 1) @[FanCtrl.scala 42:58]
        node _T_120 = bits(_T_119, 1, 0)
        node _T_121 = eq(w_vn[_T_116], w_vn[_T_120]) @[FanCtrl.scala 42:39]
        when _T_121 : @[FanCtrl.scala 42:66]
          node _T_122 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 43:34]
          node _T_123 = tail(_T_122, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_123] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_124 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 45:32]
          node _T_125 = tail(_T_124, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_125] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_126 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 48:28]
        node _T_127 = add(_T_126, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_128 = tail(_T_127, 1) @[FanCtrl.scala 48:34]
        node _T_129 = bits(_T_128, 1, 0)
        node _T_130 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 49:26]
        node _T_131 = add(_T_130, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_132 = tail(_T_131, 1) @[FanCtrl.scala 49:32]
        node _T_133 = bits(_T_132, 1, 0)
        node _T_134 = neq(w_vn[_T_129], w_vn[_T_133]) @[FanCtrl.scala 48:41]
        node _T_135 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 50:27]
        node _T_136 = add(_T_135, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_137 = tail(_T_136, 1) @[FanCtrl.scala 50:33]
        node _T_138 = bits(_T_137, 1, 0)
        node _T_139 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 51:26]
        node _T_140 = add(_T_139, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_141 = tail(_T_140, 1) @[FanCtrl.scala 51:32]
        node _T_142 = bits(_T_141, 1, 0)
        node _T_143 = neq(w_vn[_T_138], w_vn[_T_142]) @[FanCtrl.scala 50:41]
        node _T_144 = and(_T_134, _T_143) @[FanCtrl.scala 49:41]
        when _T_144 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_145 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 55:34]
          node _T_146 = add(_T_145, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_147 = tail(_T_146, 1) @[FanCtrl.scala 55:40]
          node _T_148 = bits(_T_147, 1, 0)
          node _T_149 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 56:32]
          node _T_150 = add(_T_149, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_151 = tail(_T_150, 1) @[FanCtrl.scala 56:38]
          node _T_152 = bits(_T_151, 1, 0)
          node _T_153 = eq(w_vn[_T_148], w_vn[_T_152]) @[FanCtrl.scala 55:48]
          node _T_154 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 57:33]
          node _T_155 = add(_T_154, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_156 = tail(_T_155, 1) @[FanCtrl.scala 57:39]
          node _T_157 = bits(_T_156, 1, 0)
          node _T_158 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 58:32]
          node _T_159 = add(_T_158, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_160 = tail(_T_159, 1) @[FanCtrl.scala 58:38]
          node _T_161 = bits(_T_160, 1, 0)
          node _T_162 = neq(w_vn[_T_157], w_vn[_T_161]) @[FanCtrl.scala 57:46]
          node _T_163 = and(_T_153, _T_162) @[FanCtrl.scala 56:46]
          when _T_163 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_164 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 67:32]
        node _T_165 = tail(_T_164, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_165] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_166 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 77:29]
      node _T_167 = tail(_T_166, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_167] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_168 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_168 : @[FanCtrl.scala 81:34]
        node _T_169 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:25]
        node _T_170 = add(_T_169, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_171 = tail(_T_170, 1) @[FanCtrl.scala 82:31]
        node _T_172 = bits(_T_171, 1, 0)
        node _T_173 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:52]
        node _T_174 = add(_T_173, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_175 = tail(_T_174, 1) @[FanCtrl.scala 82:58]
        node _T_176 = bits(_T_175, 1, 0)
        node _T_177 = eq(w_vn[_T_172], w_vn[_T_176]) @[FanCtrl.scala 82:39]
        when _T_177 : @[FanCtrl.scala 82:66]
          node _T_178 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 83:33]
          node _T_179 = tail(_T_178, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_179] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_180 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 85:33]
          node _T_181 = tail(_T_180, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_181] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_182 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:26]
        node _T_183 = add(_T_182, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_184 = tail(_T_183, 1) @[FanCtrl.scala 88:32]
        node _T_185 = bits(_T_184, 1, 0)
        node _T_186 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:52]
        node _T_187 = sub(_T_186, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_188 = tail(_T_187, 1) @[FanCtrl.scala 88:58]
        node _T_189 = bits(_T_188, 1, 0)
        node _T_190 = neq(w_vn[_T_185], w_vn[_T_189]) @[FanCtrl.scala 88:39]
        node _T_191 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:23]
        node _T_192 = add(_T_191, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_193 = tail(_T_192, 1) @[FanCtrl.scala 89:29]
        node _T_194 = bits(_T_193, 1, 0)
        node _T_195 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:50]
        node _T_196 = add(_T_195, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_197 = tail(_T_196, 1) @[FanCtrl.scala 89:56]
        node _T_198 = bits(_T_197, 1, 0)
        node _T_199 = neq(w_vn[_T_194], w_vn[_T_198]) @[FanCtrl.scala 89:37]
        node _T_200 = and(_T_190, _T_199) @[FanCtrl.scala 88:67]
        when _T_200 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_201 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:32]
          node _T_202 = add(_T_201, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_203 = tail(_T_202, 1) @[FanCtrl.scala 93:38]
          node _T_204 = bits(_T_203, 1, 0)
          node _T_205 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:59]
          node _T_206 = sub(_T_205, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_207 = tail(_T_206, 1) @[FanCtrl.scala 93:65]
          node _T_208 = bits(_T_207, 1, 0)
          node _T_209 = eq(w_vn[_T_204], w_vn[_T_208]) @[FanCtrl.scala 93:46]
          node _T_210 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:23]
          node _T_211 = add(_T_210, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_212 = tail(_T_211, 1) @[FanCtrl.scala 94:29]
          node _T_213 = bits(_T_212, 1, 0)
          node _T_214 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:50]
          node _T_215 = add(_T_214, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_216 = tail(_T_215, 1) @[FanCtrl.scala 94:56]
          node _T_217 = bits(_T_216, 1, 0)
          node _T_218 = neq(w_vn[_T_213], w_vn[_T_217]) @[FanCtrl.scala 94:37]
          node _T_219 = and(_T_209, _T_218) @[FanCtrl.scala 93:73]
          when _T_219 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_220 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 102:31]
        node _T_221 = tail(_T_220, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_221] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_222 = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 112:14]
    when _T_222 : @[FanCtrl.scala 112:23]
      node _T_223 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 113:27]
      node _T_224 = tail(_T_223, 1) @[FanCtrl.scala 113:27]
      r_reduction_add[_T_224] <= UInt<1>("h0") @[FanCtrl.scala 113:34]
      node _T_225 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 114:28]
      node _T_226 = tail(_T_225, 1) @[FanCtrl.scala 114:28]
      r_reduction_cmd[_T_226] <= UInt<1>("h0") @[FanCtrl.scala 114:35]
      node _T_227 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 116:23]
      when _T_227 : @[FanCtrl.scala 116:32]
        node _T_228 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:23]
        node _T_229 = add(_T_228, UInt<1>("h1")) @[FanCtrl.scala 117:29]
        node _T_230 = tail(_T_229, 1) @[FanCtrl.scala 117:29]
        node _T_231 = bits(_T_230, 1, 0)
        node _T_232 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:50]
        node _T_233 = add(_T_232, UInt<2>("h2")) @[FanCtrl.scala 117:56]
        node _T_234 = tail(_T_233, 1) @[FanCtrl.scala 117:56]
        node _T_235 = bits(_T_234, 1, 0)
        node _T_236 = eq(w_vn[_T_231], w_vn[_T_235]) @[FanCtrl.scala 117:37]
        when _T_236 : @[FanCtrl.scala 117:65]
          node _T_237 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 118:31]
          node _T_238 = tail(_T_237, 1) @[FanCtrl.scala 118:31]
          r_reduction_add[_T_238] <= UInt<1>("h1") @[FanCtrl.scala 118:38]
        else :
          node _T_239 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 120:31]
          node _T_240 = tail(_T_239, 1) @[FanCtrl.scala 120:31]
          r_reduction_add[_T_240] <= UInt<1>("h0") @[FanCtrl.scala 120:38]
        node _T_241 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:24]
        node _T_242 = add(_T_241, UInt<1>("h0")) @[FanCtrl.scala 123:30]
        node _T_243 = tail(_T_242, 1) @[FanCtrl.scala 123:30]
        node _T_244 = bits(_T_243, 1, 0)
        node _T_245 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:51]
        node _T_246 = add(_T_245, UInt<1>("h1")) @[FanCtrl.scala 123:57]
        node _T_247 = tail(_T_246, 1) @[FanCtrl.scala 123:57]
        node _T_248 = bits(_T_247, 1, 0)
        node _T_249 = eq(w_vn[_T_244], w_vn[_T_248]) @[FanCtrl.scala 123:38]
        node _T_250 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:23]
        node _T_251 = add(_T_250, UInt<2>("h2")) @[FanCtrl.scala 124:29]
        node _T_252 = tail(_T_251, 1) @[FanCtrl.scala 124:29]
        node _T_253 = bits(_T_252, 1, 0)
        node _T_254 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:49]
        node _T_255 = add(_T_254, UInt<2>("h3")) @[FanCtrl.scala 124:55]
        node _T_256 = tail(_T_255, 1) @[FanCtrl.scala 124:55]
        node _T_257 = bits(_T_256, 1, 0)
        node _T_258 = eq(w_vn[_T_253], w_vn[_T_257]) @[FanCtrl.scala 124:36]
        node _T_259 = and(_T_249, _T_258) @[FanCtrl.scala 123:65]
        node _T_260 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:23]
        node _T_261 = add(_T_260, UInt<3>("h4")) @[FanCtrl.scala 125:29]
        node _T_262 = tail(_T_261, 1) @[FanCtrl.scala 125:29]
        node _T_263 = bits(_T_262, 1, 0)
        node _T_264 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:50]
        node _T_265 = add(_T_264, UInt<2>("h3")) @[FanCtrl.scala 125:56]
        node _T_266 = tail(_T_265, 1) @[FanCtrl.scala 125:56]
        node _T_267 = bits(_T_266, 1, 0)
        node _T_268 = neq(w_vn[_T_263], w_vn[_T_267]) @[FanCtrl.scala 125:37]
        node _T_269 = and(_T_259, _T_268) @[FanCtrl.scala 124:64]
        node _T_270 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:23]
        node _T_271 = add(_T_270, UInt<1>("h1")) @[FanCtrl.scala 126:29]
        node _T_272 = tail(_T_271, 1) @[FanCtrl.scala 126:29]
        node _T_273 = bits(_T_272, 1, 0)
        node _T_274 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:51]
        node _T_275 = add(_T_274, UInt<2>("h2")) @[FanCtrl.scala 126:57]
        node _T_276 = tail(_T_275, 1) @[FanCtrl.scala 126:57]
        node _T_277 = bits(_T_276, 1, 0)
        node _T_278 = neq(w_vn[_T_273], w_vn[_T_277]) @[FanCtrl.scala 126:37]
        node _T_279 = and(_T_269, _T_278) @[FanCtrl.scala 125:64]
        when _T_279 : @[FanCtrl.scala 126:66]
          node _T_280 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 128:31]
          node _T_281 = tail(_T_280, 1) @[FanCtrl.scala 128:31]
          r_reduction_cmd[_T_281] <= UInt<3>("h5") @[FanCtrl.scala 128:39]
        else :
          node _T_282 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:30]
          node _T_283 = add(_T_282, UInt<2>("h2")) @[FanCtrl.scala 130:36]
          node _T_284 = tail(_T_283, 1) @[FanCtrl.scala 130:36]
          node _T_285 = bits(_T_284, 1, 0)
          node _T_286 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:57]
          node _T_287 = add(_T_286, UInt<2>("h3")) @[FanCtrl.scala 130:63]
          node _T_288 = tail(_T_287, 1) @[FanCtrl.scala 130:63]
          node _T_289 = bits(_T_288, 1, 0)
          node _T_290 = eq(w_vn[_T_285], w_vn[_T_289]) @[FanCtrl.scala 130:44]
          node _T_291 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:29]
          node _T_292 = add(_T_291, UInt<3>("h4")) @[FanCtrl.scala 131:35]
          node _T_293 = tail(_T_292, 1) @[FanCtrl.scala 131:35]
          node _T_294 = bits(_T_293, 1, 0)
          node _T_295 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:57]
          node _T_296 = add(_T_295, UInt<2>("h3")) @[FanCtrl.scala 131:63]
          node _T_297 = tail(_T_296, 1) @[FanCtrl.scala 131:63]
          node _T_298 = bits(_T_297, 1, 0)
          node _T_299 = neq(w_vn[_T_294], w_vn[_T_298]) @[FanCtrl.scala 131:43]
          node _T_300 = and(_T_290, _T_299) @[FanCtrl.scala 130:71]
          node _T_301 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:29]
          node _T_302 = add(_T_301, UInt<1>("h1")) @[FanCtrl.scala 132:35]
          node _T_303 = tail(_T_302, 1) @[FanCtrl.scala 132:35]
          node _T_304 = bits(_T_303, 1, 0)
          node _T_305 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:57]
          node _T_306 = add(_T_305, UInt<2>("h2")) @[FanCtrl.scala 132:63]
          node _T_307 = tail(_T_306, 1) @[FanCtrl.scala 132:63]
          node _T_308 = bits(_T_307, 1, 0)
          node _T_309 = neq(w_vn[_T_304], w_vn[_T_308]) @[FanCtrl.scala 132:43]
          node _T_310 = and(_T_300, _T_309) @[FanCtrl.scala 131:71]
          when _T_310 : @[FanCtrl.scala 132:72]
            node _T_311 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 134:31]
            node _T_312 = tail(_T_311, 1) @[FanCtrl.scala 134:31]
            r_reduction_cmd[_T_312] <= UInt<3>("h4") @[FanCtrl.scala 134:38]
          else :
            node _T_313 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:30]
            node _T_314 = add(_T_313, UInt<1>("h0")) @[FanCtrl.scala 136:36]
            node _T_315 = tail(_T_314, 1) @[FanCtrl.scala 136:36]
            node _T_316 = bits(_T_315, 1, 0)
            node _T_317 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:56]
            node _T_318 = add(_T_317, UInt<1>("h1")) @[FanCtrl.scala 136:62]
            node _T_319 = tail(_T_318, 1) @[FanCtrl.scala 136:62]
            node _T_320 = bits(_T_319, 1, 0)
            node _T_321 = eq(w_vn[_T_316], w_vn[_T_320]) @[FanCtrl.scala 136:43]
            node _T_322 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:29]
            node _T_323 = add(_T_322, UInt<1>("h1")) @[FanCtrl.scala 137:35]
            node _T_324 = tail(_T_323, 1) @[FanCtrl.scala 137:35]
            node _T_325 = bits(_T_324, 1, 0)
            node _T_326 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:57]
            node _T_327 = add(_T_326, UInt<2>("h2")) @[FanCtrl.scala 137:63]
            node _T_328 = tail(_T_327, 1) @[FanCtrl.scala 137:63]
            node _T_329 = bits(_T_328, 1, 0)
            node _T_330 = neq(w_vn[_T_325], w_vn[_T_329]) @[FanCtrl.scala 137:43]
            node _T_331 = and(_T_321, _T_330) @[FanCtrl.scala 136:71]
            when _T_331 : @[FanCtrl.scala 137:72]
              node _T_332 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 139:31]
              node _T_333 = tail(_T_332, 1) @[FanCtrl.scala 139:31]
              r_reduction_cmd[_T_333] <= UInt<2>("h3") @[FanCtrl.scala 139:38]
            else :
              node _T_334 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 141:30]
              node _T_335 = tail(_T_334, 1) @[FanCtrl.scala 141:30]
              r_reduction_cmd[_T_335] <= UInt<1>("h0") @[FanCtrl.scala 141:36]
      else :
        node _T_336 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 144:29]
        node _T_337 = tail(_T_336, 1) @[FanCtrl.scala 144:29]
        r_reduction_add[_T_337] <= UInt<1>("h0") @[FanCtrl.scala 144:36]
        node _T_338 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 145:30]
        node _T_339 = tail(_T_338, 1) @[FanCtrl.scala 145:30]
        r_reduction_cmd[_T_339] <= UInt<1>("h0") @[FanCtrl.scala 145:37]
    wire _WIRE : UInt<1>[8] @[FanCtrl.scala 157:30]
    _WIRE[0] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[1] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[2] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[3] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[4] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[5] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[6] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[7] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    r_add_lvl_0Reg <= _WIRE @[FanCtrl.scala 157:20]
    wire _WIRE_1 : UInt<1>[5] @[FanCtrl.scala 168:30]
    _WIRE_1[0] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[1] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[2] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[3] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[4] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    r_add_lvl_1Reg <= _WIRE_1 @[FanCtrl.scala 168:20]
    wire _WIRE_2 : UInt<3>[8] @[FanCtrl.scala 185:30]
    _WIRE_2[0] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[1] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[2] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[3] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[4] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[5] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[6] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[7] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    r_cmd_lvl_0Reg <= _WIRE_2 @[FanCtrl.scala 185:20]
    wire _WIRE_3 : UInt<3>[5] @[FanCtrl.scala 199:30]
    _WIRE_3[0] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[1] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[2] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[3] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[4] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    r_cmd_lvl_1Reg <= _WIRE_3 @[FanCtrl.scala 199:20]
    node _T_340 = eq(io.i_stationary, UInt<1>("h0")) @[FanCtrl.scala 213:26]
    node _T_341 = eq(io.i_data_valid, UInt<1>("h1")) @[FanCtrl.scala 213:53]
    node _T_342 = and(_T_340, _T_341) @[FanCtrl.scala 213:34]
    when _T_342 : @[FanCtrl.scala 213:62]
      r_valid[0] <= UInt<1>("h1") @[FanCtrl.scala 214:18]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanCtrl.scala 216:18]
    r_valid[1] <= r_valid[0] @[FanCtrl.scala 222:24]
    r_valid[2] <= r_valid[1] @[FanCtrl.scala 222:24]
    r_valid[3] <= r_valid[2] @[FanCtrl.scala 222:24]
    r_valid[4] <= r_valid[3] @[FanCtrl.scala 222:24]
    io.o_reduction_valid <= r_valid[3] @[FanCtrl.scala 226:26]
    wire _WIRE_4 : UInt<1>[3] @[FanCtrl.scala 227:35]
    _WIRE_4[0] <= r_add_lvl_0Reg[6] @[FanCtrl.scala 227:35]
    _WIRE_4[1] <= r_add_lvl_0Reg[7] @[FanCtrl.scala 227:35]
    _WIRE_4[2] <= r_add_lvl_1Reg[4] @[FanCtrl.scala 227:35]
    io.o_reduction_add <= _WIRE_4 @[FanCtrl.scala 227:24]
    wire _WIRE_5 : UInt<3>[3] @[FanCtrl.scala 236:34]
    _WIRE_5[0] <= r_cmd_lvl_0Reg[6] @[FanCtrl.scala 236:34]
    _WIRE_5[1] <= r_cmd_lvl_0Reg[7] @[FanCtrl.scala 236:34]
    _WIRE_5[2] <= r_cmd_lvl_1Reg[4] @[FanCtrl.scala 236:34]
    io.o_reduction_cmd <= _WIRE_5 @[FanCtrl.scala 236:24]

  module Benes :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data_bus2 : UInt<16>[4], flip i_data_bus1 : UInt<16>[4], flip i_mux_bus : UInt<4>[4], o_dist_bus1 : UInt<16>[4], o_dist_bus2 : UInt<16>[4]}

    io.o_dist_bus1 <= io.i_data_bus1 @[Benes.scala 16:18]
    wire _parse_array_WIRE : UInt<16>[5] @[Benes.scala 19:37]
    _parse_array_WIRE[0] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[1] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[2] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[3] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[4] <= UInt<16>("h0") @[Benes.scala 19:37]
    wire parse_array : UInt<16>[5]
    parse_array <= _parse_array_WIRE
    node _T = neq(io.i_data_bus2[0], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T : @[Benes.scala 56:39]
      node _T_1 = orr(io.i_mux_bus[0]) @[Benes.scala 58:31]
      when _T_1 : @[Benes.scala 58:35]
        node _parsedindexvalue_first_stage_T = bits(io.i_mux_bus[0], 0, 0) @[Benes.scala 24:32]
        node _parsedindexvalue_first_stage_T_1 = rem(UInt<1>("h0"), UInt<2>("h2")) @[Benes.scala 24:52]
        node _parsedindexvalue_first_stage_T_2 = eq(_parsedindexvalue_first_stage_T_1, UInt<1>("h0")) @[Benes.scala 24:58]
        node _parsedindexvalue_first_stage_T_3 = add(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_4 = tail(_parsedindexvalue_first_stage_T_3, 1) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_5 = sub(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_6 = tail(_parsedindexvalue_first_stage_T_5, 1) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_7 = mux(_parsedindexvalue_first_stage_T_2, _parsedindexvalue_first_stage_T_4, _parsedindexvalue_first_stage_T_6) @[Benes.scala 24:40]
        node parsedindexvalue_first_stage = mux(_parsedindexvalue_first_stage_T, _parsedindexvalue_first_stage_T_7, UInt<1>("h0")) @[Benes.scala 24:26]
        node _parsedindexvalue_T = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 27:31]
        node _parsedindexvalue_boolArray_T = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_1 = bits(_parsedindexvalue_boolArray_T, 0, 0) @[Benes.scala 28:92]
        node _parsedindexvalue_boolArray_T_2 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_3 = bits(_parsedindexvalue_boolArray_T_2, 1, 1) @[Benes.scala 28:92]
        wire parsedindexvalue_boolArray : UInt<1>[2] @[Benes.scala 28:28]
        parsedindexvalue_boolArray[0] <= _parsedindexvalue_boolArray_T_1 @[Benes.scala 28:28]
        parsedindexvalue_boolArray[1] <= _parsedindexvalue_boolArray_T_3 @[Benes.scala 28:28]
        wire parsedindexvalue_second_stage : UInt
        parsedindexvalue_second_stage <= parsedindexvalue_first_stage
        node parsedindexvalue_calculation = rem(parsedindexvalue_second_stage, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_1 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_2 = and(_parsedindexvalue_nextIndex_T, _parsedindexvalue_nextIndex_T_1) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_3 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_4 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_5 = and(_parsedindexvalue_nextIndex_T_3, _parsedindexvalue_nextIndex_T_4) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_6 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_7 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_8 = and(_parsedindexvalue_nextIndex_T_6, _parsedindexvalue_nextIndex_T_7) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_9 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_10 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_11 = and(_parsedindexvalue_nextIndex_T_9, _parsedindexvalue_nextIndex_T_10) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_12 = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_13 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_14 = and(_parsedindexvalue_nextIndex_T_12, _parsedindexvalue_nextIndex_T_13) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_15 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_16 = tail(_parsedindexvalue_nextIndex_T_15, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_17 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_18 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_19 = and(_parsedindexvalue_nextIndex_T_17, _parsedindexvalue_nextIndex_T_18) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_20 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_21 = tail(_parsedindexvalue_nextIndex_T_20, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_22 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_23 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_24 = and(_parsedindexvalue_nextIndex_T_22, _parsedindexvalue_nextIndex_T_23) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_25 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_26 = tail(_parsedindexvalue_nextIndex_T_25, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_27 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_28 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_29 = and(_parsedindexvalue_nextIndex_T_27, _parsedindexvalue_nextIndex_T_28) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_30 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_31 = tail(_parsedindexvalue_nextIndex_T_30, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_32 = mux(_parsedindexvalue_nextIndex_T_29, _parsedindexvalue_nextIndex_T_31, parsedindexvalue_second_stage) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_33 = mux(_parsedindexvalue_nextIndex_T_24, _parsedindexvalue_nextIndex_T_26, _parsedindexvalue_nextIndex_T_32) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_34 = mux(_parsedindexvalue_nextIndex_T_19, _parsedindexvalue_nextIndex_T_21, _parsedindexvalue_nextIndex_T_33) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_35 = mux(_parsedindexvalue_nextIndex_T_14, _parsedindexvalue_nextIndex_T_16, _parsedindexvalue_nextIndex_T_34) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_36 = mux(_parsedindexvalue_nextIndex_T_11, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_35) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_37 = mux(_parsedindexvalue_nextIndex_T_8, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_36) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_38 = mux(_parsedindexvalue_nextIndex_T_5, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_37) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex = mux(_parsedindexvalue_nextIndex_T_2, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_38) @[Mux.scala 101:16]
        node parsedindexvalue_calculation_1 = rem(parsedindexvalue_nextIndex, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_39 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_40 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_41 = and(_parsedindexvalue_nextIndex_T_39, _parsedindexvalue_nextIndex_T_40) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_42 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_43 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_44 = and(_parsedindexvalue_nextIndex_T_42, _parsedindexvalue_nextIndex_T_43) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_45 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_46 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_47 = and(_parsedindexvalue_nextIndex_T_45, _parsedindexvalue_nextIndex_T_46) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_48 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_49 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_50 = and(_parsedindexvalue_nextIndex_T_48, _parsedindexvalue_nextIndex_T_49) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_51 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_52 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_53 = and(_parsedindexvalue_nextIndex_T_51, _parsedindexvalue_nextIndex_T_52) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_54 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_55 = tail(_parsedindexvalue_nextIndex_T_54, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_56 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_57 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_58 = and(_parsedindexvalue_nextIndex_T_56, _parsedindexvalue_nextIndex_T_57) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_59 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_60 = tail(_parsedindexvalue_nextIndex_T_59, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_61 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_62 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_63 = and(_parsedindexvalue_nextIndex_T_61, _parsedindexvalue_nextIndex_T_62) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_64 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_65 = tail(_parsedindexvalue_nextIndex_T_64, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_66 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_67 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_68 = and(_parsedindexvalue_nextIndex_T_66, _parsedindexvalue_nextIndex_T_67) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_69 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_70 = tail(_parsedindexvalue_nextIndex_T_69, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_71 = mux(_parsedindexvalue_nextIndex_T_68, _parsedindexvalue_nextIndex_T_70, parsedindexvalue_nextIndex) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_72 = mux(_parsedindexvalue_nextIndex_T_63, _parsedindexvalue_nextIndex_T_65, _parsedindexvalue_nextIndex_T_71) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_73 = mux(_parsedindexvalue_nextIndex_T_58, _parsedindexvalue_nextIndex_T_60, _parsedindexvalue_nextIndex_T_72) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_74 = mux(_parsedindexvalue_nextIndex_T_53, _parsedindexvalue_nextIndex_T_55, _parsedindexvalue_nextIndex_T_73) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_75 = mux(_parsedindexvalue_nextIndex_T_50, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_74) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_76 = mux(_parsedindexvalue_nextIndex_T_47, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_75) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_77 = mux(_parsedindexvalue_nextIndex_T_44, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_76) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_1 = mux(_parsedindexvalue_nextIndex_T_41, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_77) @[Mux.scala 101:16]
        node _parsedindexvalue_third_stage_T = bits(io.i_mux_bus[0], 3, 3) @[Benes.scala 48:30]
        node _parsedindexvalue_third_stage_T_1 = rem(parsedindexvalue_nextIndex_1, UInt<2>("h2")) @[Benes.scala 48:61]
        node _parsedindexvalue_third_stage_T_2 = eq(_parsedindexvalue_third_stage_T_1, UInt<1>("h0")) @[Benes.scala 48:67]
        node _parsedindexvalue_third_stage_T_3 = add(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_4 = tail(_parsedindexvalue_third_stage_T_3, 1) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_5 = sub(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_6 = tail(_parsedindexvalue_third_stage_T_5, 1) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_7 = mux(_parsedindexvalue_third_stage_T_2, _parsedindexvalue_third_stage_T_4, _parsedindexvalue_third_stage_T_6) @[Benes.scala 48:47]
        node parsedindexvalue = mux(_parsedindexvalue_third_stage_T, _parsedindexvalue_third_stage_T_7, parsedindexvalue_nextIndex_1) @[Benes.scala 48:24]
        node _T_2 = or(parsedindexvalue, UInt<3>("h0"))
        node _T_3 = bits(_T_2, 2, 0)
        parse_array[_T_3] <= io.i_data_bus2[0] @[Benes.scala 67:47]
      else :
        parse_array[0] <= io.i_data_bus2[0] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_4 = neq(io.i_data_bus2[1], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_4 : @[Benes.scala 56:39]
      node _T_5 = orr(io.i_mux_bus[1]) @[Benes.scala 58:31]
      when _T_5 : @[Benes.scala 58:35]
        node _parsedindexvalue_first_stage_T_8 = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
        node _parsedindexvalue_first_stage_T_9 = rem(UInt<1>("h1"), UInt<2>("h2")) @[Benes.scala 24:52]
        node _parsedindexvalue_first_stage_T_10 = eq(_parsedindexvalue_first_stage_T_9, UInt<1>("h0")) @[Benes.scala 24:58]
        node _parsedindexvalue_first_stage_T_11 = add(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_12 = tail(_parsedindexvalue_first_stage_T_11, 1) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_13 = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_14 = tail(_parsedindexvalue_first_stage_T_13, 1) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_15 = mux(_parsedindexvalue_first_stage_T_10, _parsedindexvalue_first_stage_T_12, _parsedindexvalue_first_stage_T_14) @[Benes.scala 24:40]
        node parsedindexvalue_first_stage_1 = mux(_parsedindexvalue_first_stage_T_8, _parsedindexvalue_first_stage_T_15, UInt<1>("h1")) @[Benes.scala 24:26]
        node _parsedindexvalue_T_1 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
        node _parsedindexvalue_boolArray_T_4 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_5 = bits(_parsedindexvalue_boolArray_T_4, 0, 0) @[Benes.scala 28:92]
        node _parsedindexvalue_boolArray_T_6 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_7 = bits(_parsedindexvalue_boolArray_T_6, 1, 1) @[Benes.scala 28:92]
        wire parsedindexvalue_boolArray_1 : UInt<1>[2] @[Benes.scala 28:28]
        parsedindexvalue_boolArray_1[0] <= _parsedindexvalue_boolArray_T_5 @[Benes.scala 28:28]
        parsedindexvalue_boolArray_1[1] <= _parsedindexvalue_boolArray_T_7 @[Benes.scala 28:28]
        wire parsedindexvalue_second_stage_1 : UInt
        parsedindexvalue_second_stage_1 <= parsedindexvalue_first_stage_1
        node parsedindexvalue_calculation_2 = rem(parsedindexvalue_second_stage_1, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_78 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_79 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_80 = and(_parsedindexvalue_nextIndex_T_78, _parsedindexvalue_nextIndex_T_79) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_81 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_82 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_83 = and(_parsedindexvalue_nextIndex_T_81, _parsedindexvalue_nextIndex_T_82) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_84 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_85 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_86 = and(_parsedindexvalue_nextIndex_T_84, _parsedindexvalue_nextIndex_T_85) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_87 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_88 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_89 = and(_parsedindexvalue_nextIndex_T_87, _parsedindexvalue_nextIndex_T_88) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_90 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_91 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_92 = and(_parsedindexvalue_nextIndex_T_90, _parsedindexvalue_nextIndex_T_91) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_93 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_94 = tail(_parsedindexvalue_nextIndex_T_93, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_95 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_96 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_97 = and(_parsedindexvalue_nextIndex_T_95, _parsedindexvalue_nextIndex_T_96) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_98 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_99 = tail(_parsedindexvalue_nextIndex_T_98, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_100 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_101 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_102 = and(_parsedindexvalue_nextIndex_T_100, _parsedindexvalue_nextIndex_T_101) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_103 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_104 = tail(_parsedindexvalue_nextIndex_T_103, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_105 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_106 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_107 = and(_parsedindexvalue_nextIndex_T_105, _parsedindexvalue_nextIndex_T_106) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_108 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_109 = tail(_parsedindexvalue_nextIndex_T_108, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_110 = mux(_parsedindexvalue_nextIndex_T_107, _parsedindexvalue_nextIndex_T_109, parsedindexvalue_second_stage_1) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_111 = mux(_parsedindexvalue_nextIndex_T_102, _parsedindexvalue_nextIndex_T_104, _parsedindexvalue_nextIndex_T_110) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_112 = mux(_parsedindexvalue_nextIndex_T_97, _parsedindexvalue_nextIndex_T_99, _parsedindexvalue_nextIndex_T_111) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_113 = mux(_parsedindexvalue_nextIndex_T_92, _parsedindexvalue_nextIndex_T_94, _parsedindexvalue_nextIndex_T_112) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_114 = mux(_parsedindexvalue_nextIndex_T_89, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_113) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_115 = mux(_parsedindexvalue_nextIndex_T_86, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_114) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_116 = mux(_parsedindexvalue_nextIndex_T_83, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_115) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_2 = mux(_parsedindexvalue_nextIndex_T_80, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_116) @[Mux.scala 101:16]
        node parsedindexvalue_calculation_3 = rem(parsedindexvalue_nextIndex_2, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_117 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_118 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_119 = and(_parsedindexvalue_nextIndex_T_117, _parsedindexvalue_nextIndex_T_118) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_120 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_121 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_122 = and(_parsedindexvalue_nextIndex_T_120, _parsedindexvalue_nextIndex_T_121) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_123 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_124 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_125 = and(_parsedindexvalue_nextIndex_T_123, _parsedindexvalue_nextIndex_T_124) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_126 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_127 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_128 = and(_parsedindexvalue_nextIndex_T_126, _parsedindexvalue_nextIndex_T_127) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_129 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_130 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_131 = and(_parsedindexvalue_nextIndex_T_129, _parsedindexvalue_nextIndex_T_130) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_132 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_133 = tail(_parsedindexvalue_nextIndex_T_132, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_134 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_135 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_136 = and(_parsedindexvalue_nextIndex_T_134, _parsedindexvalue_nextIndex_T_135) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_137 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_138 = tail(_parsedindexvalue_nextIndex_T_137, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_139 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_140 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_141 = and(_parsedindexvalue_nextIndex_T_139, _parsedindexvalue_nextIndex_T_140) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_142 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_143 = tail(_parsedindexvalue_nextIndex_T_142, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_144 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_145 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_146 = and(_parsedindexvalue_nextIndex_T_144, _parsedindexvalue_nextIndex_T_145) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_147 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_148 = tail(_parsedindexvalue_nextIndex_T_147, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_149 = mux(_parsedindexvalue_nextIndex_T_146, _parsedindexvalue_nextIndex_T_148, parsedindexvalue_nextIndex_2) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_150 = mux(_parsedindexvalue_nextIndex_T_141, _parsedindexvalue_nextIndex_T_143, _parsedindexvalue_nextIndex_T_149) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_151 = mux(_parsedindexvalue_nextIndex_T_136, _parsedindexvalue_nextIndex_T_138, _parsedindexvalue_nextIndex_T_150) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_152 = mux(_parsedindexvalue_nextIndex_T_131, _parsedindexvalue_nextIndex_T_133, _parsedindexvalue_nextIndex_T_151) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_153 = mux(_parsedindexvalue_nextIndex_T_128, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_152) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_154 = mux(_parsedindexvalue_nextIndex_T_125, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_153) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_155 = mux(_parsedindexvalue_nextIndex_T_122, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_154) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_3 = mux(_parsedindexvalue_nextIndex_T_119, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_155) @[Mux.scala 101:16]
        node _parsedindexvalue_third_stage_T_8 = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
        node _parsedindexvalue_third_stage_T_9 = rem(parsedindexvalue_nextIndex_3, UInt<2>("h2")) @[Benes.scala 48:61]
        node _parsedindexvalue_third_stage_T_10 = eq(_parsedindexvalue_third_stage_T_9, UInt<1>("h0")) @[Benes.scala 48:67]
        node _parsedindexvalue_third_stage_T_11 = add(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_12 = tail(_parsedindexvalue_third_stage_T_11, 1) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_13 = sub(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_14 = tail(_parsedindexvalue_third_stage_T_13, 1) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_15 = mux(_parsedindexvalue_third_stage_T_10, _parsedindexvalue_third_stage_T_12, _parsedindexvalue_third_stage_T_14) @[Benes.scala 48:47]
        node parsedindexvalue_1 = mux(_parsedindexvalue_third_stage_T_8, _parsedindexvalue_third_stage_T_15, parsedindexvalue_nextIndex_3) @[Benes.scala 48:24]
        node _T_6 = or(parsedindexvalue_1, UInt<3>("h0"))
        node _T_7 = bits(_T_6, 2, 0)
        parse_array[_T_7] <= io.i_data_bus2[1] @[Benes.scala 67:47]
      else :
        parse_array[1] <= io.i_data_bus2[1] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_8 = neq(io.i_data_bus2[2], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_8 : @[Benes.scala 56:39]
      node _T_9 = orr(io.i_mux_bus[2]) @[Benes.scala 58:31]
      when _T_9 : @[Benes.scala 58:35]
        node _parsedindexvalue_first_stage_T_16 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
        node _parsedindexvalue_first_stage_T_17 = rem(UInt<2>("h2"), UInt<2>("h2")) @[Benes.scala 24:52]
        node _parsedindexvalue_first_stage_T_18 = eq(_parsedindexvalue_first_stage_T_17, UInt<1>("h0")) @[Benes.scala 24:58]
        node _parsedindexvalue_first_stage_T_19 = add(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_20 = tail(_parsedindexvalue_first_stage_T_19, 1) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_21 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_22 = tail(_parsedindexvalue_first_stage_T_21, 1) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_23 = mux(_parsedindexvalue_first_stage_T_18, _parsedindexvalue_first_stage_T_20, _parsedindexvalue_first_stage_T_22) @[Benes.scala 24:40]
        node parsedindexvalue_first_stage_2 = mux(_parsedindexvalue_first_stage_T_16, _parsedindexvalue_first_stage_T_23, UInt<2>("h2")) @[Benes.scala 24:26]
        node _parsedindexvalue_T_2 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
        node _parsedindexvalue_boolArray_T_8 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_9 = bits(_parsedindexvalue_boolArray_T_8, 0, 0) @[Benes.scala 28:92]
        node _parsedindexvalue_boolArray_T_10 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_11 = bits(_parsedindexvalue_boolArray_T_10, 1, 1) @[Benes.scala 28:92]
        wire parsedindexvalue_boolArray_2 : UInt<1>[2] @[Benes.scala 28:28]
        parsedindexvalue_boolArray_2[0] <= _parsedindexvalue_boolArray_T_9 @[Benes.scala 28:28]
        parsedindexvalue_boolArray_2[1] <= _parsedindexvalue_boolArray_T_11 @[Benes.scala 28:28]
        wire parsedindexvalue_second_stage_2 : UInt
        parsedindexvalue_second_stage_2 <= parsedindexvalue_first_stage_2
        node parsedindexvalue_calculation_4 = rem(parsedindexvalue_second_stage_2, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_156 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_157 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_158 = and(_parsedindexvalue_nextIndex_T_156, _parsedindexvalue_nextIndex_T_157) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_159 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_160 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_161 = and(_parsedindexvalue_nextIndex_T_159, _parsedindexvalue_nextIndex_T_160) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_162 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_163 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_164 = and(_parsedindexvalue_nextIndex_T_162, _parsedindexvalue_nextIndex_T_163) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_165 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_166 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_167 = and(_parsedindexvalue_nextIndex_T_165, _parsedindexvalue_nextIndex_T_166) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_168 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_169 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_170 = and(_parsedindexvalue_nextIndex_T_168, _parsedindexvalue_nextIndex_T_169) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_171 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_172 = tail(_parsedindexvalue_nextIndex_T_171, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_173 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_174 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_175 = and(_parsedindexvalue_nextIndex_T_173, _parsedindexvalue_nextIndex_T_174) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_176 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_177 = tail(_parsedindexvalue_nextIndex_T_176, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_178 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_179 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_180 = and(_parsedindexvalue_nextIndex_T_178, _parsedindexvalue_nextIndex_T_179) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_181 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_182 = tail(_parsedindexvalue_nextIndex_T_181, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_183 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_184 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_185 = and(_parsedindexvalue_nextIndex_T_183, _parsedindexvalue_nextIndex_T_184) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_186 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_187 = tail(_parsedindexvalue_nextIndex_T_186, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_188 = mux(_parsedindexvalue_nextIndex_T_185, _parsedindexvalue_nextIndex_T_187, parsedindexvalue_second_stage_2) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_189 = mux(_parsedindexvalue_nextIndex_T_180, _parsedindexvalue_nextIndex_T_182, _parsedindexvalue_nextIndex_T_188) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_190 = mux(_parsedindexvalue_nextIndex_T_175, _parsedindexvalue_nextIndex_T_177, _parsedindexvalue_nextIndex_T_189) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_191 = mux(_parsedindexvalue_nextIndex_T_170, _parsedindexvalue_nextIndex_T_172, _parsedindexvalue_nextIndex_T_190) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_192 = mux(_parsedindexvalue_nextIndex_T_167, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_191) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_193 = mux(_parsedindexvalue_nextIndex_T_164, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_192) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_194 = mux(_parsedindexvalue_nextIndex_T_161, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_193) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_4 = mux(_parsedindexvalue_nextIndex_T_158, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_194) @[Mux.scala 101:16]
        node parsedindexvalue_calculation_5 = rem(parsedindexvalue_nextIndex_4, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_195 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_196 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_197 = and(_parsedindexvalue_nextIndex_T_195, _parsedindexvalue_nextIndex_T_196) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_198 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_199 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_200 = and(_parsedindexvalue_nextIndex_T_198, _parsedindexvalue_nextIndex_T_199) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_201 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_202 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_203 = and(_parsedindexvalue_nextIndex_T_201, _parsedindexvalue_nextIndex_T_202) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_204 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_205 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_206 = and(_parsedindexvalue_nextIndex_T_204, _parsedindexvalue_nextIndex_T_205) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_207 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_208 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_209 = and(_parsedindexvalue_nextIndex_T_207, _parsedindexvalue_nextIndex_T_208) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_210 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_211 = tail(_parsedindexvalue_nextIndex_T_210, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_212 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_213 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_214 = and(_parsedindexvalue_nextIndex_T_212, _parsedindexvalue_nextIndex_T_213) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_215 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_216 = tail(_parsedindexvalue_nextIndex_T_215, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_217 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_218 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_219 = and(_parsedindexvalue_nextIndex_T_217, _parsedindexvalue_nextIndex_T_218) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_220 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_221 = tail(_parsedindexvalue_nextIndex_T_220, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_222 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_223 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_224 = and(_parsedindexvalue_nextIndex_T_222, _parsedindexvalue_nextIndex_T_223) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_225 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_226 = tail(_parsedindexvalue_nextIndex_T_225, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_227 = mux(_parsedindexvalue_nextIndex_T_224, _parsedindexvalue_nextIndex_T_226, parsedindexvalue_nextIndex_4) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_228 = mux(_parsedindexvalue_nextIndex_T_219, _parsedindexvalue_nextIndex_T_221, _parsedindexvalue_nextIndex_T_227) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_229 = mux(_parsedindexvalue_nextIndex_T_214, _parsedindexvalue_nextIndex_T_216, _parsedindexvalue_nextIndex_T_228) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_230 = mux(_parsedindexvalue_nextIndex_T_209, _parsedindexvalue_nextIndex_T_211, _parsedindexvalue_nextIndex_T_229) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_231 = mux(_parsedindexvalue_nextIndex_T_206, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_230) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_232 = mux(_parsedindexvalue_nextIndex_T_203, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_231) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_233 = mux(_parsedindexvalue_nextIndex_T_200, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_232) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_5 = mux(_parsedindexvalue_nextIndex_T_197, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_233) @[Mux.scala 101:16]
        node _parsedindexvalue_third_stage_T_16 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
        node _parsedindexvalue_third_stage_T_17 = rem(parsedindexvalue_nextIndex_5, UInt<2>("h2")) @[Benes.scala 48:61]
        node _parsedindexvalue_third_stage_T_18 = eq(_parsedindexvalue_third_stage_T_17, UInt<1>("h0")) @[Benes.scala 48:67]
        node _parsedindexvalue_third_stage_T_19 = add(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_20 = tail(_parsedindexvalue_third_stage_T_19, 1) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_21 = sub(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_22 = tail(_parsedindexvalue_third_stage_T_21, 1) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_23 = mux(_parsedindexvalue_third_stage_T_18, _parsedindexvalue_third_stage_T_20, _parsedindexvalue_third_stage_T_22) @[Benes.scala 48:47]
        node parsedindexvalue_2 = mux(_parsedindexvalue_third_stage_T_16, _parsedindexvalue_third_stage_T_23, parsedindexvalue_nextIndex_5) @[Benes.scala 48:24]
        node _T_10 = or(parsedindexvalue_2, UInt<3>("h0"))
        node _T_11 = bits(_T_10, 2, 0)
        parse_array[_T_11] <= io.i_data_bus2[2] @[Benes.scala 67:47]
      else :
        parse_array[2] <= io.i_data_bus2[2] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_12 = neq(io.i_data_bus2[3], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_12 : @[Benes.scala 56:39]
      node _T_13 = orr(io.i_mux_bus[3]) @[Benes.scala 58:31]
      when _T_13 : @[Benes.scala 58:35]
        node _parsedindexvalue_first_stage_T_24 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
        node _parsedindexvalue_first_stage_T_25 = rem(UInt<2>("h3"), UInt<2>("h2")) @[Benes.scala 24:52]
        node _parsedindexvalue_first_stage_T_26 = eq(_parsedindexvalue_first_stage_T_25, UInt<1>("h0")) @[Benes.scala 24:58]
        node _parsedindexvalue_first_stage_T_27 = add(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_28 = tail(_parsedindexvalue_first_stage_T_27, 1) @[Benes.scala 24:78]
        node _parsedindexvalue_first_stage_T_29 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_30 = tail(_parsedindexvalue_first_stage_T_29, 1) @[Benes.scala 24:96]
        node _parsedindexvalue_first_stage_T_31 = mux(_parsedindexvalue_first_stage_T_26, _parsedindexvalue_first_stage_T_28, _parsedindexvalue_first_stage_T_30) @[Benes.scala 24:40]
        node parsedindexvalue_first_stage_3 = mux(_parsedindexvalue_first_stage_T_24, _parsedindexvalue_first_stage_T_31, UInt<2>("h3")) @[Benes.scala 24:26]
        node _parsedindexvalue_T_3 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
        node _parsedindexvalue_boolArray_T_12 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_13 = bits(_parsedindexvalue_boolArray_T_12, 0, 0) @[Benes.scala 28:92]
        node _parsedindexvalue_boolArray_T_14 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
        node _parsedindexvalue_boolArray_T_15 = bits(_parsedindexvalue_boolArray_T_14, 1, 1) @[Benes.scala 28:92]
        wire parsedindexvalue_boolArray_3 : UInt<1>[2] @[Benes.scala 28:28]
        parsedindexvalue_boolArray_3[0] <= _parsedindexvalue_boolArray_T_13 @[Benes.scala 28:28]
        parsedindexvalue_boolArray_3[1] <= _parsedindexvalue_boolArray_T_15 @[Benes.scala 28:28]
        wire parsedindexvalue_second_stage_3 : UInt
        parsedindexvalue_second_stage_3 <= parsedindexvalue_first_stage_3
        node parsedindexvalue_calculation_6 = rem(parsedindexvalue_second_stage_3, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_234 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_235 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_236 = and(_parsedindexvalue_nextIndex_T_234, _parsedindexvalue_nextIndex_T_235) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_237 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_238 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_239 = and(_parsedindexvalue_nextIndex_T_237, _parsedindexvalue_nextIndex_T_238) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_240 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_241 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_242 = and(_parsedindexvalue_nextIndex_T_240, _parsedindexvalue_nextIndex_T_241) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_243 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_244 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_245 = and(_parsedindexvalue_nextIndex_T_243, _parsedindexvalue_nextIndex_T_244) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_246 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_247 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_248 = and(_parsedindexvalue_nextIndex_T_246, _parsedindexvalue_nextIndex_T_247) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_249 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_250 = tail(_parsedindexvalue_nextIndex_T_249, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_251 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_252 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_253 = and(_parsedindexvalue_nextIndex_T_251, _parsedindexvalue_nextIndex_T_252) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_254 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_255 = tail(_parsedindexvalue_nextIndex_T_254, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_256 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_257 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_258 = and(_parsedindexvalue_nextIndex_T_256, _parsedindexvalue_nextIndex_T_257) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_259 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_260 = tail(_parsedindexvalue_nextIndex_T_259, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_261 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_262 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_263 = and(_parsedindexvalue_nextIndex_T_261, _parsedindexvalue_nextIndex_T_262) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_264 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_265 = tail(_parsedindexvalue_nextIndex_T_264, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_266 = mux(_parsedindexvalue_nextIndex_T_263, _parsedindexvalue_nextIndex_T_265, parsedindexvalue_second_stage_3) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_267 = mux(_parsedindexvalue_nextIndex_T_258, _parsedindexvalue_nextIndex_T_260, _parsedindexvalue_nextIndex_T_266) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_268 = mux(_parsedindexvalue_nextIndex_T_253, _parsedindexvalue_nextIndex_T_255, _parsedindexvalue_nextIndex_T_267) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_269 = mux(_parsedindexvalue_nextIndex_T_248, _parsedindexvalue_nextIndex_T_250, _parsedindexvalue_nextIndex_T_268) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_270 = mux(_parsedindexvalue_nextIndex_T_245, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_269) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_271 = mux(_parsedindexvalue_nextIndex_T_242, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_270) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_272 = mux(_parsedindexvalue_nextIndex_T_239, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_271) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_6 = mux(_parsedindexvalue_nextIndex_T_236, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_272) @[Mux.scala 101:16]
        node parsedindexvalue_calculation_7 = rem(parsedindexvalue_nextIndex_6, UInt<3>("h4")) @[Benes.scala 33:40]
        node _parsedindexvalue_nextIndex_T_273 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 35:27]
        node _parsedindexvalue_nextIndex_T_274 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 35:53]
        node _parsedindexvalue_nextIndex_T_275 = and(_parsedindexvalue_nextIndex_T_273, _parsedindexvalue_nextIndex_T_274) @[Benes.scala 35:36]
        node _parsedindexvalue_nextIndex_T_276 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 36:27]
        node _parsedindexvalue_nextIndex_T_277 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 36:53]
        node _parsedindexvalue_nextIndex_T_278 = and(_parsedindexvalue_nextIndex_T_276, _parsedindexvalue_nextIndex_T_277) @[Benes.scala 36:36]
        node _parsedindexvalue_nextIndex_T_279 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 37:27]
        node _parsedindexvalue_nextIndex_T_280 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 37:53]
        node _parsedindexvalue_nextIndex_T_281 = and(_parsedindexvalue_nextIndex_T_279, _parsedindexvalue_nextIndex_T_280) @[Benes.scala 37:36]
        node _parsedindexvalue_nextIndex_T_282 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 38:27]
        node _parsedindexvalue_nextIndex_T_283 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 38:53]
        node _parsedindexvalue_nextIndex_T_284 = and(_parsedindexvalue_nextIndex_T_282, _parsedindexvalue_nextIndex_T_283) @[Benes.scala 38:36]
        node _parsedindexvalue_nextIndex_T_285 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 39:27]
        node _parsedindexvalue_nextIndex_T_286 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 39:53]
        node _parsedindexvalue_nextIndex_T_287 = and(_parsedindexvalue_nextIndex_T_285, _parsedindexvalue_nextIndex_T_286) @[Benes.scala 39:36]
        node _parsedindexvalue_nextIndex_T_288 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_289 = tail(_parsedindexvalue_nextIndex_T_288, 1) @[Benes.scala 39:76]
        node _parsedindexvalue_nextIndex_T_290 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 40:27]
        node _parsedindexvalue_nextIndex_T_291 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 40:53]
        node _parsedindexvalue_nextIndex_T_292 = and(_parsedindexvalue_nextIndex_T_290, _parsedindexvalue_nextIndex_T_291) @[Benes.scala 40:36]
        node _parsedindexvalue_nextIndex_T_293 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_294 = tail(_parsedindexvalue_nextIndex_T_293, 1) @[Benes.scala 40:76]
        node _parsedindexvalue_nextIndex_T_295 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 41:27]
        node _parsedindexvalue_nextIndex_T_296 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 41:53]
        node _parsedindexvalue_nextIndex_T_297 = and(_parsedindexvalue_nextIndex_T_295, _parsedindexvalue_nextIndex_T_296) @[Benes.scala 41:36]
        node _parsedindexvalue_nextIndex_T_298 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_299 = tail(_parsedindexvalue_nextIndex_T_298, 1) @[Benes.scala 41:76]
        node _parsedindexvalue_nextIndex_T_300 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 42:27]
        node _parsedindexvalue_nextIndex_T_301 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 42:53]
        node _parsedindexvalue_nextIndex_T_302 = and(_parsedindexvalue_nextIndex_T_300, _parsedindexvalue_nextIndex_T_301) @[Benes.scala 42:36]
        node _parsedindexvalue_nextIndex_T_303 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_304 = tail(_parsedindexvalue_nextIndex_T_303, 1) @[Benes.scala 42:76]
        node _parsedindexvalue_nextIndex_T_305 = mux(_parsedindexvalue_nextIndex_T_302, _parsedindexvalue_nextIndex_T_304, parsedindexvalue_nextIndex_6) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_306 = mux(_parsedindexvalue_nextIndex_T_297, _parsedindexvalue_nextIndex_T_299, _parsedindexvalue_nextIndex_T_305) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_307 = mux(_parsedindexvalue_nextIndex_T_292, _parsedindexvalue_nextIndex_T_294, _parsedindexvalue_nextIndex_T_306) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_308 = mux(_parsedindexvalue_nextIndex_T_287, _parsedindexvalue_nextIndex_T_289, _parsedindexvalue_nextIndex_T_307) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_309 = mux(_parsedindexvalue_nextIndex_T_284, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_308) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_310 = mux(_parsedindexvalue_nextIndex_T_281, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_309) @[Mux.scala 101:16]
        node _parsedindexvalue_nextIndex_T_311 = mux(_parsedindexvalue_nextIndex_T_278, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_310) @[Mux.scala 101:16]
        node parsedindexvalue_nextIndex_7 = mux(_parsedindexvalue_nextIndex_T_275, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_311) @[Mux.scala 101:16]
        node _parsedindexvalue_third_stage_T_24 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
        node _parsedindexvalue_third_stage_T_25 = rem(parsedindexvalue_nextIndex_7, UInt<2>("h2")) @[Benes.scala 48:61]
        node _parsedindexvalue_third_stage_T_26 = eq(_parsedindexvalue_third_stage_T_25, UInt<1>("h0")) @[Benes.scala 48:67]
        node _parsedindexvalue_third_stage_T_27 = add(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_28 = tail(_parsedindexvalue_third_stage_T_27, 1) @[Benes.scala 48:89]
        node _parsedindexvalue_third_stage_T_29 = sub(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_30 = tail(_parsedindexvalue_third_stage_T_29, 1) @[Benes.scala 48:109]
        node _parsedindexvalue_third_stage_T_31 = mux(_parsedindexvalue_third_stage_T_26, _parsedindexvalue_third_stage_T_28, _parsedindexvalue_third_stage_T_30) @[Benes.scala 48:47]
        node parsedindexvalue_3 = mux(_parsedindexvalue_third_stage_T_24, _parsedindexvalue_third_stage_T_31, parsedindexvalue_nextIndex_7) @[Benes.scala 48:24]
        node _T_14 = or(parsedindexvalue_3, UInt<3>("h0"))
        node _T_15 = bits(_T_14, 2, 0)
        parse_array[_T_15] <= io.i_data_bus2[3] @[Benes.scala 67:47]
      else :
        parse_array[3] <= io.i_data_bus2[3] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    io.o_dist_bus2[0] <= parse_array[0] @[Benes.scala 103:27]
    io.o_dist_bus2[1] <= parse_array[1] @[Benes.scala 103:27]
    io.o_dist_bus2[2] <= parse_array[2] @[Benes.scala 103:27]
    io.o_dist_bus2[3] <= parse_array[3] @[Benes.scala 103:27]

  module buffer_multiplication :
    input clock : Clock
    input reset : Reset
    output io : { flip buffer1 : UInt<16>[4], flip buffer2 : UInt<16>[4], out : UInt<16>[4]}

    node elementMul = mul(io.buffer1[0], io.buffer2[0]) @[buffer_multiplication.scala 17:42]
    node result_elementMul = mul(io.buffer1[1], io.buffer2[1]) @[buffer_multiplication.scala 17:42]
    node result_result_elementMul = mul(io.buffer1[2], io.buffer2[2]) @[buffer_multiplication.scala 17:42]
    node result_result_result_elementMul = mul(io.buffer1[3], io.buffer2[3]) @[buffer_multiplication.scala 17:42]
    wire result : UInt<16>[4] @[buffer_multiplication.scala 15:20]
    result[0] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[1] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[2] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= result_result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[2] <= result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[1] <= result_elementMul @[buffer_multiplication.scala 19:27]
    result[0] <= elementMul @[buffer_multiplication.scala 19:27]
    io.out <= result @[buffer_multiplication.scala 24:10]

  module ReductionMux :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_1 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_1 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_2 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_2 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module Fan4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<32>[4], flip i_add_en_bus : UInt<1>[3], flip i_cmd_bus : UInt<3>[3], o_valid : UInt<1>[4], o_data_bus : UInt<32>[4], o_adder : UInt<32>[3]}

    wire _w_fan_lvl_0_WIRE : UInt<64>[2] @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[0] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[1] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    wire w_fan_lvl_0 : UInt<64>[2]
    w_fan_lvl_0 <= _w_fan_lvl_0_WIRE
    wire _w_fan_lvl_1_WIRE : UInt<32>[1] @[FanNetwork.scala 21:39]
    _w_fan_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 21:39]
    wire w_fan_lvl_1 : UInt<32>[1]
    w_fan_lvl_1 <= _w_fan_lvl_1_WIRE
    wire _w_vn_lvl_0_WIRE : UInt<32>[4] @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    wire w_vn_lvl_0 : UInt<32>[4]
    w_vn_lvl_0 <= _w_vn_lvl_0_WIRE
    wire _w_vn_lvl_0_valid_WIRE : UInt<1>[4] @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    wire w_vn_lvl_0_valid : UInt<1>[4]
    w_vn_lvl_0_valid <= _w_vn_lvl_0_valid_WIRE
    wire _w_vn_lvl_1_WIRE : UInt<32>[2] @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    wire w_vn_lvl_1 : UInt<32>[2]
    w_vn_lvl_1 <= _w_vn_lvl_1_WIRE
    wire _w_vn_lvl_1_valid_WIRE : UInt<1>[2] @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    wire w_vn_lvl_1_valid : UInt<1>[2]
    w_vn_lvl_1_valid <= _w_vn_lvl_1_valid_WIRE
    wire _r_lvl_output_ff_WIRE : UInt<32>[8] @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[4] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[5] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[6] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[7] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    reg r_lvl_output_ff : UInt<32>[8], clock with :
      reset => (reset, _r_lvl_output_ff_WIRE) @[FanNetwork.scala 28:34]
    wire _r_lvl_output_ff_valid_WIRE : UInt<1>[8] @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[4] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[5] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[6] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[7] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    reg r_lvl_output_ff_valid : UInt<1>[8], clock with :
      reset => (reset, _r_lvl_output_ff_valid_WIRE) @[FanNetwork.scala 29:40]
    wire _r_valid_WIRE : UInt<1>[3] @[FanNetwork.scala 30:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    reg r_valid : UInt<1>[3], clock with :
      reset => (reset, _r_valid_WIRE) @[FanNetwork.scala 30:26]
    reg r_final_sum : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FanNetwork.scala 32:30]
    reg r_final_add : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 33:30]
    reg r_final_add2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 34:31]
    node _T = bits(w_vn_lvl_0_valid[1], 0, 0) @[FanNetwork.scala 38:30]
    node _T_1 = eq(_T, UInt<1>("h1")) @[FanNetwork.scala 38:34]
    node _T_2 = bits(w_vn_lvl_0_valid[0], 0, 0) @[FanNetwork.scala 38:64]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[FanNetwork.scala 38:68]
    node _T_4 = and(_T_1, _T_3) @[FanNetwork.scala 38:42]
    when _T_4 : @[FanNetwork.scala 38:77]
      r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 39:28]
      r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 40:28]
      r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 41:34]
      r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 42:34]
    else :
      node _T_5 = eq(w_vn_lvl_0_valid[1], UInt<1>("h1")) @[FanNetwork.scala 43:37]
      node _T_6 = eq(w_vn_lvl_0_valid[0], UInt<1>("h0")) @[FanNetwork.scala 43:68]
      node _T_7 = and(_T_5, _T_6) @[FanNetwork.scala 43:45]
      when _T_7 : @[FanNetwork.scala 43:77]
        r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 44:28]
        r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 45:28]
        r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 46:34]
        r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 47:34]
      else :
        node _T_8 = eq(w_vn_lvl_0_valid[1], UInt<1>("h0")) @[FanNetwork.scala 48:37]
        node _T_9 = eq(w_vn_lvl_0_valid[0], UInt<1>("h1")) @[FanNetwork.scala 48:68]
        node _T_10 = and(_T_8, _T_9) @[FanNetwork.scala 48:45]
        when _T_10 : @[FanNetwork.scala 48:77]
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 49:28]
          r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 50:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 51:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 52:34]
        else :
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 54:28]
          r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 55:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 56:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 57:34]
    node _T_11 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 59:30]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[FanNetwork.scala 59:34]
    node _T_13 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 59:64]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[FanNetwork.scala 59:68]
    node _T_15 = and(_T_12, _T_14) @[FanNetwork.scala 59:42]
    when _T_15 : @[FanNetwork.scala 59:77]
      r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 60:28]
      r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 61:28]
      r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 62:34]
      r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 63:34]
    else :
      node _T_16 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 64:36]
      node _T_17 = eq(_T_16, UInt<1>("h1")) @[FanNetwork.scala 64:40]
      node _T_18 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 64:70]
      node _T_19 = eq(_T_18, UInt<1>("h0")) @[FanNetwork.scala 64:74]
      node _T_20 = and(_T_17, _T_19) @[FanNetwork.scala 64:48]
      when _T_20 : @[FanNetwork.scala 64:83]
        r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 65:28]
        r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 66:28]
        r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 67:34]
        r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 68:34]
      else :
        node _T_21 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 69:36]
        node _T_22 = eq(_T_21, UInt<1>("h0")) @[FanNetwork.scala 69:40]
        node _T_23 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 69:70]
        node _T_24 = eq(_T_23, UInt<1>("h1")) @[FanNetwork.scala 69:74]
        node _T_25 = and(_T_22, _T_24) @[FanNetwork.scala 69:48]
        when _T_25 : @[FanNetwork.scala 69:83]
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 70:28]
          r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 71:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 72:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 73:34]
        else :
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 75:28]
          r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 76:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 77:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 78:34]
    r_lvl_output_ff[4] <= r_lvl_output_ff[0] @[FanNetwork.scala 81:24]
    r_lvl_output_ff_valid[4] <= r_lvl_output_ff_valid[0] @[FanNetwork.scala 82:30]
    node _T_26 = bits(w_vn_lvl_1_valid[0], 0, 0) @[FanNetwork.scala 84:29]
    when _T_26 : @[FanNetwork.scala 84:34]
      r_lvl_output_ff[5] <= w_vn_lvl_1[0] @[FanNetwork.scala 85:28]
      r_lvl_output_ff_valid[5] <= UInt<1>("h1") @[FanNetwork.scala 86:34]
    else :
      r_lvl_output_ff[5] <= r_lvl_output_ff[1] @[FanNetwork.scala 88:28]
      r_lvl_output_ff_valid[5] <= r_lvl_output_ff_valid[1] @[FanNetwork.scala 89:34]
    node _T_27 = bits(w_vn_lvl_1_valid[1], 0, 0) @[FanNetwork.scala 91:29]
    when _T_27 : @[FanNetwork.scala 91:34]
      r_lvl_output_ff[6] <= w_vn_lvl_1[1] @[FanNetwork.scala 92:28]
      r_lvl_output_ff_valid[6] <= UInt<1>("h1") @[FanNetwork.scala 93:34]
    else :
      r_lvl_output_ff[6] <= r_lvl_output_ff[2] @[FanNetwork.scala 95:28]
      r_lvl_output_ff_valid[6] <= r_lvl_output_ff_valid[2] @[FanNetwork.scala 96:34]
    r_lvl_output_ff[7] <= r_lvl_output_ff[3] @[FanNetwork.scala 99:24]
    r_lvl_output_ff_valid[7] <= r_lvl_output_ff_valid[3] @[FanNetwork.scala 100:30]
    node _T_28 = eq(io.i_valid, UInt<1>("h1")) @[FanNetwork.scala 104:22]
    when _T_28 : @[FanNetwork.scala 104:31]
      r_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 105:16]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 107:20]
    r_valid[1] <= r_valid[0] @[FanNetwork.scala 114:24]
    r_valid[2] <= r_valid[1] @[FanNetwork.scala 114:24]
    inst my_adder_0 of EdgeAdderSwitch @[FanNetwork.scala 119:28]
    my_adder_0.clock <= clock
    my_adder_0.reset <= reset
    my_adder_0.io.i_valid <= r_valid[0] @[FanNetwork.scala 121:27]
    wire _WIRE : UInt<32>[2] @[FanNetwork.scala 122:40]
    _WIRE[0] <= io.i_data_bus[1] @[FanNetwork.scala 122:40]
    _WIRE[1] <= io.i_data_bus[0] @[FanNetwork.scala 122:40]
    my_adder_0.io.i_data_bus[0] <= _WIRE[0] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_data_bus[1] <= _WIRE[1] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_add_en <= io.i_add_en_bus[0] @[FanNetwork.scala 123:28]
    my_adder_0.io.i_cmd <= io.i_cmd_bus[0] @[FanNetwork.scala 124:25]
    my_adder_0.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 125:25]
    node _w_vn_lvl_0_0_T = bits(my_adder_0.io.o_vn, 31, 0) @[FanNetwork.scala 126:40]
    w_vn_lvl_0[0] <= _w_vn_lvl_0_0_T @[FanNetwork.scala 126:19]
    node _w_vn_lvl_0_1_T = bits(my_adder_0.io.o_vn, 63, 32) @[FanNetwork.scala 127:40]
    w_vn_lvl_0[1] <= _w_vn_lvl_0_1_T @[FanNetwork.scala 127:19]
    node _w_vn_lvl_0_valid_0_T = bits(my_adder_0.io.o_vn_valid, 0, 0) @[FanNetwork.scala 128:52]
    w_vn_lvl_0_valid[0] <= _w_vn_lvl_0_valid_0_T @[FanNetwork.scala 128:25]
    node _w_vn_lvl_0_valid_1_T = bits(my_adder_0.io.o_vn_valid, 1, 1) @[FanNetwork.scala 129:52]
    w_vn_lvl_0_valid[1] <= _w_vn_lvl_0_valid_1_T @[FanNetwork.scala 129:25]
    w_fan_lvl_0[0] <= my_adder_0.io.o_adder @[FanNetwork.scala 130:20]
    inst my_adder_1 of EdgeAdderSwitch_1 @[FanNetwork.scala 132:28]
    my_adder_1.clock <= clock
    my_adder_1.reset <= reset
    my_adder_1.io.i_valid <= r_valid[1] @[FanNetwork.scala 134:27]
    wire _WIRE_1 : UInt<64>[2] @[FanNetwork.scala 135:40]
    _WIRE_1[0] <= w_fan_lvl_0[1] @[FanNetwork.scala 135:40]
    _WIRE_1[1] <= w_fan_lvl_0[0] @[FanNetwork.scala 135:40]
    my_adder_1.io.i_data_bus[0] <= _WIRE_1[0] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_data_bus[1] <= _WIRE_1[1] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_add_en <= io.i_add_en_bus[2] @[FanNetwork.scala 136:28]
    my_adder_1.io.i_cmd <= io.i_cmd_bus[2] @[FanNetwork.scala 137:26]
    my_adder_1.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 138:25]
    node _w_vn_lvl_1_0_T = bits(my_adder_1.io.o_vn, 31, 0) @[FanNetwork.scala 139:40]
    w_vn_lvl_1[0] <= _w_vn_lvl_1_0_T @[FanNetwork.scala 139:19]
    node _w_vn_lvl_1_1_T = bits(my_adder_1.io.o_vn, 63, 32) @[FanNetwork.scala 140:40]
    w_vn_lvl_1[1] <= _w_vn_lvl_1_1_T @[FanNetwork.scala 140:19]
    node _w_vn_lvl_1_valid_0_T = bits(my_adder_1.io.o_vn_valid, 0, 0) @[FanNetwork.scala 141:52]
    w_vn_lvl_1_valid[0] <= _w_vn_lvl_1_valid_0_T @[FanNetwork.scala 141:25]
    node _w_vn_lvl_1_valid_1_T = bits(my_adder_1.io.o_vn_valid, 1, 1) @[FanNetwork.scala 142:52]
    w_vn_lvl_1_valid[1] <= _w_vn_lvl_1_valid_1_T @[FanNetwork.scala 142:25]
    w_fan_lvl_1[0] <= my_adder_1.io.o_adder @[FanNetwork.scala 143:20]
    inst my_adder_2 of EdgeAdderSwitch_2 @[FanNetwork.scala 145:28]
    my_adder_2.clock <= clock
    my_adder_2.reset <= reset
    my_adder_2.io.i_valid <= r_valid[0] @[FanNetwork.scala 147:27]
    wire _WIRE_2 : UInt<32>[2] @[FanNetwork.scala 148:40]
    _WIRE_2[0] <= io.i_data_bus[3] @[FanNetwork.scala 148:40]
    _WIRE_2[1] <= io.i_data_bus[2] @[FanNetwork.scala 148:40]
    my_adder_2.io.i_data_bus[0] <= _WIRE_2[0] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_data_bus[1] <= _WIRE_2[1] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_add_en <= io.i_add_en_bus[1] @[FanNetwork.scala 149:28]
    my_adder_2.io.i_cmd <= io.i_cmd_bus[1] @[FanNetwork.scala 150:25]
    my_adder_2.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 151:25]
    node _w_vn_lvl_0_2_T = bits(my_adder_2.io.o_vn, 31, 0) @[FanNetwork.scala 153:40]
    w_vn_lvl_0[2] <= _w_vn_lvl_0_2_T @[FanNetwork.scala 153:19]
    node _w_vn_lvl_0_3_T = bits(my_adder_2.io.o_vn, 63, 32) @[FanNetwork.scala 154:40]
    w_vn_lvl_0[3] <= _w_vn_lvl_0_3_T @[FanNetwork.scala 154:19]
    node _w_vn_lvl_0_valid_2_T = bits(my_adder_2.io.o_vn_valid, 0, 0) @[FanNetwork.scala 156:52]
    w_vn_lvl_0_valid[2] <= _w_vn_lvl_0_valid_2_T @[FanNetwork.scala 156:25]
    node _w_vn_lvl_0_valid_3_T = bits(my_adder_2.io.o_vn_valid, 1, 1) @[FanNetwork.scala 157:52]
    w_vn_lvl_0_valid[3] <= _w_vn_lvl_0_valid_3_T @[FanNetwork.scala 157:25]
    w_fan_lvl_0[1] <= my_adder_2.io.o_adder @[FanNetwork.scala 159:20]
    r_final_add <= UInt<1>("h0") @[FanNetwork.scala 163:17]
    r_final_add2 <= UInt<1>("h0") @[FanNetwork.scala 164:18]
    r_final_sum <= UInt<1>("h0") @[FanNetwork.scala 165:17]
    r_final_add <= io.i_add_en_bus[2] @[FanNetwork.scala 167:17]
    r_final_add2 <= r_final_add @[FanNetwork.scala 168:18]
    r_final_sum <= w_fan_lvl_1[0] @[FanNetwork.scala 169:17]
    io.o_data_bus[0] <= UInt<1>("h0") @[FanNetwork.scala 172:22]
    io.o_data_bus[1] <= UInt<1>("h0") @[FanNetwork.scala 173:22]
    io.o_data_bus[2] <= UInt<1>("h0") @[FanNetwork.scala 174:22]
    io.o_data_bus[3] <= UInt<1>("h0") @[FanNetwork.scala 175:22]
    io.o_data_bus[0] <= r_lvl_output_ff[4] @[FanNetwork.scala 177:22]
    node _T_29 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 178:24]
    when _T_29 : @[FanNetwork.scala 178:33]
      io.o_data_bus[1] <= r_final_sum @[FanNetwork.scala 179:26]
    else :
      io.o_data_bus[1] <= r_lvl_output_ff[5] @[FanNetwork.scala 181:26]
    io.o_data_bus[2] <= r_lvl_output_ff[6] @[FanNetwork.scala 183:22]
    io.o_data_bus[3] <= r_lvl_output_ff[7] @[FanNetwork.scala 184:22]
    io.o_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 187:19]
    io.o_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 188:19]
    io.o_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 189:19]
    io.o_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 190:19]
    io.o_valid[0] <= r_lvl_output_ff_valid[4] @[FanNetwork.scala 192:19]
    node _T_30 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 193:24]
    when _T_30 : @[FanNetwork.scala 193:33]
      io.o_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 194:23]
    else :
      io.o_valid[1] <= r_lvl_output_ff_valid[5] @[FanNetwork.scala 196:23]
    io.o_valid[2] <= r_lvl_output_ff_valid[6] @[FanNetwork.scala 198:19]
    io.o_valid[3] <= r_lvl_output_ff_valid[7] @[FanNetwork.scala 199:19]
    io.o_adder[0] <= UInt<1>("h0") @[FanNetwork.scala 203:19]
    io.o_adder[1] <= UInt<1>("h0") @[FanNetwork.scala 204:19]
    io.o_adder[2] <= UInt<1>("h0") @[FanNetwork.scala 205:19]
    io.o_adder[0] <= w_fan_lvl_0[0] @[FanNetwork.scala 207:19]
    io.o_adder[1] <= w_fan_lvl_1[0] @[FanNetwork.scala 208:19]
    io.o_adder[2] <= w_fan_lvl_0[1] @[FanNetwork.scala 209:19]

  module flexdpecom4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[2][2], i_vn : UInt<5>[4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4], matrix : UInt<16>[2][2]}

    reg o_vn : UInt<5>[4], clock with :
      reset => (UInt<1>("h0"), o_vn) @[FlexDPE.scala 29:15]
    wire _r_mult_WIRE : UInt<15>[4] @[FlexDPE.scala 33:34]
    _r_mult_WIRE[0] <= UInt<15>("h0") @[FlexDPE.scala 33:34]
    _r_mult_WIRE[1] <= UInt<15>("h0") @[FlexDPE.scala 33:34]
    _r_mult_WIRE[2] <= UInt<15>("h0") @[FlexDPE.scala 33:34]
    _r_mult_WIRE[3] <= UInt<15>("h0") @[FlexDPE.scala 33:34]
    reg r_mult : UInt<15>[4], clock with :
      reset => (reset, _r_mult_WIRE) @[FlexDPE.scala 33:26]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPE.scala 37:26]
    reg r_stationary_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff) @[FlexDPE.scala 41:30]
    reg r_stationary_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff2) @[FlexDPE.scala 42:31]
    reg r_data_valid_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff) @[FlexDPE.scala 44:30]
    reg r_data_valid_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff2) @[FlexDPE.scala 45:31]
    r_stationary_ff <= io.i_stationary @[FlexDPE.scala 47:21]
    r_stationary_ff2 <= r_stationary_ff @[FlexDPE.scala 48:22]
    r_data_valid_ff <= io.i_data_valid @[FlexDPE.scala 50:21]
    r_data_valid_ff2 <= r_data_valid_ff @[FlexDPE.scala 51:22]
    reg matrix : UInt<16>[2][2], clock with :
      reset => (UInt<1>("h0"), matrix) @[FlexDPE.scala 52:22]
    io.matrix <= matrix @[FlexDPE.scala 56:13]
    inst my_ivn of ivncontrol4 @[FlexDPE.scala 58:22]
    my_ivn.clock <= clock
    my_ivn.reset <= reset
    my_ivn.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPE.scala 59:33]
    my_ivn.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPE.scala 59:33]
    my_ivn.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPE.scala 59:33]
    my_ivn.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPE.scala 59:33]
    io.i_vn <= my_ivn.io.o_vn @[FlexDPE.scala 61:13]
    inst my_controller of fancontrol4 @[FlexDPE.scala 66:31]
    my_controller.clock <= clock
    my_controller.reset <= reset
    my_controller.io.i_vn[0] <= o_vn[0] @[FlexDPE.scala 68:27]
    my_controller.io.i_vn[1] <= o_vn[1] @[FlexDPE.scala 68:27]
    my_controller.io.i_vn[2] <= o_vn[2] @[FlexDPE.scala 68:27]
    my_controller.io.i_vn[3] <= o_vn[3] @[FlexDPE.scala 68:27]
    my_controller.io.i_stationary <= UInt<1>("h0") @[FlexDPE.scala 69:35]
    my_controller.io.i_data_valid <= io.i_data_valid @[FlexDPE.scala 70:35]
    inst my_Benes of Benes @[FlexDPE.scala 75:26]
    my_Benes.clock <= clock
    my_Benes.reset <= reset
    my_Benes.io.i_data_bus1[0] <= io.i_data_bus[0] @[FlexDPE.scala 77:29]
    my_Benes.io.i_data_bus1[1] <= io.i_data_bus[1] @[FlexDPE.scala 77:29]
    my_Benes.io.i_data_bus1[2] <= io.i_data_bus[2] @[FlexDPE.scala 77:29]
    my_Benes.io.i_data_bus1[3] <= io.i_data_bus[3] @[FlexDPE.scala 77:29]
    my_Benes.io.i_data_bus2[0] <= io.i_data_bus2[0] @[FlexDPE.scala 78:29]
    my_Benes.io.i_data_bus2[1] <= io.i_data_bus2[1] @[FlexDPE.scala 78:29]
    my_Benes.io.i_data_bus2[2] <= io.i_data_bus2[2] @[FlexDPE.scala 78:29]
    my_Benes.io.i_data_bus2[3] <= io.i_data_bus2[3] @[FlexDPE.scala 78:29]
    my_Benes.io.i_mux_bus[0] <= io.i_mux_bus[0] @[FlexDPE.scala 79:27]
    my_Benes.io.i_mux_bus[1] <= io.i_mux_bus[1] @[FlexDPE.scala 79:27]
    my_Benes.io.i_mux_bus[2] <= io.i_mux_bus[2] @[FlexDPE.scala 79:27]
    my_Benes.io.i_mux_bus[3] <= io.i_mux_bus[3] @[FlexDPE.scala 79:27]
    inst buffer_mult of buffer_multiplication @[FlexDPE.scala 87:30]
    buffer_mult.clock <= clock
    buffer_mult.reset <= reset
    buffer_mult.io.buffer1[0] <= my_Benes.io.o_dist_bus1[0] @[FlexDPE.scala 90:30]
    buffer_mult.io.buffer1[1] <= my_Benes.io.o_dist_bus1[1] @[FlexDPE.scala 90:30]
    buffer_mult.io.buffer1[2] <= my_Benes.io.o_dist_bus1[2] @[FlexDPE.scala 90:30]
    buffer_mult.io.buffer1[3] <= my_Benes.io.o_dist_bus1[3] @[FlexDPE.scala 90:30]
    buffer_mult.io.buffer2[0] <= my_Benes.io.o_dist_bus2[0] @[FlexDPE.scala 91:30]
    buffer_mult.io.buffer2[1] <= my_Benes.io.o_dist_bus2[1] @[FlexDPE.scala 91:30]
    buffer_mult.io.buffer2[2] <= my_Benes.io.o_dist_bus2[2] @[FlexDPE.scala 91:30]
    buffer_mult.io.buffer2[3] <= my_Benes.io.o_dist_bus2[3] @[FlexDPE.scala 91:30]
    r_mult <= buffer_mult.io.out @[FlexDPE.scala 93:14]
    inst my_fan_network of Fan4 @[FlexDPE.scala 99:32]
    my_fan_network.clock <= clock
    my_fan_network.reset <= reset
    my_fan_network.io.i_valid <= my_controller.io.o_reduction_valid @[FlexDPE.scala 101:31]
    my_fan_network.io.i_data_bus[0] <= r_mult[0] @[FlexDPE.scala 102:34]
    my_fan_network.io.i_data_bus[1] <= r_mult[1] @[FlexDPE.scala 102:34]
    my_fan_network.io.i_data_bus[2] <= r_mult[2] @[FlexDPE.scala 102:34]
    my_fan_network.io.i_data_bus[3] <= r_mult[3] @[FlexDPE.scala 102:34]
    my_fan_network.io.i_add_en_bus[0] <= my_controller.io.o_reduction_add[0] @[FlexDPE.scala 103:36]
    my_fan_network.io.i_add_en_bus[1] <= my_controller.io.o_reduction_add[1] @[FlexDPE.scala 103:36]
    my_fan_network.io.i_add_en_bus[2] <= my_controller.io.o_reduction_add[2] @[FlexDPE.scala 103:36]
    my_fan_network.io.i_cmd_bus[0] <= my_controller.io.o_reduction_cmd[0] @[FlexDPE.scala 104:33]
    my_fan_network.io.i_cmd_bus[1] <= my_controller.io.o_reduction_cmd[1] @[FlexDPE.scala 104:33]
    my_fan_network.io.i_cmd_bus[2] <= my_controller.io.o_reduction_cmd[2] @[FlexDPE.scala 104:33]
    io.o_valid <= my_fan_network.io.o_valid @[FlexDPE.scala 106:16]
    io.o_data_bus <= my_fan_network.io.o_data_bus @[FlexDPE.scala 107:19]
    io.o_adder <= my_fan_network.io.o_adder @[FlexDPE.scala 108:16]
    node _T = lt(counter, UInt<6>("h3c")) @[FlexDPE.scala 110:20]
    when _T : @[FlexDPE.scala 110:27]
      matrix[0][0] <= io.o_adder[0] @[FlexDPE.scala 111:20]
      matrix[1][0] <= io.o_adder[2] @[FlexDPE.scala 112:20]
      node _T_1 = eq(my_Benes.io.o_dist_bus1[3], UInt<1>("h0")) @[FlexDPE.scala 113:27]
      when _T_1 : @[FlexDPE.scala 113:36]
        matrix[1][0] <= r_mult[2] @[FlexDPE.scala 114:22]
      else :
        node _T_2 = eq(my_Benes.io.o_dist_bus1[2], UInt<1>("h0")) @[FlexDPE.scala 116:33]
        when _T_2 : @[FlexDPE.scala 116:41]
          matrix[1][0] <= r_mult[3] @[FlexDPE.scala 117:23]
        else :
          node _T_3 = eq(my_Benes.io.o_dist_bus1[1], UInt<1>("h0")) @[FlexDPE.scala 118:33]
          when _T_3 : @[FlexDPE.scala 118:41]
            matrix[0][0] <= r_mult[0] @[FlexDPE.scala 119:23]
          else :
            node _T_4 = eq(my_Benes.io.o_dist_bus1[0], UInt<1>("h0")) @[FlexDPE.scala 120:33]
            when _T_4 : @[FlexDPE.scala 120:41]
              matrix[0][0] <= r_mult[1] @[FlexDPE.scala 121:23]
    node _counter_T = add(counter, UInt<1>("h1")) @[FlexDPE.scala 131:24]
    node _counter_T_1 = tail(_counter_T, 1) @[FlexDPE.scala 131:24]
    counter <= _counter_T_1 @[FlexDPE.scala 131:13]
    node _T_5 = gt(counter, UInt<7>("h64")) @[FlexDPE.scala 134:19]
    when _T_5 : @[FlexDPE.scala 134:27]
      matrix[0][1] <= io.o_adder[0] @[FlexDPE.scala 135:20]
      matrix[1][1] <= io.o_adder[2] @[FlexDPE.scala 136:20]
      node _T_6 = eq(my_Benes.io.o_dist_bus1[3], UInt<1>("h0")) @[FlexDPE.scala 137:30]
      when _T_6 : @[FlexDPE.scala 137:39]
        matrix[1][1] <= r_mult[2] @[FlexDPE.scala 138:22]
      else :
        node _T_7 = eq(my_Benes.io.o_dist_bus1[2], UInt<1>("h0")) @[FlexDPE.scala 140:33]
        when _T_7 : @[FlexDPE.scala 140:41]
          matrix[1][1] <= r_mult[3] @[FlexDPE.scala 141:23]
        else :
          node _T_8 = eq(my_Benes.io.o_dist_bus1[1], UInt<1>("h0")) @[FlexDPE.scala 142:33]
          when _T_8 : @[FlexDPE.scala 142:41]
            matrix[0][1] <= r_mult[0] @[FlexDPE.scala 143:23]
          else :
            node _T_9 = eq(my_Benes.io.o_dist_bus1[0], UInt<1>("h0")) @[FlexDPE.scala 144:33]
            when _T_9 : @[FlexDPE.scala 144:41]
              matrix[0][1] <= r_mult[1] @[FlexDPE.scala 145:23]

  module FlexDPU :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[2][2], flip Streaming_matrix : UInt<16>[2][2], output : UInt<16>[2][2], flip valid : UInt<1>}

    wire _nonZeroValues_WIRE : UInt<32>[4] @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[0] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[1] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[2] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[3] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    reg nonZeroValues : UInt<32>[4], clock with :
      reset => (reset, _nonZeroValues_WIRE) @[FlexDPU.scala 28:32]
    reg index : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 29:24]
    reg iloop : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 30:24]
    reg jloop : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 31:24]
    reg Statvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FlexDPU.scala 32:28]
    reg high3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FlexDPU.scala 34:24]
    reg delay : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FlexDPU.scala 35:24]
    node _T = lt(iloop, UInt<1>("h1")) @[FlexDPU.scala 37:30]
    node _T_1 = and(io.valid, _T) @[FlexDPU.scala 37:20]
    node _T_2 = lt(jloop, UInt<1>("h1")) @[FlexDPU.scala 37:64]
    node _T_3 = and(_T_1, _T_2) @[FlexDPU.scala 37:54]
    when _T_3 : @[FlexDPU.scala 37:88]
      high3 <= UInt<1>("h1") @[FlexDPU.scala 38:15]
    else :
      node _T_4 = eq(iloop, UInt<1>("h1")) @[FlexDPU.scala 39:24]
      node _T_5 = eq(jloop, UInt<1>("h1")) @[FlexDPU.scala 39:60]
      node _T_6 = and(_T_4, _T_5) @[FlexDPU.scala 39:50]
      when _T_6 : @[FlexDPU.scala 39:86]
        high3 <= UInt<1>("h0") @[FlexDPU.scala 40:15]
    node _Statvalid_T = eq(iloop, UInt<1>("h1")) @[FlexDPU.scala 43:25]
    node _Statvalid_T_1 = eq(jloop, UInt<1>("h1")) @[FlexDPU.scala 43:61]
    node _Statvalid_T_2 = and(_Statvalid_T, _Statvalid_T_1) @[FlexDPU.scala 43:51]
    Statvalid <= _Statvalid_T_2 @[FlexDPU.scala 43:15]
    when high3 : @[FlexDPU.scala 44:17]
      node _T_7 = bits(iloop, 0, 0)
      node _T_8 = bits(jloop, 0, 0)
      node _T_9 = neq(io.Stationary_matrix[_T_7][_T_8], UInt<1>("h0")) @[FlexDPU.scala 45:46]
      when _T_9 : @[FlexDPU.scala 45:54]
        node _T_10 = bits(index, 1, 0)
        node _nonZeroValues_T = bits(iloop, 0, 0)
        node _nonZeroValues_T_1 = bits(jloop, 0, 0)
        nonZeroValues[_T_10] <= io.Stationary_matrix[_nonZeroValues_T][_nonZeroValues_T_1] @[FlexDPU.scala 46:30]
        node _index_T = add(index, UInt<1>("h1")) @[FlexDPU.scala 47:24]
        node _index_T_1 = tail(_index_T, 1) @[FlexDPU.scala 47:24]
        index <= _index_T_1 @[FlexDPU.scala 47:15]
      node _T_11 = lt(iloop, UInt<1>("h1")) @[FlexDPU.scala 50:18]
      node _T_12 = eq(jloop, UInt<1>("h1")) @[FlexDPU.scala 50:51]
      node _T_13 = and(_T_11, _T_12) @[FlexDPU.scala 50:41]
      when _T_13 : @[FlexDPU.scala 50:77]
        node _iloop_T = add(iloop, UInt<1>("h1")) @[FlexDPU.scala 51:24]
        node _iloop_T_1 = tail(_iloop_T, 1) @[FlexDPU.scala 51:24]
        iloop <= _iloop_T_1 @[FlexDPU.scala 51:15]
      node _T_14 = leq(iloop, UInt<1>("h1")) @[FlexDPU.scala 54:18]
      node _T_15 = lt(jloop, UInt<1>("h1")) @[FlexDPU.scala 54:52]
      node _T_16 = and(_T_14, _T_15) @[FlexDPU.scala 54:42]
      when _T_16 : @[FlexDPU.scala 54:76]
        node _jloop_T = add(jloop, UInt<1>("h1")) @[FlexDPU.scala 55:24]
        node _jloop_T_1 = tail(_jloop_T, 1) @[FlexDPU.scala 55:24]
        jloop <= _jloop_T_1 @[FlexDPU.scala 55:15]
      else :
        node _T_17 = eq(iloop, UInt<1>("h1")) @[FlexDPU.scala 56:22]
        node _T_18 = eq(jloop, UInt<1>("h1")) @[FlexDPU.scala 56:57]
        node _T_19 = and(_T_17, _T_18) @[FlexDPU.scala 56:47]
        when _T_19 : @[FlexDPU.scala 56:83]
          jloop <= jloop @[FlexDPU.scala 57:15]
        else :
          jloop <= UInt<1>("h0") @[FlexDPU.scala 59:15]
    wire _PF1mux_WIRE : UInt<4>[4] @[FlexDPU.scala 64:34]
    _PF1mux_WIRE[0] <= UInt<4>("h0") @[FlexDPU.scala 64:34]
    _PF1mux_WIRE[1] <= UInt<4>("h0") @[FlexDPU.scala 64:34]
    _PF1mux_WIRE[2] <= UInt<4>("h0") @[FlexDPU.scala 64:34]
    _PF1mux_WIRE[3] <= UInt<4>("h0") @[FlexDPU.scala 64:34]
    wire PF1mux : UInt<4>[4]
    PF1mux <= _PF1mux_WIRE
    wire _PF1src_WIRE : UInt<16>[4] @[FlexDPU.scala 65:34]
    _PF1src_WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 65:34]
    _PF1src_WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 65:34]
    _PF1src_WIRE[2] <= UInt<16>("h0") @[FlexDPU.scala 65:34]
    _PF1src_WIRE[3] <= UInt<16>("h0") @[FlexDPU.scala 65:34]
    wire PF1src : UInt<16>[4]
    PF1src <= _PF1src_WIRE
    wire _PF1dest_WIRE : UInt<16>[4] @[FlexDPU.scala 66:35]
    _PF1dest_WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 66:35]
    _PF1dest_WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 66:35]
    _PF1dest_WIRE[2] <= UInt<16>("h0") @[FlexDPU.scala 66:35]
    _PF1dest_WIRE[3] <= UInt<16>("h0") @[FlexDPU.scala 66:35]
    wire PF1dest : UInt<16>[4]
    PF1dest <= _PF1dest_WIRE
    reg PF1CountIteration : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 67:36]
    wire _PF1_Stream_Col_WIRE : UInt<32>[2] @[FlexDPU.scala 68:41]
    _PF1_Stream_Col_WIRE[0] <= UInt<32>("h0") @[FlexDPU.scala 68:41]
    _PF1_Stream_Col_WIRE[1] <= UInt<32>("h0") @[FlexDPU.scala 68:41]
    reg PF1_Stream_Col : UInt<32>[2], clock with :
      reset => (reset, _PF1_Stream_Col_WIRE) @[FlexDPU.scala 68:33]
    reg ModuleIndex : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 69:30]
    reg cc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 70:21]
    reg IterationIndex : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 81:33]
    wire src1 : UInt<16>[4] @[FlexDPU.scala 99:23]
    src1[0] <= io.Streaming_matrix[0][0] @[FlexDPU.scala 99:23]
    src1[1] <= io.Streaming_matrix[0][1] @[FlexDPU.scala 99:23]
    src1[2] <= UInt<1>("h0") @[FlexDPU.scala 99:23]
    src1[3] <= UInt<1>("h0") @[FlexDPU.scala 99:23]
    wire src2 : UInt<16>[4] @[FlexDPU.scala 100:23]
    src2[0] <= io.Streaming_matrix[0][0] @[FlexDPU.scala 100:23]
    src2[1] <= io.Streaming_matrix[0][1] @[FlexDPU.scala 100:23]
    src2[2] <= UInt<1>("h0") @[FlexDPU.scala 100:23]
    src2[3] <= UInt<1>("h0") @[FlexDPU.scala 100:23]
    wire dest : UInt<1>[4] @[FlexDPU.scala 101:23]
    dest[0] <= UInt<1>("h0") @[FlexDPU.scala 101:23]
    dest[1] <= UInt<1>("h0") @[FlexDPU.scala 101:23]
    dest[2] <= UInt<1>("h0") @[FlexDPU.scala 101:23]
    dest[3] <= UInt<1>("h0") @[FlexDPU.scala 101:23]
    wire dest2 : UInt<1>[4] @[FlexDPU.scala 102:24]
    dest2[0] <= UInt<1>("h0") @[FlexDPU.scala 102:24]
    dest2[1] <= UInt<1>("h0") @[FlexDPU.scala 102:24]
    dest2[2] <= UInt<1>("h0") @[FlexDPU.scala 102:24]
    dest2[3] <= UInt<1>("h0") @[FlexDPU.scala 102:24]
    when Statvalid : @[FlexDPU.scala 104:20]
      inst PathFinder of PathFinder @[FlexDPU.scala 106:44]
      PathFinder.clock <= clock
      PathFinder.reset <= reset
      wire PF : { flip Stationary_matrix : UInt<16>[2][2], flip Streaming_matrix : UInt<16>[2], i_mux_bus : UInt<4>[4], Source : UInt<16>[4], destination : UInt<16>[4], PF_Valid : UInt<1>, flip Ivalid : UInt<1>}[1] @[FlexDPU.scala 106:25]
      PathFinder.io.Ivalid <= PF[0].Ivalid @[FlexDPU.scala 106:25]
      PF[0].PF_Valid <= PathFinder.io.PF_Valid @[FlexDPU.scala 106:25]
      PF[0].destination <= PathFinder.io.destination @[FlexDPU.scala 106:25]
      PF[0].Source <= PathFinder.io.Source @[FlexDPU.scala 106:25]
      PF[0].i_mux_bus <= PathFinder.io.i_mux_bus @[FlexDPU.scala 106:25]
      PathFinder.io.Streaming_matrix[0] <= PF[0].Streaming_matrix[0] @[FlexDPU.scala 106:25]
      PathFinder.io.Streaming_matrix[1] <= PF[0].Streaming_matrix[1] @[FlexDPU.scala 106:25]
      PathFinder.io.Stationary_matrix[0][0] <= PF[0].Stationary_matrix[0][0] @[FlexDPU.scala 106:25]
      PathFinder.io.Stationary_matrix[0][1] <= PF[0].Stationary_matrix[0][1] @[FlexDPU.scala 106:25]
      PathFinder.io.Stationary_matrix[1][0] <= PF[0].Stationary_matrix[1][0] @[FlexDPU.scala 106:25]
      PathFinder.io.Stationary_matrix[1][1] <= PF[0].Stationary_matrix[1][1] @[FlexDPU.scala 106:25]
      reg PF_0_Ivalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), PF_0_Ivalid_REG) @[FlexDPU.scala 109:32]
      PF_0_Ivalid_REG <= Statvalid @[FlexDPU.scala 109:32]
      PF[0].Ivalid <= PF_0_Ivalid_REG @[FlexDPU.scala 109:22]
      PF[0].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 110:33]
      PF[0].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 110:33]
      PF[0].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 110:33]
      PF[0].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 110:33]
      PF[0].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 111:32]
      PF[0].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 111:32]
      PF1mux <= PF[0].i_mux_bus @[FlexDPU.scala 114:16]
      PF1src <= PF[0].Source @[FlexDPU.scala 115:16]
      PF1dest <= PF[0].destination @[FlexDPU.scala 116:17]
      reg delay2 : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 119:33]
      wire check2 : UInt<1>
      check2 <= UInt<1>("h0")
      when PF[0].PF_Valid : @[FlexDPU.scala 122:34]
        check2 <= UInt<1>("h1") @[FlexDPU.scala 123:24]
      else :
        node _T_20 = lt(delay2, UInt<3>("h4")) @[FlexDPU.scala 124:32]
        when _T_20 : @[FlexDPU.scala 124:71]
          node _delay2_T = add(delay2, UInt<1>("h1")) @[FlexDPU.scala 125:34]
          node _delay2_T_1 = tail(_delay2_T, 1) @[FlexDPU.scala 125:34]
          delay2 <= _delay2_T_1 @[FlexDPU.scala 125:24]
          check2 <= UInt<1>("h1") @[FlexDPU.scala 126:24]
      when PF[0].PF_Valid : @[FlexDPU.scala 129:29]
        inst MuxesWrapper of MuxesWrapper @[FlexDPU.scala 130:52]
        MuxesWrapper.clock <= clock
        MuxesWrapper.reset <= reset
        wire MuxWrapper : { flip valid : UInt<1>, flip src : UInt<32>[4], flip muxes : UInt<32>[4], Osrc : UInt<32>[4], Omuxes : UInt<32>[4][4]}[1] @[FlexDPU.scala 130:33]
        MuxWrapper[0].Omuxes <= MuxesWrapper.io.Omuxes @[FlexDPU.scala 130:33]
        MuxWrapper[0].Osrc <= MuxesWrapper.io.Osrc @[FlexDPU.scala 130:33]
        MuxesWrapper.io.muxes[0] <= MuxWrapper[0].muxes[0] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.muxes[1] <= MuxWrapper[0].muxes[1] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.muxes[2] <= MuxWrapper[0].muxes[2] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.muxes[3] <= MuxWrapper[0].muxes[3] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.src[0] <= MuxWrapper[0].src[0] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.src[1] <= MuxWrapper[0].src[1] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.src[2] <= MuxWrapper[0].src[2] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.src[3] <= MuxWrapper[0].src[3] @[FlexDPU.scala 130:33]
        MuxesWrapper.io.valid <= MuxWrapper[0].valid @[FlexDPU.scala 130:33]
        MuxWrapper[0].valid <= UInt<1>("h1") @[FlexDPU.scala 132:33]
        MuxWrapper[0].src[0] <= PF[0].Source[0] @[FlexDPU.scala 133:31]
        MuxWrapper[0].src[1] <= PF[0].Source[1] @[FlexDPU.scala 133:31]
        MuxWrapper[0].src[2] <= PF[0].Source[2] @[FlexDPU.scala 133:31]
        MuxWrapper[0].src[3] <= PF[0].Source[3] @[FlexDPU.scala 133:31]
        MuxWrapper[0].muxes[0] <= PF[0].i_mux_bus[0] @[FlexDPU.scala 134:33]
        MuxWrapper[0].muxes[1] <= PF[0].i_mux_bus[1] @[FlexDPU.scala 134:33]
        MuxWrapper[0].muxes[2] <= PF[0].i_mux_bus[2] @[FlexDPU.scala 134:33]
        MuxWrapper[0].muxes[3] <= PF[0].i_mux_bus[3] @[FlexDPU.scala 134:33]
        inst flexdpecom4 of flexdpecom4 @[FlexDPU.scala 138:46]
        flexdpecom4.clock <= clock
        flexdpecom4.reset <= reset
        wire FDPE : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[2][2], i_vn : UInt<5>[4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4], matrix : UInt<16>[2][2]}[1] @[FlexDPU.scala 138:27]
        FDPE[0].matrix <= flexdpecom4.io.matrix @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_mux_bus[0] <= FDPE[0].i_mux_bus[0] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_mux_bus[1] <= FDPE[0].i_mux_bus[1] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_mux_bus[2] <= FDPE[0].i_mux_bus[2] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_mux_bus[3] <= FDPE[0].i_mux_bus[3] @[FlexDPU.scala 138:27]
        FDPE[0].o_adder <= flexdpecom4.io.o_adder @[FlexDPU.scala 138:27]
        FDPE[0].o_data_bus <= flexdpecom4.io.o_data_bus @[FlexDPU.scala 138:27]
        FDPE[0].o_valid <= flexdpecom4.io.o_valid @[FlexDPU.scala 138:27]
        FDPE[0].i_vn <= flexdpecom4.io.i_vn @[FlexDPU.scala 138:27]
        flexdpecom4.io.Stationary_matrix[0][0] <= FDPE[0].Stationary_matrix[0][0] @[FlexDPU.scala 138:27]
        flexdpecom4.io.Stationary_matrix[0][1] <= FDPE[0].Stationary_matrix[0][1] @[FlexDPU.scala 138:27]
        flexdpecom4.io.Stationary_matrix[1][0] <= FDPE[0].Stationary_matrix[1][0] @[FlexDPU.scala 138:27]
        flexdpecom4.io.Stationary_matrix[1][1] <= FDPE[0].Stationary_matrix[1][1] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus2[0] <= FDPE[0].i_data_bus2[0] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus2[1] <= FDPE[0].i_data_bus2[1] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus2[2] <= FDPE[0].i_data_bus2[2] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus2[3] <= FDPE[0].i_data_bus2[3] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus[0] <= FDPE[0].i_data_bus[0] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus[1] <= FDPE[0].i_data_bus[1] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus[2] <= FDPE[0].i_data_bus[2] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_bus[3] <= FDPE[0].i_data_bus[3] @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_data_valid <= FDPE[0].i_data_valid @[FlexDPU.scala 138:27]
        flexdpecom4.io.i_stationary <= FDPE[0].i_stationary @[FlexDPU.scala 138:27]
        FDPE[0].i_stationary <= UInt<1>("h1") @[FlexDPU.scala 141:34]
        FDPE[0].i_data_valid <= UInt<1>("h1") @[FlexDPU.scala 142:34]
        FDPE[0].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 143:39]
        FDPE[0].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 143:39]
        FDPE[0].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 143:39]
        FDPE[0].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 143:39]
        FDPE[0].i_vn[0] <= UInt<1>("h1") @[FlexDPU.scala 145:37]
        node _FDPE_0_i_mux_bus_0_rev_T = dshr(PF[0].i_mux_bus[0], UInt<1>("h0")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_0_rev_T_1 = bits(_FDPE_0_i_mux_bus_0_rev_T, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_0_rev_T_2 = dshl(_FDPE_0_i_mux_bus_0_rev_T_1, UInt<2>("h3")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_0_rev_T_3 = or(UInt<1>("h0"), _FDPE_0_i_mux_bus_0_rev_T_2) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_0_rev_T_4 = dshr(PF[0].i_mux_bus[0], UInt<1>("h1")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_0_rev_T_5 = bits(_FDPE_0_i_mux_bus_0_rev_T_4, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_0_rev_T_6 = dshl(_FDPE_0_i_mux_bus_0_rev_T_5, UInt<2>("h2")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_0_rev_T_7 = or(_FDPE_0_i_mux_bus_0_rev_T_3, _FDPE_0_i_mux_bus_0_rev_T_6) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_0_rev_T_8 = dshr(PF[0].i_mux_bus[0], UInt<2>("h2")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_0_rev_T_9 = bits(_FDPE_0_i_mux_bus_0_rev_T_8, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_0_rev_T_10 = dshl(_FDPE_0_i_mux_bus_0_rev_T_9, UInt<1>("h1")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_0_rev_T_11 = or(_FDPE_0_i_mux_bus_0_rev_T_7, _FDPE_0_i_mux_bus_0_rev_T_10) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_0_rev_T_12 = dshr(PF[0].i_mux_bus[0], UInt<2>("h3")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_0_rev_T_13 = bits(_FDPE_0_i_mux_bus_0_rev_T_12, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_0_rev_T_14 = dshl(_FDPE_0_i_mux_bus_0_rev_T_13, UInt<1>("h0")) @[FlexDPU.scala 75:35]
        node FDPE_0_i_mux_bus_0_rev = or(_FDPE_0_i_mux_bus_0_rev_T_11, _FDPE_0_i_mux_bus_0_rev_T_14) @[FlexDPU.scala 75:17]
        FDPE[0].i_mux_bus[0] <= FDPE_0_i_mux_bus_0_rev @[FlexDPU.scala 146:46]
        FDPE[0].i_vn[1] <= UInt<1>("h1") @[FlexDPU.scala 145:37]
        node _FDPE_0_i_mux_bus_1_rev_T = dshr(PF[0].i_mux_bus[1], UInt<1>("h0")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_1_rev_T_1 = bits(_FDPE_0_i_mux_bus_1_rev_T, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_1_rev_T_2 = dshl(_FDPE_0_i_mux_bus_1_rev_T_1, UInt<2>("h3")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_1_rev_T_3 = or(UInt<1>("h0"), _FDPE_0_i_mux_bus_1_rev_T_2) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_1_rev_T_4 = dshr(PF[0].i_mux_bus[1], UInt<1>("h1")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_1_rev_T_5 = bits(_FDPE_0_i_mux_bus_1_rev_T_4, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_1_rev_T_6 = dshl(_FDPE_0_i_mux_bus_1_rev_T_5, UInt<2>("h2")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_1_rev_T_7 = or(_FDPE_0_i_mux_bus_1_rev_T_3, _FDPE_0_i_mux_bus_1_rev_T_6) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_1_rev_T_8 = dshr(PF[0].i_mux_bus[1], UInt<2>("h2")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_1_rev_T_9 = bits(_FDPE_0_i_mux_bus_1_rev_T_8, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_1_rev_T_10 = dshl(_FDPE_0_i_mux_bus_1_rev_T_9, UInt<1>("h1")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_1_rev_T_11 = or(_FDPE_0_i_mux_bus_1_rev_T_7, _FDPE_0_i_mux_bus_1_rev_T_10) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_1_rev_T_12 = dshr(PF[0].i_mux_bus[1], UInt<2>("h3")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_1_rev_T_13 = bits(_FDPE_0_i_mux_bus_1_rev_T_12, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_1_rev_T_14 = dshl(_FDPE_0_i_mux_bus_1_rev_T_13, UInt<1>("h0")) @[FlexDPU.scala 75:35]
        node FDPE_0_i_mux_bus_1_rev = or(_FDPE_0_i_mux_bus_1_rev_T_11, _FDPE_0_i_mux_bus_1_rev_T_14) @[FlexDPU.scala 75:17]
        FDPE[0].i_mux_bus[1] <= FDPE_0_i_mux_bus_1_rev @[FlexDPU.scala 146:46]
        FDPE[0].i_vn[2] <= UInt<1>("h1") @[FlexDPU.scala 145:37]
        node _FDPE_0_i_mux_bus_2_rev_T = dshr(PF[0].i_mux_bus[2], UInt<1>("h0")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_2_rev_T_1 = bits(_FDPE_0_i_mux_bus_2_rev_T, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_2_rev_T_2 = dshl(_FDPE_0_i_mux_bus_2_rev_T_1, UInt<2>("h3")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_2_rev_T_3 = or(UInt<1>("h0"), _FDPE_0_i_mux_bus_2_rev_T_2) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_2_rev_T_4 = dshr(PF[0].i_mux_bus[2], UInt<1>("h1")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_2_rev_T_5 = bits(_FDPE_0_i_mux_bus_2_rev_T_4, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_2_rev_T_6 = dshl(_FDPE_0_i_mux_bus_2_rev_T_5, UInt<2>("h2")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_2_rev_T_7 = or(_FDPE_0_i_mux_bus_2_rev_T_3, _FDPE_0_i_mux_bus_2_rev_T_6) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_2_rev_T_8 = dshr(PF[0].i_mux_bus[2], UInt<2>("h2")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_2_rev_T_9 = bits(_FDPE_0_i_mux_bus_2_rev_T_8, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_2_rev_T_10 = dshl(_FDPE_0_i_mux_bus_2_rev_T_9, UInt<1>("h1")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_2_rev_T_11 = or(_FDPE_0_i_mux_bus_2_rev_T_7, _FDPE_0_i_mux_bus_2_rev_T_10) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_2_rev_T_12 = dshr(PF[0].i_mux_bus[2], UInt<2>("h3")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_2_rev_T_13 = bits(_FDPE_0_i_mux_bus_2_rev_T_12, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_2_rev_T_14 = dshl(_FDPE_0_i_mux_bus_2_rev_T_13, UInt<1>("h0")) @[FlexDPU.scala 75:35]
        node FDPE_0_i_mux_bus_2_rev = or(_FDPE_0_i_mux_bus_2_rev_T_11, _FDPE_0_i_mux_bus_2_rev_T_14) @[FlexDPU.scala 75:17]
        FDPE[0].i_mux_bus[2] <= FDPE_0_i_mux_bus_2_rev @[FlexDPU.scala 146:46]
        FDPE[0].i_vn[3] <= UInt<1>("h1") @[FlexDPU.scala 145:37]
        node _FDPE_0_i_mux_bus_3_rev_T = dshr(PF[0].i_mux_bus[3], UInt<1>("h0")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_3_rev_T_1 = bits(_FDPE_0_i_mux_bus_3_rev_T, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_3_rev_T_2 = dshl(_FDPE_0_i_mux_bus_3_rev_T_1, UInt<2>("h3")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_3_rev_T_3 = or(UInt<1>("h0"), _FDPE_0_i_mux_bus_3_rev_T_2) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_3_rev_T_4 = dshr(PF[0].i_mux_bus[3], UInt<1>("h1")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_3_rev_T_5 = bits(_FDPE_0_i_mux_bus_3_rev_T_4, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_3_rev_T_6 = dshl(_FDPE_0_i_mux_bus_3_rev_T_5, UInt<2>("h2")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_3_rev_T_7 = or(_FDPE_0_i_mux_bus_3_rev_T_3, _FDPE_0_i_mux_bus_3_rev_T_6) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_3_rev_T_8 = dshr(PF[0].i_mux_bus[3], UInt<2>("h2")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_3_rev_T_9 = bits(_FDPE_0_i_mux_bus_3_rev_T_8, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_3_rev_T_10 = dshl(_FDPE_0_i_mux_bus_3_rev_T_9, UInt<1>("h1")) @[FlexDPU.scala 75:35]
        node _FDPE_0_i_mux_bus_3_rev_T_11 = or(_FDPE_0_i_mux_bus_3_rev_T_7, _FDPE_0_i_mux_bus_3_rev_T_10) @[FlexDPU.scala 75:17]
        node _FDPE_0_i_mux_bus_3_rev_T_12 = dshr(PF[0].i_mux_bus[3], UInt<2>("h3")) @[FlexDPU.scala 75:24]
        node _FDPE_0_i_mux_bus_3_rev_T_13 = bits(_FDPE_0_i_mux_bus_3_rev_T_12, 0, 0) @[FlexDPU.scala 75:31]
        node _FDPE_0_i_mux_bus_3_rev_T_14 = dshl(_FDPE_0_i_mux_bus_3_rev_T_13, UInt<1>("h0")) @[FlexDPU.scala 75:35]
        node FDPE_0_i_mux_bus_3_rev = or(_FDPE_0_i_mux_bus_3_rev_T_11, _FDPE_0_i_mux_bus_3_rev_T_14) @[FlexDPU.scala 75:17]
        FDPE[0].i_mux_bus[3] <= FDPE_0_i_mux_bus_3_rev @[FlexDPU.scala 146:46]
        FDPE[0].i_data_bus2[0] <= MuxWrapper[0].Osrc[0] @[FlexDPU.scala 148:33]
        FDPE[0].i_data_bus2[1] <= MuxWrapper[0].Osrc[1] @[FlexDPU.scala 148:33]
        FDPE[0].i_data_bus2[2] <= MuxWrapper[0].Osrc[2] @[FlexDPU.scala 148:33]
        FDPE[0].i_data_bus2[3] <= MuxWrapper[0].Osrc[3] @[FlexDPU.scala 148:33]
        FDPE[0].i_data_bus[0] <= nonZeroValues[0] @[FlexDPU.scala 154:37]
        FDPE[0].i_data_bus[1] <= nonZeroValues[1] @[FlexDPU.scala 155:37]
        FDPE[0].i_data_bus[2] <= nonZeroValues[2] @[FlexDPU.scala 156:37]
        FDPE[0].i_data_bus[3] <= nonZeroValues[3] @[FlexDPU.scala 157:37]
        io.output <= FDPE[0].matrix @[FlexDPU.scala 160:19]
      else :
        wire _WIRE : UInt<16>[2] @[FlexDPU.scala 163:71]
        _WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 163:71]
        _WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 163:71]
        wire _WIRE_1 : UInt<16>[2] @[FlexDPU.scala 163:71]
        _WIRE_1[0] <= UInt<16>("h0") @[FlexDPU.scala 163:71]
        _WIRE_1[1] <= UInt<16>("h0") @[FlexDPU.scala 163:71]
        wire _WIRE_2 : UInt<16>[2][2] @[FlexDPU.scala 163:38]
        _WIRE_2[0] <= _WIRE @[FlexDPU.scala 163:38]
        _WIRE_2[1] <= _WIRE_1 @[FlexDPU.scala 163:38]
        wire _WIRE_3 : UInt<16>[2][2]
        _WIRE_3 <= _WIRE_2
        io.output <= _WIRE_3 @[FlexDPU.scala 163:19]
      reg delay4 : UInt<16>, clock with :
        reset => (reset, UInt<16>("h0")) @[FlexDPU.scala 186:29]
      reg high4 : UInt<1>, clock with :
        reset => (reset, UInt<1>("h0")) @[FlexDPU.scala 187:28]
      when PF[0].PF_Valid : @[FlexDPU.scala 189:29]
        high4 <= UInt<1>("h1") @[FlexDPU.scala 190:19]
        node _delay4_T = add(delay4, UInt<1>("h1")) @[FlexDPU.scala 191:30]
        node _delay4_T_1 = tail(_delay4_T, 1) @[FlexDPU.scala 191:30]
        delay4 <= _delay4_T_1 @[FlexDPU.scala 191:20]
      else :
        node _T_21 = gt(delay4, UInt<1>("h0")) @[FlexDPU.scala 192:35]
        node _T_22 = and(high4, _T_21) @[FlexDPU.scala 192:25]
        when _T_22 : @[FlexDPU.scala 192:42]
          node _delay4_T_2 = add(delay4, UInt<1>("h1")) @[FlexDPU.scala 193:30]
          node _delay4_T_3 = tail(_delay4_T_2, 1) @[FlexDPU.scala 193:30]
          delay4 <= _delay4_T_3 @[FlexDPU.scala 193:20]
          high4 <= UInt<1>("h1") @[FlexDPU.scala 194:19]
      node _T_23 = eq(ModuleIndex, UInt<1>("h1")) @[FlexDPU.scala 197:27]
      when _T_23 : @[FlexDPU.scala 197:54]
        ModuleIndex <= ModuleIndex @[FlexDPU.scala 198:25]
      node _T_24 = eq(delay4, UInt<5>("h14")) @[FlexDPU.scala 201:32]
      node _T_25 = and(high4, _T_24) @[FlexDPU.scala 201:21]
      node _T_26 = lt(ModuleIndex, UInt<1>("h1")) @[FlexDPU.scala 201:58]
      node _T_27 = and(_T_25, _T_26) @[FlexDPU.scala 201:42]
      when _T_27 : @[FlexDPU.scala 201:84]
        high4 <= UInt<1>("h0") @[FlexDPU.scala 202:19]
        delay4 <= UInt<1>("h0") @[FlexDPU.scala 203:20]
        node _ModuleIndex_T = add(ModuleIndex, UInt<1>("h1")) @[FlexDPU.scala 204:40]
        node _ModuleIndex_T_1 = tail(_ModuleIndex_T, 1) @[FlexDPU.scala 204:40]
        ModuleIndex <= _ModuleIndex_T_1 @[FlexDPU.scala 204:25]
      node _PF1_Stream_Col_0_T = bits(ModuleIndex, 0, 0)
      PF1_Stream_Col[0] <= io.Streaming_matrix[0][_PF1_Stream_Col_0_T] @[FlexDPU.scala 212:31]
      node _PF1_Stream_Col_1_T = bits(ModuleIndex, 0, 0)
      PF1_Stream_Col[1] <= io.Streaming_matrix[1][_PF1_Stream_Col_1_T] @[FlexDPU.scala 212:31]
    else :
      wire _WIRE_4 : UInt<16>[2] @[FlexDPU.scala 299:71]
      _WIRE_4[0] <= UInt<16>("h0") @[FlexDPU.scala 299:71]
      _WIRE_4[1] <= UInt<16>("h0") @[FlexDPU.scala 299:71]
      wire _WIRE_5 : UInt<16>[2] @[FlexDPU.scala 299:71]
      _WIRE_5[0] <= UInt<16>("h0") @[FlexDPU.scala 299:71]
      _WIRE_5[1] <= UInt<16>("h0") @[FlexDPU.scala 299:71]
      wire _WIRE_6 : UInt<16>[2][2] @[FlexDPU.scala 299:38]
      _WIRE_6[0] <= _WIRE_4 @[FlexDPU.scala 299:38]
      _WIRE_6[1] <= _WIRE_5 @[FlexDPU.scala 299:38]
      wire _WIRE_7 : UInt<16>[2][2]
      _WIRE_7 <= _WIRE_6
      io.output <= _WIRE_7 @[FlexDPU.scala 299:19]

  module Top :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip Stationary_matrix : UInt<32>[2][2], flip Streaming_matrix : UInt<32>[2][2], Third_Matrix : UInt<32>[2][2]}

    inst PreProcessor of Regor @[TOP.scala 14:30]
    PreProcessor.clock <= clock
    PreProcessor.reset <= reset
    PreProcessor.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[TOP.scala 15:26]
    PreProcessor.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[TOP.scala 15:26]
    PreProcessor.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[TOP.scala 15:26]
    PreProcessor.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[TOP.scala 15:26]
    PreProcessor.io.mat2[0][0] <= io.Streaming_matrix[0][0] @[TOP.scala 16:26]
    PreProcessor.io.mat2[0][1] <= io.Streaming_matrix[0][1] @[TOP.scala 16:26]
    PreProcessor.io.mat2[1][0] <= io.Streaming_matrix[1][0] @[TOP.scala 16:26]
    PreProcessor.io.mat2[1][1] <= io.Streaming_matrix[1][1] @[TOP.scala 16:26]
    reg high : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[TOP.scala 17:23]
    reg delay : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[TOP.scala 18:24]
    when PreProcessor.io.End : @[TOP.scala 19:30]
      high <= UInt<1>("h1") @[TOP.scala 20:14]
      node _delay_T = add(delay, UInt<1>("h1")) @[TOP.scala 21:24]
      node _delay_T_1 = tail(_delay_T, 1) @[TOP.scala 21:24]
      delay <= _delay_T_1 @[TOP.scala 21:15]
    node _T = geq(delay, UInt<1>("h1")) @[TOP.scala 23:18]
    when _T : @[TOP.scala 23:25]
      node _delay_T_2 = add(delay, UInt<1>("h1")) @[TOP.scala 24:24]
      node _delay_T_3 = tail(_delay_T_2, 1) @[TOP.scala 24:24]
      delay <= _delay_T_3 @[TOP.scala 24:15]
      high <= UInt<1>("h1") @[TOP.scala 25:14]
    node _T_1 = eq(delay, UInt<1>("h1")) @[TOP.scala 28:17]
    when _T_1 : @[TOP.scala 28:25]
      inst FDPU of FlexDPU @[TOP.scala 29:26]
      FDPU.clock <= clock
      FDPU.reset <= reset
      FDPU.io.Stationary_matrix[0][0] <= PreProcessor.io.compressedBitmap[0][0] @[TOP.scala 30:35]
      FDPU.io.Stationary_matrix[0][1] <= PreProcessor.io.compressedBitmap[0][1] @[TOP.scala 30:35]
      FDPU.io.Stationary_matrix[1][0] <= PreProcessor.io.compressedBitmap[1][0] @[TOP.scala 30:35]
      FDPU.io.Stationary_matrix[1][1] <= PreProcessor.io.compressedBitmap[1][1] @[TOP.scala 30:35]
      FDPU.io.Streaming_matrix[0][0] <= io.Streaming_matrix[0][0] @[TOP.scala 31:34]
      FDPU.io.Streaming_matrix[0][1] <= io.Streaming_matrix[0][1] @[TOP.scala 31:34]
      FDPU.io.Streaming_matrix[1][0] <= io.Streaming_matrix[1][0] @[TOP.scala 31:34]
      FDPU.io.Streaming_matrix[1][1] <= io.Streaming_matrix[1][1] @[TOP.scala 31:34]
      FDPU.io.valid <= high @[TOP.scala 32:23]
      io.Third_Matrix <= FDPU.io.output @[TOP.scala 33:25]
    else :
      wire _WIRE : UInt<32>[2] @[TOP.scala 35:77]
      _WIRE[0] <= UInt<32>("h0") @[TOP.scala 35:77]
      _WIRE[1] <= UInt<32>("h0") @[TOP.scala 35:77]
      wire _WIRE_1 : UInt<32>[2] @[TOP.scala 35:77]
      _WIRE_1[0] <= UInt<32>("h0") @[TOP.scala 35:77]
      _WIRE_1[1] <= UInt<32>("h0") @[TOP.scala 35:77]
      wire _WIRE_2 : UInt<32>[2][2] @[TOP.scala 35:44]
      _WIRE_2[0] <= _WIRE @[TOP.scala 35:44]
      _WIRE_2[1] <= _WIRE_1 @[TOP.scala 35:44]
      wire _WIRE_3 : UInt<32>[2][2]
      _WIRE_3 <= _WIRE_2
      io.Third_Matrix <= _WIRE_3 @[TOP.scala 35:25]

