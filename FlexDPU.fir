circuit FlexDPU :
  module Muxes :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_1 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_1 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_1 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_1 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_1 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_2 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_2 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_2 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_2 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_2 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_3 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_3 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_3 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_3 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_3 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_4 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_4 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_4 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_4 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_4 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_5 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_5 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_5 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_5 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_5 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_6 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_6 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_6 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_6 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_6 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_7 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_7 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_7 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_7 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_7 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_8 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_8 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_8 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_8 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_8 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_9 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_9 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_9 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_9 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_9 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_10 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_10 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_10 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_10 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_10 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_11 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_11 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_11 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_11 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_11 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_12 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_12 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_12 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_12 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_12 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_13 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_13 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_13 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_13 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_13 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_14 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_14 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_14 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_14 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_14 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module Muxes_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip mat1 : UInt<16>[4][4], flip mat2 : UInt<16>[4], flip counterMatrix1 : UInt<16>[4][4], flip counterMatrix2 : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], valid : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[Muxes.scala 19:40]
    prevStationary_matrix[0][0] <= io.mat1[0][0] @[Muxes.scala 19:40]
    prevStationary_matrix[0][1] <= io.mat1[0][1] @[Muxes.scala 19:40]
    prevStationary_matrix[0][2] <= io.mat1[0][2] @[Muxes.scala 19:40]
    prevStationary_matrix[0][3] <= io.mat1[0][3] @[Muxes.scala 19:40]
    prevStationary_matrix[1][0] <= io.mat1[1][0] @[Muxes.scala 19:40]
    prevStationary_matrix[1][1] <= io.mat1[1][1] @[Muxes.scala 19:40]
    prevStationary_matrix[1][2] <= io.mat1[1][2] @[Muxes.scala 19:40]
    prevStationary_matrix[1][3] <= io.mat1[1][3] @[Muxes.scala 19:40]
    prevStationary_matrix[2][0] <= io.mat1[2][0] @[Muxes.scala 19:40]
    prevStationary_matrix[2][1] <= io.mat1[2][1] @[Muxes.scala 19:40]
    prevStationary_matrix[2][2] <= io.mat1[2][2] @[Muxes.scala 19:40]
    prevStationary_matrix[2][3] <= io.mat1[2][3] @[Muxes.scala 19:40]
    prevStationary_matrix[3][0] <= io.mat1[3][0] @[Muxes.scala 19:40]
    prevStationary_matrix[3][1] <= io.mat1[3][1] @[Muxes.scala 19:40]
    prevStationary_matrix[3][2] <= io.mat1[3][2] @[Muxes.scala 19:40]
    prevStationary_matrix[3][3] <= io.mat1[3][3] @[Muxes.scala 19:40]
    reg prevStreaming_matrix : UInt<16>[4], clock with :
      reset => (UInt<1>("h0"), prevStreaming_matrix) @[Muxes.scala 20:39]
    prevStreaming_matrix[0] <= io.mat2[0] @[Muxes.scala 20:39]
    prevStreaming_matrix[1] <= io.mat2[1] @[Muxes.scala 20:39]
    prevStreaming_matrix[2] <= io.mat2[2] @[Muxes.scala 20:39]
    prevStreaming_matrix[3] <= io.mat2[3] @[Muxes.scala 20:39]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[Muxes.scala 21:31]
    matricesAreEqual <= UInt<1>("h1") @[Muxes.scala 22:22]
    reg jValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 27:25]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 28:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 29:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 30:20]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Muxes.scala 31:26]
    wire _mux_WIRE : UInt<4>[16] @[Muxes.scala 32:30]
    _mux_WIRE[0] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[1] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[2] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[3] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[4] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[5] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[6] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[7] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[8] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[9] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[10] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[11] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[12] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[13] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[14] <= UInt<4>("h0") @[Muxes.scala 32:30]
    _mux_WIRE[15] <= UInt<4>("h0") @[Muxes.scala 32:30]
    reg mux : UInt<4>[16], clock with :
      reset => (reset, _mux_WIRE) @[Muxes.scala 32:22]
    wire _src_WIRE : UInt<16>[16] @[Muxes.scala 33:30]
    _src_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 33:30]
    _src_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 33:30]
    reg src : UInt<16>[16], clock with :
      reset => (reset, _src_WIRE) @[Muxes.scala 33:22]
    wire _dest_WIRE : UInt<16>[16] @[Muxes.scala 34:31]
    _dest_WIRE[0] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[1] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[2] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[3] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[4] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[5] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[6] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[7] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[8] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[9] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[10] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[11] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[12] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[13] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[14] <= UInt<16>("h0") @[Muxes.scala 34:31]
    _dest_WIRE[15] <= UInt<16>("h0") @[Muxes.scala 34:31]
    reg dest : UInt<16>[16], clock with :
      reset => (reset, _dest_WIRE) @[Muxes.scala 34:23]
    io.i_mux_bus <= mux @[Muxes.scala 35:18]
    io.Source <= src @[Muxes.scala 36:15]
    io.destination <= dest @[Muxes.scala 37:20]
    node _T = neq(io.mat1[0][0], prevStationary_matrix[0][0]) @[Muxes.scala 45:28]
    when _T : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_1 = neq(io.mat1[0][1], prevStationary_matrix[0][1]) @[Muxes.scala 45:28]
    when _T_1 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_2 = neq(io.mat1[0][2], prevStationary_matrix[0][2]) @[Muxes.scala 45:28]
    when _T_2 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_3 = neq(io.mat1[0][3], prevStationary_matrix[0][3]) @[Muxes.scala 45:28]
    when _T_3 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_4 = neq(io.mat2[0], prevStreaming_matrix[0]) @[Muxes.scala 49:23]
    when _T_4 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_5 = neq(io.mat1[1][0], prevStationary_matrix[1][0]) @[Muxes.scala 45:28]
    when _T_5 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_6 = neq(io.mat1[1][1], prevStationary_matrix[1][1]) @[Muxes.scala 45:28]
    when _T_6 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_7 = neq(io.mat1[1][2], prevStationary_matrix[1][2]) @[Muxes.scala 45:28]
    when _T_7 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_8 = neq(io.mat1[1][3], prevStationary_matrix[1][3]) @[Muxes.scala 45:28]
    when _T_8 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_9 = neq(io.mat2[1], prevStreaming_matrix[1]) @[Muxes.scala 49:23]
    when _T_9 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_10 = neq(io.mat1[2][0], prevStationary_matrix[2][0]) @[Muxes.scala 45:28]
    when _T_10 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_11 = neq(io.mat1[2][1], prevStationary_matrix[2][1]) @[Muxes.scala 45:28]
    when _T_11 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_12 = neq(io.mat1[2][2], prevStationary_matrix[2][2]) @[Muxes.scala 45:28]
    when _T_12 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_13 = neq(io.mat1[2][3], prevStationary_matrix[2][3]) @[Muxes.scala 45:28]
    when _T_13 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_14 = neq(io.mat2[2], prevStreaming_matrix[2]) @[Muxes.scala 49:23]
    when _T_14 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_15 = neq(io.mat1[3][0], prevStationary_matrix[3][0]) @[Muxes.scala 45:28]
    when _T_15 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_16 = neq(io.mat1[3][1], prevStationary_matrix[3][1]) @[Muxes.scala 45:28]
    when _T_16 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_17 = neq(io.mat1[3][2], prevStationary_matrix[3][2]) @[Muxes.scala 45:28]
    when _T_17 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_18 = neq(io.mat1[3][3], prevStationary_matrix[3][3]) @[Muxes.scala 45:28]
    when _T_18 : @[Muxes.scala 45:61]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 46:28]
    node _T_19 = neq(io.mat2[3], prevStreaming_matrix[3]) @[Muxes.scala 49:23]
    when _T_19 : @[Muxes.scala 49:51]
      matricesAreEqual <= UInt<1>("h0") @[Muxes.scala 50:26]
    node _T_20 = bits(j, 1, 0)
    node _T_21 = bits(i, 1, 0)
    node _T_22 = neq(io.counterMatrix1[_T_20][_T_21], UInt<1>("h0")) @[Muxes.scala 54:36]
    node _T_23 = bits(i, 1, 0)
    node _T_24 = neq(io.mat2[_T_23], UInt<1>("h0")) @[Muxes.scala 54:60]
    node _T_25 = and(_T_22, _T_24) @[Muxes.scala 54:45]
    when _T_25 : @[Muxes.scala 54:70]
      node _T_26 = bits(j, 1, 0)
      node _T_27 = bits(i, 1, 0)
      node _T_28 = bits(i, 1, 0)
      node _T_29 = leq(io.counterMatrix1[_T_26][_T_27], io.counterMatrix2[_T_28]) @[Muxes.scala 56:38]
      when _T_29 : @[Muxes.scala 56:62]
        node _T_30 = bits(counter, 3, 0)
        node _mux_T = bits(i, 1, 0)
        node _mux_T_1 = sub(io.counterMatrix2[_mux_T], UInt<1>("h1")) @[Muxes.scala 57:51]
        node _mux_T_2 = tail(_mux_T_1, 1) @[Muxes.scala 57:51]
        node _mux_T_3 = bits(j, 1, 0)
        node _mux_T_4 = bits(i, 1, 0)
        node _mux_T_5 = sub(io.counterMatrix1[_mux_T_3][_mux_T_4], UInt<1>("h1")) @[Muxes.scala 57:85]
        node _mux_T_6 = tail(_mux_T_5, 1) @[Muxes.scala 57:85]
        node _mux_T_7 = sub(_mux_T_2, _mux_T_6) @[Muxes.scala 57:58]
        node _mux_T_8 = tail(_mux_T_7, 1) @[Muxes.scala 57:58]
        mux[_T_30] <= _mux_T_8 @[Muxes.scala 57:24]
        node _T_31 = bits(counter, 3, 0)
        node _src_T = bits(i, 1, 0)
        src[_T_31] <= io.mat2[_src_T] @[Muxes.scala 58:24]
        node _T_32 = bits(counter, 3, 0)
        node _dest_T = bits(j, 1, 0)
        node _dest_T_1 = bits(i, 1, 0)
        dest[_T_32] <= io.mat1[_dest_T][_dest_T_1] @[Muxes.scala 59:25]
      else :
        node _T_33 = bits(counter, 3, 0)
        node _mux_T_9 = bits(j, 1, 0)
        node _mux_T_10 = bits(i, 1, 0)
        node _mux_T_11 = sub(io.counterMatrix1[_mux_T_9][_mux_T_10], UInt<1>("h1")) @[Muxes.scala 61:54]
        node _mux_T_12 = tail(_mux_T_11, 1) @[Muxes.scala 61:54]
        node _mux_T_13 = bits(i, 1, 0)
        node _mux_T_14 = sub(io.counterMatrix2[_mux_T_13], UInt<1>("h1")) @[Muxes.scala 61:85]
        node _mux_T_15 = tail(_mux_T_14, 1) @[Muxes.scala 61:85]
        node _mux_T_16 = sub(_mux_T_12, _mux_T_15) @[Muxes.scala 61:61]
        node _mux_T_17 = tail(_mux_T_16, 1) @[Muxes.scala 61:61]
        mux[_T_33] <= _mux_T_17 @[Muxes.scala 61:24]
        node _T_34 = bits(counter, 3, 0)
        node _src_T_1 = bits(i, 1, 0)
        src[_T_34] <= io.mat2[_src_T_1] @[Muxes.scala 62:24]
        node _T_35 = bits(counter, 3, 0)
        node _dest_T_2 = bits(j, 1, 0)
        node _dest_T_3 = bits(i, 1, 0)
        dest[_T_35] <= io.mat1[_dest_T_2][_dest_T_3] @[Muxes.scala 63:25]
      node _T_36 = not(jValid) @[Muxes.scala 66:15]
      when _T_36 : @[Muxes.scala 66:24]
        node _T_37 = eq(j, UInt<2>("h3")) @[Muxes.scala 68:22]
        node _T_38 = eq(i, UInt<2>("h3")) @[Muxes.scala 68:56]
        node _T_39 = and(_T_37, _T_38) @[Muxes.scala 68:50]
        node _T_40 = not(_T_39) @[Muxes.scala 68:17]
        when _T_40 : @[Muxes.scala 68:85]
          node _counter_T = add(counter, UInt<1>("h1")) @[Muxes.scala 69:30]
          node _counter_T_1 = tail(_counter_T, 1) @[Muxes.scala 69:30]
          counter <= _counter_T_1 @[Muxes.scala 69:19]
    node _T_41 = eq(jValid, UInt<1>("h0")) @[Muxes.scala 76:19]
    when _T_41 : @[Muxes.scala 76:29]
      node _T_42 = lt(j, UInt<2>("h3")) @[Muxes.scala 78:14]
      when _T_42 : @[Muxes.scala 78:40]
        node _j_T = add(j, UInt<1>("h1")) @[Muxes.scala 79:16]
        node _j_T_1 = tail(_j_T, 1) @[Muxes.scala 79:16]
        j <= _j_T_1 @[Muxes.scala 79:11]
      else :
        node _T_43 = eq(j, UInt<2>("h3")) @[Muxes.scala 80:21]
        node _T_44 = eq(i, UInt<2>("h3")) @[Muxes.scala 80:55]
        node _T_45 = and(_T_43, _T_44) @[Muxes.scala 80:49]
        when _T_45 : @[Muxes.scala 80:83]
          jValid <= UInt<1>("h1") @[Muxes.scala 81:16]
        else :
          j <= UInt<1>("h0") @[Muxes.scala 83:11]
          node _T_46 = lt(i, UInt<2>("h3")) @[Muxes.scala 84:16]
          when _T_46 : @[Muxes.scala 84:42]
            node _i_T = add(i, UInt<1>("h1")) @[Muxes.scala 85:18]
            node _i_T_1 = tail(_i_T, 1) @[Muxes.scala 85:18]
            i <= _i_T_1 @[Muxes.scala 85:13]
    else :
      node _T_47 = eq(jValid, UInt<1>("h1")) @[Muxes.scala 89:25]
      node _T_48 = eq(matricesAreEqual, UInt<1>("h0")) @[Muxes.scala 89:55]
      node _T_49 = and(_T_47, _T_48) @[Muxes.scala 89:34]
      when _T_49 : @[Muxes.scala 89:64]
        i <= UInt<1>("h0") @[Muxes.scala 91:9]
        j <= UInt<1>("h0") @[Muxes.scala 92:9]
        jValid <= UInt<1>("h0") @[Muxes.scala 93:14]
        counter <= UInt<1>("h0") @[Muxes.scala 94:15]
        src[0] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[0] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[0] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[1] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[1] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[1] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[2] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[2] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[2] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[3] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[3] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[3] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[4] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[4] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[4] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[5] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[5] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[5] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[6] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[6] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[6] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[7] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[7] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[7] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[8] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[8] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[8] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[9] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[9] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[9] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[10] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[10] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[10] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[11] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[11] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[11] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[12] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[12] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[12] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[13] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[13] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[13] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[14] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[14] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[14] <= UInt<1>("h0") @[Muxes.scala 99:16]
        src[15] <= UInt<1>("h0") @[Muxes.scala 97:16]
        dest[15] <= UInt<1>("h0") @[Muxes.scala 98:17]
        mux[15] <= UInt<1>("h0") @[Muxes.scala 99:16]
    reg jNext : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Muxes.scala 105:24]
    jNext <= j @[Muxes.scala 106:11]
    node _T_50 = neq(k, UInt<1>("h0")) @[Muxes.scala 108:14]
    node _T_51 = eq(j, UInt<2>("h3")) @[Muxes.scala 108:28]
    node _T_52 = and(_T_50, _T_51) @[Muxes.scala 108:22]
    node _T_53 = eq(i, UInt<2>("h3")) @[Muxes.scala 108:60]
    node _T_54 = and(_T_52, _T_53) @[Muxes.scala 108:54]
    node _T_55 = eq(jNext, UInt<2>("h2")) @[Muxes.scala 108:96]
    node _T_56 = and(_T_54, _T_55) @[Muxes.scala 108:86]
    when _T_56 : @[Muxes.scala 108:122]
      io.valid <= UInt<1>("h1") @[Muxes.scala 109:16]
    else :
      io.valid <= UInt<1>("h0") @[Muxes.scala 111:16]
    node _T_57 = eq(i, UInt<2>("h3")) @[Muxes.scala 113:14]
    node _T_58 = eq(j, UInt<2>("h3")) @[Muxes.scala 113:48]
    node _T_59 = and(_T_57, _T_58) @[Muxes.scala 113:42]
    when _T_59 : @[Muxes.scala 113:76]
      node _k_T = add(k, UInt<1>("h1")) @[Muxes.scala 114:14]
      node _k_T_1 = tail(_k_T, 1) @[Muxes.scala 114:14]
      k <= _k_T_1 @[Muxes.scala 114:9]

  module SourceDestination_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], counterMatrix1 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4][4]}, counterMatrix2 : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[4]}, valid : UInt<1>, flip start : UInt<1>}

    reg prevStationary_matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), prevStationary_matrix) @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[SourceDestination.scala 15:40]
    prevStationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[SourceDestination.scala 15:40]
    reg matricesAreEqual : UInt<1>, clock with :
      reset => (UInt<1>("h0"), matricesAreEqual) @[SourceDestination.scala 16:31]
    wire _counterRegs1_WIRE : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_1 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_2 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_3 : UInt<16>[4] @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[SourceDestination.scala 17:72]
    wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[SourceDestination.scala 17:39]
    _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[SourceDestination.scala 17:39]
    reg counterRegs1 : UInt<16>[4][4], clock with :
      reset => (reset, _counterRegs1_WIRE_4) @[SourceDestination.scala 17:31]
    wire _counterRegs2_WIRE : UInt<16>[4] @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[0] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[1] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[2] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    _counterRegs2_WIRE[3] <= UInt<16>("h0") @[SourceDestination.scala 18:39]
    reg counterRegs2 : UInt<16>[4], clock with :
      reset => (reset, _counterRegs2_WIRE) @[SourceDestination.scala 18:31]
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 20:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 21:20]
    reg valid1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SourceDestination.scala 24:25]
    reg jValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), jValid) @[SourceDestination.scala 25:21]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SourceDestination.scala 26:20]
    reg counter1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 28:27]
    reg counter2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h1")) @[SourceDestination.scala 29:27]
    node _reg_i_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 31:29]
    node _reg_i_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 31:63]
    node _reg_i_T_2 = and(_reg_i_T, _reg_i_T_1) @[SourceDestination.scala 31:57]
    reg reg_i : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[SourceDestination.scala 31:24]
    reg_i <= _reg_i_T_2 @[SourceDestination.scala 31:24]
    when io.start : @[SourceDestination.scala 34:17]
      matricesAreEqual <= UInt<1>("h1") @[SourceDestination.scala 36:22]
      node _T = neq(io.Stationary_matrix[0][0], prevStationary_matrix[0][0]) @[SourceDestination.scala 40:41]
      when _T : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_1 = neq(io.Stationary_matrix[0][1], prevStationary_matrix[0][1]) @[SourceDestination.scala 40:41]
      when _T_1 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_2 = neq(io.Stationary_matrix[0][2], prevStationary_matrix[0][2]) @[SourceDestination.scala 40:41]
      when _T_2 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_3 = neq(io.Stationary_matrix[0][3], prevStationary_matrix[0][3]) @[SourceDestination.scala 40:41]
      when _T_3 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_4 = neq(io.Stationary_matrix[1][0], prevStationary_matrix[1][0]) @[SourceDestination.scala 40:41]
      when _T_4 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_5 = neq(io.Stationary_matrix[1][1], prevStationary_matrix[1][1]) @[SourceDestination.scala 40:41]
      when _T_5 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_6 = neq(io.Stationary_matrix[1][2], prevStationary_matrix[1][2]) @[SourceDestination.scala 40:41]
      when _T_6 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_7 = neq(io.Stationary_matrix[1][3], prevStationary_matrix[1][3]) @[SourceDestination.scala 40:41]
      when _T_7 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_8 = neq(io.Stationary_matrix[2][0], prevStationary_matrix[2][0]) @[SourceDestination.scala 40:41]
      when _T_8 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_9 = neq(io.Stationary_matrix[2][1], prevStationary_matrix[2][1]) @[SourceDestination.scala 40:41]
      when _T_9 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_10 = neq(io.Stationary_matrix[2][2], prevStationary_matrix[2][2]) @[SourceDestination.scala 40:41]
      when _T_10 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_11 = neq(io.Stationary_matrix[2][3], prevStationary_matrix[2][3]) @[SourceDestination.scala 40:41]
      when _T_11 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_12 = neq(io.Stationary_matrix[3][0], prevStationary_matrix[3][0]) @[SourceDestination.scala 40:41]
      when _T_12 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_13 = neq(io.Stationary_matrix[3][1], prevStationary_matrix[3][1]) @[SourceDestination.scala 40:41]
      when _T_13 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_14 = neq(io.Stationary_matrix[3][2], prevStationary_matrix[3][2]) @[SourceDestination.scala 40:41]
      when _T_14 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      node _T_15 = neq(io.Stationary_matrix[3][3], prevStationary_matrix[3][3]) @[SourceDestination.scala 40:41]
      when _T_15 : @[SourceDestination.scala 40:74]
        matricesAreEqual <= UInt<1>("h0") @[SourceDestination.scala 41:28]
      jValid <= UInt<1>("h0") @[SourceDestination.scala 49:12]
      node _T_16 = bits(i, 1, 0)
      node _T_17 = bits(j, 1, 0)
      node _T_18 = neq(io.Stationary_matrix[_T_16][_T_17], UInt<1>("h0")) @[SourceDestination.scala 53:38]
      when _T_18 : @[SourceDestination.scala 53:47]
        node _T_19 = lt(counter1, UInt<3>("h5")) @[SourceDestination.scala 54:22]
        when _T_19 : @[SourceDestination.scala 54:48]
          node _T_20 = bits(i, 1, 0)
          node _T_21 = bits(j, 1, 0)
          counterRegs1[_T_20][_T_21] <= counter1 @[SourceDestination.scala 55:28]
          node _T_22 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 56:20]
          node _T_23 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 56:54]
          node _T_24 = and(_T_22, _T_23) @[SourceDestination.scala 56:48]
          node _T_25 = not(_T_24) @[SourceDestination.scala 56:15]
          when _T_25 : @[SourceDestination.scala 56:83]
            node _counter1_T = add(counter1, UInt<1>("h1")) @[SourceDestination.scala 57:32]
            node _counter1_T_1 = tail(_counter1_T, 1) @[SourceDestination.scala 57:32]
            counter1 <= _counter1_T_1 @[SourceDestination.scala 57:20]
        else :
          node _T_26 = bits(i, 1, 0)
          node _T_27 = bits(j, 1, 0)
          counterRegs1[_T_26][_T_27] <= UInt<1>("h1") @[SourceDestination.scala 60:28]
          counter1 <= UInt<2>("h2") @[SourceDestination.scala 61:18]
      else :
        node _T_28 = bits(i, 1, 0)
        node _T_29 = bits(j, 1, 0)
        counterRegs1[_T_28][_T_29] <= UInt<1>("h0") @[SourceDestination.scala 64:26]
      node _T_30 = bits(k, 1, 0)
      node _T_31 = neq(io.Streaming_matrix[_T_30], UInt<1>("h0")) @[SourceDestination.scala 67:34]
      when _T_31 : @[SourceDestination.scala 67:43]
        node _T_32 = bits(k, 1, 0)
        counterRegs2[_T_32] <= counter2 @[SourceDestination.scala 68:23]
        node _counter2_T = add(counter2, UInt<1>("h1")) @[SourceDestination.scala 69:28]
        node _counter2_T_1 = tail(_counter2_T, 1) @[SourceDestination.scala 69:28]
        counter2 <= _counter2_T_1 @[SourceDestination.scala 69:16]
      node _valid1_T = eq(j, UInt<2>("h3")) @[SourceDestination.scala 71:23]
      node _valid1_T_1 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 71:57]
      node _valid1_T_2 = and(_valid1_T, _valid1_T_1) @[SourceDestination.scala 71:51]
      node _valid1_T_3 = eq(_valid1_T_2, reg_i) @[SourceDestination.scala 71:86]
      node _valid1_T_4 = mux(_valid1_T_3, UInt<1>("h1"), UInt<1>("h0")) @[SourceDestination.scala 71:18]
      valid1 <= _valid1_T_4 @[SourceDestination.scala 71:12]
      node _T_33 = eq(k, UInt<2>("h3")) @[SourceDestination.scala 73:12]
      when _T_33 : @[SourceDestination.scala 73:37]
        k <= k @[SourceDestination.scala 74:9]
        counter2 <= counter2 @[SourceDestination.scala 75:16]
      else :
        node _T_34 = geq(k, UInt<1>("h0")) @[SourceDestination.scala 76:19]
        when _T_34 : @[SourceDestination.scala 76:26]
          node _k_T = add(k, UInt<1>("h1")) @[SourceDestination.scala 77:16]
          node _k_T_1 = tail(_k_T, 1) @[SourceDestination.scala 77:16]
          k <= _k_T_1 @[SourceDestination.scala 77:11]
      node _T_35 = eq(jValid, UInt<1>("h0")) @[SourceDestination.scala 79:18]
      when _T_35 : @[SourceDestination.scala 79:26]
        node _T_36 = lt(j, UInt<2>("h3")) @[SourceDestination.scala 80:14]
        when _T_36 : @[SourceDestination.scala 80:40]
          node _j_T = add(j, UInt<1>("h1")) @[SourceDestination.scala 81:16]
          node _j_T_1 = tail(_j_T, 1) @[SourceDestination.scala 81:16]
          j <= _j_T_1 @[SourceDestination.scala 81:11]
        else :
          node _T_37 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 82:21]
          node _T_38 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 82:55]
          node _T_39 = and(_T_37, _T_38) @[SourceDestination.scala 82:49]
          when _T_39 : @[SourceDestination.scala 82:83]
            jValid <= UInt<1>("h1") @[SourceDestination.scala 83:16]
          else :
            j <= UInt<1>("h0") @[SourceDestination.scala 85:11]
            node _T_40 = lt(i, UInt<2>("h3")) @[SourceDestination.scala 86:16]
            when _T_40 : @[SourceDestination.scala 86:42]
              node _i_T = add(i, UInt<1>("h1")) @[SourceDestination.scala 87:18]
              node _i_T_1 = tail(_i_T, 1) @[SourceDestination.scala 87:18]
              i <= _i_T_1 @[SourceDestination.scala 87:13]
      else :
        node _T_41 = eq(jValid, UInt<1>("h1")) @[SourceDestination.scala 90:25]
        node _T_42 = eq(matricesAreEqual, UInt<1>("h0")) @[SourceDestination.scala 90:55]
        node _T_43 = and(_T_41, _T_42) @[SourceDestination.scala 90:34]
        when _T_43 : @[SourceDestination.scala 90:64]
          i <= UInt<1>("h0") @[SourceDestination.scala 91:9]
          j <= UInt<1>("h0") @[SourceDestination.scala 92:9]
          k <= UInt<1>("h0") @[SourceDestination.scala 93:9]
          counter1 <= UInt<1>("h1") @[SourceDestination.scala 94:16]
          counter2 <= UInt<1>("h1") @[SourceDestination.scala 95:16]
          counterRegs1[0][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[0][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[0] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[1][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[1][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[1] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[2][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[2][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[2] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
          counterRegs1[3][0] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][1] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][2] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs1[3][3] <= UInt<1>("h0") @[SourceDestination.scala 98:30]
          counterRegs2[3] <= UInt<1>("h0") @[SourceDestination.scala 100:25]
      node _io_valid_T = eq(i, UInt<2>("h3")) @[SourceDestination.scala 104:19]
      node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 104:34]
      node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[SourceDestination.scala 104:28]
      io.valid <= _io_valid_T_2 @[SourceDestination.scala 104:14]
      node _T_44 = eq(j, UInt<2>("h3")) @[SourceDestination.scala 106:14]
      node _T_45 = eq(i, UInt<2>("h3")) @[SourceDestination.scala 106:48]
      node _T_46 = and(_T_44, _T_45) @[SourceDestination.scala 106:42]
      when _T_46 : @[SourceDestination.scala 106:76]
        io.counterMatrix1.valid <= UInt<1>("h1") @[SourceDestination.scala 107:31]
        io.counterMatrix2.valid <= UInt<1>("h1") @[SourceDestination.scala 108:31]
      else :
        io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 110:31]
        io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 111:31]
      io.counterMatrix1.bits <= counterRegs1 @[SourceDestination.scala 114:28]
      io.counterMatrix2.bits <= counterRegs2 @[SourceDestination.scala 115:28]
    else :
      wire _WIRE : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_1 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_1[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_1[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_2 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_2[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_2[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_3 : UInt<32>[4] @[SourceDestination.scala 118:69]
      _WIRE_3[0] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[1] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[2] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      _WIRE_3[3] <= UInt<32>("h0") @[SourceDestination.scala 118:69]
      wire _WIRE_4 : UInt<32>[4][4] @[SourceDestination.scala 118:36]
      _WIRE_4[0] <= _WIRE @[SourceDestination.scala 118:36]
      _WIRE_4[1] <= _WIRE_1 @[SourceDestination.scala 118:36]
      _WIRE_4[2] <= _WIRE_2 @[SourceDestination.scala 118:36]
      _WIRE_4[3] <= _WIRE_3 @[SourceDestination.scala 118:36]
      io.counterMatrix1.bits <= _WIRE_4 @[SourceDestination.scala 118:26]
      wire _WIRE_5 : UInt<32>[4] @[SourceDestination.scala 119:36]
      _WIRE_5[0] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[1] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[2] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      _WIRE_5[3] <= UInt<32>("h0") @[SourceDestination.scala 119:36]
      io.counterMatrix2.bits <= _WIRE_5 @[SourceDestination.scala 119:26]
      io.counterMatrix1.valid <= UInt<1>("h0") @[SourceDestination.scala 120:27]
      io.counterMatrix2.valid <= UInt<1>("h0") @[SourceDestination.scala 121:27]
      io.valid <= UInt<1>("h0") @[SourceDestination.scala 122:12]

  module abc2_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip IDex : UInt<32>, flip JDex : UInt<32>, flip valid : UInt<1>, flip mat : UInt<32>[4][4], OutMat : UInt<32>[4][4], Ovalid : UInt<1>, ProcessValid : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_1 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_2 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_3 : UInt<32>[4] @[singleLoop.scala 19:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[singleLoop.scala 19:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[singleLoop.scala 19:28]
    _b_WIRE_4[0] <= _b_WIRE @[singleLoop.scala 19:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[singleLoop.scala 19:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[singleLoop.scala 19:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[singleLoop.scala 19:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[singleLoop.scala 19:20]
    io.OutMat <= b @[singleLoop.scala 20:15]
    reg j : UInt<32>, clock with :
      reset => (UInt<1>("h0"), j) @[singleLoop.scala 21:16]
    j <= io.JDex @[singleLoop.scala 22:7]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[singleLoop.scala 23:20]
    node _T = neq(a, UInt<1>("h0")) @[singleLoop.scala 24:25]
    node _T_1 = and(io.valid, _T) @[singleLoop.scala 24:19]
    when _T_1 : @[singleLoop.scala 24:34]
      node _T_2 = bits(io.IDex, 1, 0)
      node _T_3 = bits(j, 1, 0)
      node _b_T = bits(io.IDex, 1, 0)
      node _b_T_1 = bits(j, 1, 0)
      b[_T_2][_T_3] <= io.mat[_b_T][_b_T_1] @[singleLoop.scala 25:19]
    node _T_4 = eq(j, UInt<2>("h3")) @[singleLoop.scala 26:13]
    when _T_4 : @[singleLoop.scala 26:21]
      node _io_Ovalid_T = bits(io.IDex, 1, 0)
      node _io_Ovalid_T_1 = eq(io.mat[_io_Ovalid_T][3], UInt<3>("h4")) @[singleLoop.scala 27:45]
      reg io_Ovalid_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), io_Ovalid_REG) @[singleLoop.scala 27:25]
      io_Ovalid_REG <= _io_Ovalid_T_1 @[singleLoop.scala 27:25]
      io.Ovalid <= io_Ovalid_REG @[singleLoop.scala 27:15]
    else :
      io.Ovalid <= UInt<1>("h0") @[singleLoop.scala 29:19]
    node _io_ProcessValid_T = eq(j, UInt<2>("h3")) @[singleLoop.scala 31:35]
    wire _io_ProcessValid_WIRE : UInt<1>
    _io_ProcessValid_WIRE <= _io_ProcessValid_T
    io.ProcessValid <= _io_ProcessValid_WIRE @[singleLoop.scala 31:21]
    when io.valid : @[singleLoop.scala 45:20]
      node _a_T = add(a, UInt<1>("h1")) @[singleLoop.scala 46:12]
      node _a_T_1 = tail(_a_T, 1) @[singleLoop.scala 46:12]
      a <= _a_T_1 @[singleLoop.scala 46:7]
    node _T_5 = neq(a, UInt<1>("h0")) @[singleLoop.scala 48:26]
    node _T_6 = and(io.valid, _T_5) @[singleLoop.scala 48:20]
    node _T_7 = lt(j, UInt<2>("h3")) @[singleLoop.scala 48:41]
    node _T_8 = and(_T_6, _T_7) @[singleLoop.scala 48:35]
    when _T_8 : @[singleLoop.scala 48:65]
      node _j_T = add(j, UInt<1>("h1")) @[singleLoop.scala 49:16]
      node _j_T_1 = tail(_j_T, 1) @[singleLoop.scala 49:16]
      j <= _j_T_1 @[singleLoop.scala 49:11]
    else :
      node _T_9 = eq(j, UInt<2>("h3")) @[singleLoop.scala 50:18]
      when _T_9 : @[singleLoop.scala 50:43]
        j <= j @[singleLoop.scala 51:11]

  module abc3_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip PreMat : UInt<32>[4][4], flip IDex : UInt<32>, flip JDex : UInt<32>, flip mat : UInt<32>[4][4], flip i_valid : UInt<1>, valid : UInt<1>, Omat : UInt<32>[4][4], flip merge : UInt<1>}

    wire _b_WIRE : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_1 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_1[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_2 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_2[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_3 : UInt<32>[4] @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[0] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[1] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[2] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    _b_WIRE_3[3] <= UInt<32>("h0") @[MergeDIstribution.scala 18:61]
    wire _b_WIRE_4 : UInt<32>[4][4] @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[0] <= _b_WIRE @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[1] <= _b_WIRE_1 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[2] <= _b_WIRE_2 @[MergeDIstribution.scala 18:28]
    _b_WIRE_4[3] <= _b_WIRE_3 @[MergeDIstribution.scala 18:28]
    reg b : UInt<32>[4][4], clock with :
      reset => (reset, _b_WIRE_4) @[MergeDIstribution.scala 18:20]
    io.Omat <= b @[MergeDIstribution.scala 19:13]
    reg check : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 20:24]
    wire counter : UInt<1>
    counter <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 22:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 23:20]
    node _io_valid_T = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 24:20]
    node _io_valid_T_1 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 24:35]
    node _io_valid_T_2 = and(_io_valid_T, _io_valid_T_1) @[MergeDIstribution.scala 24:29]
    io.valid <= _io_valid_T_2 @[MergeDIstribution.scala 24:14]
    reg a : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 25:20]
    reg k : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 26:20]
    reg l : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 27:20]
    reg delay : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MergeDIstribution.scala 29:24]
    node _T = leq(delay, UInt<2>("h3")) @[MergeDIstribution.scala 31:17]
    node _T_1 = and(_T, io.merge) @[MergeDIstribution.scala 31:41]
    when _T_1 : @[MergeDIstribution.scala 31:53]
      node _delay_T = add(delay, UInt<1>("h1")) @[MergeDIstribution.scala 32:24]
      node _delay_T_1 = tail(_delay_T, 1) @[MergeDIstribution.scala 32:24]
      delay <= _delay_T_1 @[MergeDIstribution.scala 32:15]
    node _T_2 = eq(delay, UInt<3>("h4")) @[MergeDIstribution.scala 41:29]
    node _T_3 = and(io.merge, _T_2) @[MergeDIstribution.scala 41:19]
    when _T_3 : @[MergeDIstribution.scala 41:53]
      node _T_4 = lt(k, io.IDex) @[MergeDIstribution.scala 43:14]
      node _T_5 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 43:30]
      node _T_6 = and(_T_4, _T_5) @[MergeDIstribution.scala 43:24]
      when _T_6 : @[MergeDIstribution.scala 43:56]
        node _k_T = add(k, UInt<1>("h1")) @[MergeDIstribution.scala 44:16]
        node _k_T_1 = tail(_k_T, 1) @[MergeDIstribution.scala 44:16]
        k <= _k_T_1 @[MergeDIstribution.scala 44:11]
        l <= UInt<1>("h0") @[MergeDIstribution.scala 45:11]
      else :
        node _T_7 = leq(k, io.IDex) @[MergeDIstribution.scala 46:20]
        node _T_8 = lt(l, UInt<2>("h3")) @[MergeDIstribution.scala 46:37]
        node _T_9 = and(_T_7, _T_8) @[MergeDIstribution.scala 46:31]
        when _T_9 : @[MergeDIstribution.scala 46:61]
          node _l_T = add(l, UInt<1>("h1")) @[MergeDIstribution.scala 47:16]
          node _l_T_1 = tail(_l_T, 1) @[MergeDIstribution.scala 47:16]
          l <= _l_T_1 @[MergeDIstribution.scala 47:11]
        else :
          node _T_10 = eq(k, io.IDex) @[MergeDIstribution.scala 48:18]
          node _T_11 = eq(l, UInt<2>("h3")) @[MergeDIstribution.scala 48:36]
          node _T_12 = and(_T_10, _T_11) @[MergeDIstribution.scala 48:30]
          when _T_12 : @[MergeDIstribution.scala 48:62]
            l <= l @[MergeDIstribution.scala 49:11]
      node _T_13 = bits(k, 1, 0)
      node _T_14 = bits(l, 1, 0)
      node _b_T = bits(k, 1, 0)
      node _b_T_1 = bits(l, 1, 0)
      b[_T_13][_T_14] <= io.PreMat[_b_T][_b_T_1] @[MergeDIstribution.scala 52:13]
    node _T_15 = eq(i, UInt<1>("h0")) @[MergeDIstribution.scala 54:28]
    node _T_16 = and(io.i_valid, _T_15) @[MergeDIstribution.scala 54:22]
    node _T_17 = eq(j, UInt<1>("h0")) @[MergeDIstribution.scala 54:44]
    node _T_18 = and(_T_16, _T_17) @[MergeDIstribution.scala 54:37]
    when _T_18 : @[MergeDIstribution.scala 54:53]
      node _i_T = add(io.IDex, UInt<1>("h1")) @[MergeDIstribution.scala 55:22]
      node _i_T_1 = tail(_i_T, 1) @[MergeDIstribution.scala 55:22]
      i <= _i_T_1 @[MergeDIstribution.scala 55:11]
      j <= UInt<1>("h0") @[MergeDIstribution.scala 56:11]
      node _check_T = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 57:24]
      node _check_T_1 = tail(_check_T, 1) @[MergeDIstribution.scala 57:24]
      check <= _check_T_1 @[MergeDIstribution.scala 57:15]
    node _T_19 = geq(check, UInt<1>("h1")) @[MergeDIstribution.scala 60:17]
    when _T_19 : @[MergeDIstribution.scala 60:24]
      counter <= UInt<1>("h1") @[MergeDIstribution.scala 61:17]
      node _check_T_2 = add(check, UInt<1>("h1")) @[MergeDIstribution.scala 62:24]
      node _check_T_3 = tail(_check_T_2, 1) @[MergeDIstribution.scala 62:24]
      check <= _check_T_3 @[MergeDIstribution.scala 62:15]
    when io.merge : @[MergeDIstribution.scala 67:19]
      node _T_20 = bits(i, 1, 0)
      node _T_21 = bits(j, 1, 0)
      node _b_T_2 = bits(i, 1, 0)
      node _b_T_3 = bits(j, 1, 0)
      b[_T_20][_T_21] <= io.mat[_b_T_2][_b_T_3] @[MergeDIstribution.scala 68:13]
    when counter : @[MergeDIstribution.scala 97:14]
      node _T_22 = bits(i, 1, 0)
      node _T_23 = bits(j, 1, 0)
      node _T_24 = eq(io.mat[_T_22][_T_23], UInt<3>("h4")) @[MergeDIstribution.scala 100:23]
      when _T_24 : @[MergeDIstribution.scala 100:44]
        i <= i @[MergeDIstribution.scala 101:11]
        j <= j @[MergeDIstribution.scala 102:11]
        io.valid <= UInt<1>("h1") @[MergeDIstribution.scala 103:18]
      else :
        node _T_25 = lt(i, UInt<2>("h3")) @[MergeDIstribution.scala 104:20]
        node _T_26 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 104:49]
        node _T_27 = and(_T_25, _T_26) @[MergeDIstribution.scala 104:43]
        when _T_27 : @[MergeDIstribution.scala 104:75]
          node _i_T_2 = add(i, UInt<1>("h1")) @[MergeDIstribution.scala 105:16]
          node _i_T_3 = tail(_i_T_2, 1) @[MergeDIstribution.scala 105:16]
          i <= _i_T_3 @[MergeDIstribution.scala 105:11]
          j <= UInt<1>("h0") @[MergeDIstribution.scala 106:11]
        else :
          node _T_28 = leq(i, UInt<2>("h3")) @[MergeDIstribution.scala 107:20]
          node _T_29 = lt(j, UInt<2>("h3")) @[MergeDIstribution.scala 107:50]
          node _T_30 = and(_T_28, _T_29) @[MergeDIstribution.scala 107:44]
          when _T_30 : @[MergeDIstribution.scala 107:74]
            node _j_T = add(j, UInt<1>("h1")) @[MergeDIstribution.scala 108:16]
            node _j_T_1 = tail(_j_T, 1) @[MergeDIstribution.scala 108:16]
            j <= _j_T_1 @[MergeDIstribution.scala 108:11]
          else :
            node _T_31 = eq(i, UInt<2>("h3")) @[MergeDIstribution.scala 109:18]
            node _T_32 = eq(j, UInt<2>("h3")) @[MergeDIstribution.scala 109:49]
            node _T_33 = and(_T_31, _T_32) @[MergeDIstribution.scala 109:43]
            when _T_33 : @[MergeDIstribution.scala 109:75]
              j <= j @[MergeDIstribution.scala 110:11]

  module Distribution_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip matrix : UInt<32>[4][4], flip s : UInt<32>, out : UInt<32>[4][4], ProcessValid : UInt<1>, flip valid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 19:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 20:20]
    reg count : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 21:24]
    wire _Idex_WIRE : UInt<32>[4] @[DIstribution.scala 22:31]
    _Idex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    _Idex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 22:31]
    reg Idex : UInt<32>[4], clock with :
      reset => (reset, _Idex_WIRE) @[DIstribution.scala 22:23]
    wire _Jdex_WIRE : UInt<32>[4] @[DIstribution.scala 23:31]
    _Jdex_WIRE[0] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[1] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[2] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    _Jdex_WIRE[3] <= UInt<32>("h0") @[DIstribution.scala 23:31]
    reg Jdex : UInt<32>[4], clock with :
      reset => (reset, _Jdex_WIRE) @[DIstribution.scala 23:23]
    wire _mat_WIRE : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_1 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_2 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_3 : UInt<1>[4] @[DIstribution.scala 24:63]
    _mat_WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    _mat_WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 24:63]
    wire _mat_WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 24:30]
    _mat_WIRE_4[0] <= _mat_WIRE @[DIstribution.scala 24:30]
    _mat_WIRE_4[1] <= _mat_WIRE_1 @[DIstribution.scala 24:30]
    _mat_WIRE_4[2] <= _mat_WIRE_2 @[DIstribution.scala 24:30]
    _mat_WIRE_4[3] <= _mat_WIRE_3 @[DIstribution.scala 24:30]
    reg mat : UInt<1>[4][4], clock with :
      reset => (reset, _mat_WIRE_4) @[DIstribution.scala 24:22]
    reg iterationNo : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[DIstribution.scala 25:30]
    when io.valid : @[DIstribution.scala 27:21]
      node _io_validIteration_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 30:29]
      node _io_validIteration_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 30:62]
      node _io_validIteration_T_2 = and(_io_validIteration_T, _io_validIteration_T_1) @[DIstribution.scala 30:56]
      io.validIteration <= _io_validIteration_T_2 @[DIstribution.scala 30:23]
      io.iteration <= iterationNo @[DIstribution.scala 31:18]
      node _T = bits(i, 1, 0)
      node _T_1 = bits(j, 1, 0)
      node _T_2 = eq(io.matrix[_T][_T_1], UInt<1>("h1")) @[DIstribution.scala 34:27]
      when _T_2 : @[DIstribution.scala 34:35]
        node _iterationNo_T = add(iterationNo, UInt<1>("h1")) @[DIstribution.scala 35:34]
        node _iterationNo_T_1 = tail(_iterationNo_T, 1) @[DIstribution.scala 35:34]
        iterationNo <= _iterationNo_T_1 @[DIstribution.scala 35:19]
      mat <= io.matrix @[DIstribution.scala 38:9]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = eq(io.matrix[_T_3][_T_4], UInt<1>("h1")) @[DIstribution.scala 47:28]
      when _T_5 : @[DIstribution.scala 47:38]
        node _count_T = add(count, UInt<1>("h1")) @[DIstribution.scala 48:24]
        node _count_T_1 = tail(_count_T, 1) @[DIstribution.scala 48:24]
        count <= _count_T_1 @[DIstribution.scala 48:15]
        node _T_6 = bits(count, 1, 0)
        Idex[_T_6] <= i @[DIstribution.scala 49:21]
        node _T_7 = bits(count, 1, 0)
        Jdex[_T_7] <= j @[DIstribution.scala 50:21]
      else :
        node _T_8 = bits(i, 1, 0)
        node _T_9 = bits(j, 1, 0)
        node _T_10 = eq(io.matrix[_T_8][_T_9], UInt<1>("h1")) @[DIstribution.scala 51:33]
        node _T_11 = eq(i, UInt<2>("h3")) @[DIstribution.scala 51:48]
        node _T_12 = and(_T_10, _T_11) @[DIstribution.scala 51:42]
        node _T_13 = eq(j, UInt<2>("h3")) @[DIstribution.scala 51:80]
        node _T_14 = and(_T_12, _T_13) @[DIstribution.scala 51:74]
        when _T_14 : @[DIstribution.scala 51:106]
          node _T_15 = bits(count, 1, 0)
          Idex[_T_15] <= i @[DIstribution.scala 52:21]
          node _T_16 = bits(count, 1, 0)
          Jdex[_T_16] <= j @[DIstribution.scala 53:21]
      inst part2 of abc2_15 @[DIstribution.scala 55:19]
      part2.clock <= clock
      part2.reset <= reset
      part2.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 56:14]
      part2.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 56:14]
      part2.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 56:14]
      part2.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 56:14]
      part2.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 56:14]
      part2.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 56:14]
      part2.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 56:14]
      part2.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 56:14]
      part2.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 56:14]
      part2.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 56:14]
      part2.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 56:14]
      part2.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 56:14]
      part2.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 56:14]
      part2.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 56:14]
      part2.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 56:14]
      part2.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 56:14]
      node _c_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 57:23]
      node _c_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 57:54]
      node _c_T_2 = and(_c_T, _c_T_1) @[DIstribution.scala 57:48]
      reg c : UInt<1>, clock with :
        reset => (UInt<1>("h0"), c) @[DIstribution.scala 57:20]
      c <= _c_T_2 @[DIstribution.scala 57:20]
      part2.io.valid <= c @[DIstribution.scala 58:20]
      when c : @[DIstribution.scala 59:13]
        node _part2_io_IDex_T = bits(io.s, 1, 0)
        part2.io.IDex <= Idex[_part2_io_IDex_T] @[DIstribution.scala 60:19]
        node _part2_io_JDex_T = bits(io.s, 1, 0)
        part2.io.JDex <= Jdex[_part2_io_JDex_T] @[DIstribution.scala 61:19]
      else :
        part2.io.IDex <= UInt<1>("h0") @[DIstribution.scala 63:19]
        part2.io.JDex <= UInt<1>("h0") @[DIstribution.scala 64:19]
      inst part3 of abc3_15 @[DIstribution.scala 69:23]
      part3.clock <= clock
      part3.reset <= reset
      wire check : UInt<1>
      check <= UInt<1>("h0")
      when part2.io.Ovalid : @[DIstribution.scala 75:26]
        check <= UInt<1>("h0") @[DIstribution.scala 76:15]
      else :
        check <= UInt<1>("h1") @[DIstribution.scala 78:15]
      node _e_T = eq(i, UInt<2>("h3")) @[DIstribution.scala 80:17]
      node _e_T_1 = eq(j, UInt<2>("h3")) @[DIstribution.scala 80:49]
      node _e_T_2 = and(_e_T, _e_T_1) @[DIstribution.scala 80:43]
      node _e_T_3 = sub(count, UInt<1>("h1")) @[DIstribution.scala 80:85]
      node _e_T_4 = tail(_e_T_3, 1) @[DIstribution.scala 80:85]
      node _e_T_5 = lt(_e_T_4, io.s) @[DIstribution.scala 80:91]
      node e = and(_e_T_2, _e_T_5) @[DIstribution.scala 80:75]
      node _T_17 = and(part2.io.ProcessValid, check) @[DIstribution.scala 82:33]
      when _T_17 : @[DIstribution.scala 82:42]
        reg part3_io_merge_REG : UInt<1>, clock with :
          reset => (UInt<1>("h0"), part3_io_merge_REG) @[DIstribution.scala 83:30]
        part3_io_merge_REG <= c @[DIstribution.scala 83:30]
        part3.io.merge <= part3_io_merge_REG @[DIstribution.scala 83:20]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 84:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 84:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 84:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 84:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 84:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 84:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 84:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 84:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 84:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 84:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 84:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 84:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 84:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 84:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 84:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 84:18]
        part3.io.i_valid <= part2.io.ProcessValid @[DIstribution.scala 85:22]
        part3.io.PreMat[0][0] <= part2.io.OutMat[0][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][1] <= part2.io.OutMat[0][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][2] <= part2.io.OutMat[0][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[0][3] <= part2.io.OutMat[0][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][0] <= part2.io.OutMat[1][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][1] <= part2.io.OutMat[1][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][2] <= part2.io.OutMat[1][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[1][3] <= part2.io.OutMat[1][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][0] <= part2.io.OutMat[2][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][1] <= part2.io.OutMat[2][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][2] <= part2.io.OutMat[2][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[2][3] <= part2.io.OutMat[2][3] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][0] <= part2.io.OutMat[3][0] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][1] <= part2.io.OutMat[3][1] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][2] <= part2.io.OutMat[3][2] @[DIstribution.scala 86:21]
        part3.io.PreMat[3][3] <= part2.io.OutMat[3][3] @[DIstribution.scala 86:21]
        part3.io.mat[0][0] <= io.matrix[0][0] @[DIstribution.scala 87:18]
        part3.io.mat[0][1] <= io.matrix[0][1] @[DIstribution.scala 87:18]
        part3.io.mat[0][2] <= io.matrix[0][2] @[DIstribution.scala 87:18]
        part3.io.mat[0][3] <= io.matrix[0][3] @[DIstribution.scala 87:18]
        part3.io.mat[1][0] <= io.matrix[1][0] @[DIstribution.scala 87:18]
        part3.io.mat[1][1] <= io.matrix[1][1] @[DIstribution.scala 87:18]
        part3.io.mat[1][2] <= io.matrix[1][2] @[DIstribution.scala 87:18]
        part3.io.mat[1][3] <= io.matrix[1][3] @[DIstribution.scala 87:18]
        part3.io.mat[2][0] <= io.matrix[2][0] @[DIstribution.scala 87:18]
        part3.io.mat[2][1] <= io.matrix[2][1] @[DIstribution.scala 87:18]
        part3.io.mat[2][2] <= io.matrix[2][2] @[DIstribution.scala 87:18]
        part3.io.mat[2][3] <= io.matrix[2][3] @[DIstribution.scala 87:18]
        part3.io.mat[3][0] <= io.matrix[3][0] @[DIstribution.scala 87:18]
        part3.io.mat[3][1] <= io.matrix[3][1] @[DIstribution.scala 87:18]
        part3.io.mat[3][2] <= io.matrix[3][2] @[DIstribution.scala 87:18]
        part3.io.mat[3][3] <= io.matrix[3][3] @[DIstribution.scala 87:18]
        node _part3_io_IDex_T = bits(io.s, 1, 0)
        part3.io.IDex <= Idex[_part3_io_IDex_T] @[DIstribution.scala 88:19]
        node _part3_io_JDex_T = bits(io.s, 1, 0)
        part3.io.JDex <= Jdex[_part3_io_JDex_T] @[DIstribution.scala 89:19]
        node _T_18 = eq(i, UInt<2>("h3")) @[DIstribution.scala 90:14]
        node _T_19 = eq(j, UInt<2>("h3")) @[DIstribution.scala 90:46]
        node _T_20 = and(_T_18, _T_19) @[DIstribution.scala 90:40]
        node _T_21 = sub(count, UInt<1>("h1")) @[DIstribution.scala 90:82]
        node _T_22 = tail(_T_21, 1) @[DIstribution.scala 90:82]
        node _T_23 = lt(_T_22, io.s) @[DIstribution.scala 90:88]
        node _T_24 = and(_T_20, _T_23) @[DIstribution.scala 90:72]
        when _T_24 : @[DIstribution.scala 90:96]
          wire _WIRE : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_1 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_1[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_1[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_2 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_2[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_2[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_3 : UInt<1>[4] @[DIstribution.scala 91:68]
          _WIRE_3[0] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[1] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[2] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          _WIRE_3[3] <= UInt<1>("h0") @[DIstribution.scala 91:68]
          wire _WIRE_4 : UInt<1>[4][4] @[DIstribution.scala 91:35]
          _WIRE_4[0] <= _WIRE @[DIstribution.scala 91:35]
          _WIRE_4[1] <= _WIRE_1 @[DIstribution.scala 91:35]
          _WIRE_4[2] <= _WIRE_2 @[DIstribution.scala 91:35]
          _WIRE_4[3] <= _WIRE_3 @[DIstribution.scala 91:35]
          wire _WIRE_5 : UInt<1>[4][4]
          _WIRE_5 <= _WIRE_4
          io.out <= _WIRE_5 @[DIstribution.scala 91:16]
        else :
          io.out <= part3.io.Omat @[DIstribution.scala 93:12]
        io.ProcessValid <= part3.io.valid @[DIstribution.scala 94:21]
      else :
        part3.io.merge <= UInt<1>("h0") @[DIstribution.scala 96:24]
        wire _WIRE_6 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_6[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_6[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_7 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_7[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_7[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_8 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_8[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_8[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_9 : UInt<32>[4] @[DIstribution.scala 97:66]
        _WIRE_9[0] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[1] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[2] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        _WIRE_9[3] <= UInt<32>("h0") @[DIstribution.scala 97:66]
        wire _WIRE_10 : UInt<32>[4][4] @[DIstribution.scala 97:31]
        _WIRE_10[0] <= _WIRE_6 @[DIstribution.scala 97:31]
        _WIRE_10[1] <= _WIRE_7 @[DIstribution.scala 97:31]
        _WIRE_10[2] <= _WIRE_8 @[DIstribution.scala 97:31]
        _WIRE_10[3] <= _WIRE_9 @[DIstribution.scala 97:31]
        part3.io.mat[0][0] <= _WIRE_10[0][0] @[DIstribution.scala 97:22]
        part3.io.mat[0][1] <= _WIRE_10[0][1] @[DIstribution.scala 97:22]
        part3.io.mat[0][2] <= _WIRE_10[0][2] @[DIstribution.scala 97:22]
        part3.io.mat[0][3] <= _WIRE_10[0][3] @[DIstribution.scala 97:22]
        part3.io.mat[1][0] <= _WIRE_10[1][0] @[DIstribution.scala 97:22]
        part3.io.mat[1][1] <= _WIRE_10[1][1] @[DIstribution.scala 97:22]
        part3.io.mat[1][2] <= _WIRE_10[1][2] @[DIstribution.scala 97:22]
        part3.io.mat[1][3] <= _WIRE_10[1][3] @[DIstribution.scala 97:22]
        part3.io.mat[2][0] <= _WIRE_10[2][0] @[DIstribution.scala 97:22]
        part3.io.mat[2][1] <= _WIRE_10[2][1] @[DIstribution.scala 97:22]
        part3.io.mat[2][2] <= _WIRE_10[2][2] @[DIstribution.scala 97:22]
        part3.io.mat[2][3] <= _WIRE_10[2][3] @[DIstribution.scala 97:22]
        part3.io.mat[3][0] <= _WIRE_10[3][0] @[DIstribution.scala 97:22]
        part3.io.mat[3][1] <= _WIRE_10[3][1] @[DIstribution.scala 97:22]
        part3.io.mat[3][2] <= _WIRE_10[3][2] @[DIstribution.scala 97:22]
        part3.io.mat[3][3] <= _WIRE_10[3][3] @[DIstribution.scala 97:22]
        part3.io.i_valid <= UInt<1>("h0") @[DIstribution.scala 98:26]
        wire _WIRE_11 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_11[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_11[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_12 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_12[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_12[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_13 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_13[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_13[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_14 : UInt<32>[4] @[DIstribution.scala 99:64]
        _WIRE_14[0] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[1] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[2] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        _WIRE_14[3] <= UInt<32>("h0") @[DIstribution.scala 99:64]
        wire _WIRE_15 : UInt<32>[4][4] @[DIstribution.scala 99:31]
        _WIRE_15[0] <= _WIRE_11 @[DIstribution.scala 99:31]
        _WIRE_15[1] <= _WIRE_12 @[DIstribution.scala 99:31]
        _WIRE_15[2] <= _WIRE_13 @[DIstribution.scala 99:31]
        _WIRE_15[3] <= _WIRE_14 @[DIstribution.scala 99:31]
        part3.io.PreMat[0][0] <= _WIRE_15[0][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][1] <= _WIRE_15[0][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][2] <= _WIRE_15[0][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[0][3] <= _WIRE_15[0][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][0] <= _WIRE_15[1][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][1] <= _WIRE_15[1][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][2] <= _WIRE_15[1][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[1][3] <= _WIRE_15[1][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][0] <= _WIRE_15[2][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][1] <= _WIRE_15[2][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][2] <= _WIRE_15[2][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[2][3] <= _WIRE_15[2][3] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][0] <= _WIRE_15[3][0] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][1] <= _WIRE_15[3][1] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][2] <= _WIRE_15[3][2] @[DIstribution.scala 99:21]
        part3.io.PreMat[3][3] <= _WIRE_15[3][3] @[DIstribution.scala 99:21]
        part3.io.IDex <= UInt<1>("h0") @[DIstribution.scala 100:19]
        part3.io.JDex <= UInt<1>("h0") @[DIstribution.scala 101:19]
        node _T_25 = eq(i, UInt<2>("h3")) @[DIstribution.scala 102:14]
        node _T_26 = eq(j, UInt<2>("h3")) @[DIstribution.scala 102:46]
        node _T_27 = and(_T_25, _T_26) @[DIstribution.scala 102:40]
        node _T_28 = sub(count, UInt<1>("h1")) @[DIstribution.scala 102:82]
        node _T_29 = tail(_T_28, 1) @[DIstribution.scala 102:82]
        node _T_30 = lt(_T_29, io.s) @[DIstribution.scala 102:88]
        node _T_31 = and(_T_27, _T_30) @[DIstribution.scala 102:72]
        when _T_31 : @[DIstribution.scala 102:96]
          wire _WIRE_16 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_16[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_16[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_17 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_17[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_17[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_18 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_18[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_18[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_19 : UInt<1>[4] @[DIstribution.scala 103:68]
          _WIRE_19[0] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[1] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[2] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          _WIRE_19[3] <= UInt<1>("h0") @[DIstribution.scala 103:68]
          wire _WIRE_20 : UInt<1>[4][4] @[DIstribution.scala 103:35]
          _WIRE_20[0] <= _WIRE_16 @[DIstribution.scala 103:35]
          _WIRE_20[1] <= _WIRE_17 @[DIstribution.scala 103:35]
          _WIRE_20[2] <= _WIRE_18 @[DIstribution.scala 103:35]
          _WIRE_20[3] <= _WIRE_19 @[DIstribution.scala 103:35]
          wire _WIRE_21 : UInt<1>[4][4]
          _WIRE_21 <= _WIRE_20
          io.out <= _WIRE_21 @[DIstribution.scala 103:16]
        else :
          io.out <= part2.io.OutMat @[DIstribution.scala 105:12]
        io.ProcessValid <= part2.io.Ovalid @[DIstribution.scala 106:21]
      node _T_32 = lt(i, UInt<2>("h3")) @[DIstribution.scala 113:14]
      node _T_33 = eq(j, UInt<2>("h3")) @[DIstribution.scala 113:43]
      node _T_34 = and(_T_32, _T_33) @[DIstribution.scala 113:37]
      when _T_34 : @[DIstribution.scala 113:69]
        node _i_T = add(i, UInt<1>("h1")) @[DIstribution.scala 114:16]
        node _i_T_1 = tail(_i_T, 1) @[DIstribution.scala 114:16]
        i <= _i_T_1 @[DIstribution.scala 114:11]
      node _T_35 = leq(i, UInt<2>("h3")) @[DIstribution.scala 117:14]
      node _T_36 = lt(j, UInt<2>("h3")) @[DIstribution.scala 117:44]
      node _T_37 = and(_T_35, _T_36) @[DIstribution.scala 117:38]
      when _T_37 : @[DIstribution.scala 117:68]
        node _j_T = add(j, UInt<1>("h1")) @[DIstribution.scala 118:16]
        node _j_T_1 = tail(_j_T, 1) @[DIstribution.scala 118:16]
        j <= _j_T_1 @[DIstribution.scala 118:11]
      else :
        node _T_38 = eq(i, UInt<2>("h3")) @[DIstribution.scala 119:18]
        node _T_39 = eq(j, UInt<2>("h3")) @[DIstribution.scala 119:49]
        node _T_40 = and(_T_38, _T_39) @[DIstribution.scala 119:43]
        when _T_40 : @[DIstribution.scala 119:75]
          j <= j @[DIstribution.scala 120:11]
        else :
          j <= UInt<1>("h0") @[DIstribution.scala 122:11]
    else :
      wire _WIRE_22 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_22[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_22[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_23 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_23[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_23[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_24 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_24[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_24[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_25 : UInt<1>[4] @[DIstribution.scala 129:68]
      _WIRE_25[0] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[1] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[2] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      _WIRE_25[3] <= UInt<1>("h0") @[DIstribution.scala 129:68]
      wire _WIRE_26 : UInt<1>[4][4] @[DIstribution.scala 129:35]
      _WIRE_26[0] <= _WIRE_22 @[DIstribution.scala 129:35]
      _WIRE_26[1] <= _WIRE_23 @[DIstribution.scala 129:35]
      _WIRE_26[2] <= _WIRE_24 @[DIstribution.scala 129:35]
      _WIRE_26[3] <= _WIRE_25 @[DIstribution.scala 129:35]
      wire _WIRE_27 : UInt<1>[4][4]
      _WIRE_27 <= _WIRE_26
      io.out <= _WIRE_27 @[DIstribution.scala 129:16]
      io.ProcessValid <= UInt<1>("h0") @[DIstribution.scala 130:25]
      io.iteration <= UInt<1>("h0") @[DIstribution.scala 131:22]
      io.validIteration <= UInt<1>("h0") @[DIstribution.scala 132:27]

  module PathFinder_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}

    when io.DataValid : @[PathFinder.scala 20:20]
      wire _counterRegs1_WIRE : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_1 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_1[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_2 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_2[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_3 : UInt<16>[4] @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[0] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[1] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[2] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      _counterRegs1_WIRE_3[3] <= UInt<16>("h0") @[PathFinder.scala 21:70]
      wire _counterRegs1_WIRE_4 : UInt<16>[4][4] @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[0] <= _counterRegs1_WIRE @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[1] <= _counterRegs1_WIRE_1 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[2] <= _counterRegs1_WIRE_2 @[PathFinder.scala 21:37]
      _counterRegs1_WIRE_4[3] <= _counterRegs1_WIRE_3 @[PathFinder.scala 21:37]
      reg counterRegs1 : UInt<16>[4][4], clock with :
        reset => (reset, _counterRegs1_WIRE_4) @[PathFinder.scala 21:29]
      wire _counterRegs2_WIRE : UInt<16>[4] @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[0] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[1] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[2] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      _counterRegs2_WIRE[3] <= UInt<16>("h0") @[PathFinder.scala 22:37]
      reg counterRegs2 : UInt<16>[4], clock with :
        reset => (reset, _counterRegs2_WIRE) @[PathFinder.scala 22:29]
      reg delay : UInt<32>, clock with :
        reset => (reset, UInt<32>("h0")) @[PathFinder.scala 25:22]
      inst myMuxes of Muxes_15 @[PathFinder.scala 26:23]
      myMuxes.clock <= clock
      myMuxes.reset <= reset
      inst myCounter of SourceDestination_15 @[PathFinder.scala 32:25]
      myCounter.clock <= clock
      myCounter.reset <= reset
      reg myCounter_io_start_REG : UInt<1>, clock with :
        reset => (UInt<1>("h0"), myCounter_io_start_REG) @[PathFinder.scala 33:32]
      myCounter_io_start_REG <= io.DataValid @[PathFinder.scala 33:32]
      myCounter.io.start <= myCounter_io_start_REG @[PathFinder.scala 33:22]
      myCounter.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 34:34]
      myCounter.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 34:34]
      myCounter.io.Streaming_matrix[0] <= io.Streaming_matrix[0] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[1] <= io.Streaming_matrix[1] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[2] <= io.Streaming_matrix[2] @[PathFinder.scala 35:33]
      myCounter.io.Streaming_matrix[3] <= io.Streaming_matrix[3] @[PathFinder.scala 35:33]
      inst Distribution of Distribution_15 @[PathFinder.scala 37:28]
      Distribution.clock <= clock
      Distribution.reset <= reset
      Distribution.io.valid <= myCounter.io.valid @[PathFinder.scala 39:25]
      Distribution.io.s <= io.NoDPE @[PathFinder.scala 40:21]
      io.iteration <= Distribution.io.iteration @[PathFinder.scala 41:16]
      io.validIteration <= Distribution.io.validIteration @[PathFinder.scala 42:21]
      Distribution.io.matrix[0][0] <= myCounter.io.counterMatrix1.bits[0][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][1] <= myCounter.io.counterMatrix1.bits[0][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][2] <= myCounter.io.counterMatrix1.bits[0][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[0][3] <= myCounter.io.counterMatrix1.bits[0][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][0] <= myCounter.io.counterMatrix1.bits[1][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][1] <= myCounter.io.counterMatrix1.bits[1][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][2] <= myCounter.io.counterMatrix1.bits[1][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[1][3] <= myCounter.io.counterMatrix1.bits[1][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][0] <= myCounter.io.counterMatrix1.bits[2][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][1] <= myCounter.io.counterMatrix1.bits[2][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][2] <= myCounter.io.counterMatrix1.bits[2][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[2][3] <= myCounter.io.counterMatrix1.bits[2][3] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][0] <= myCounter.io.counterMatrix1.bits[3][0] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][1] <= myCounter.io.counterMatrix1.bits[3][1] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][2] <= myCounter.io.counterMatrix1.bits[3][2] @[PathFinder.scala 43:26]
      Distribution.io.matrix[3][3] <= myCounter.io.counterMatrix1.bits[3][3] @[PathFinder.scala 43:26]
      when Distribution.io.ProcessValid : @[PathFinder.scala 52:40]
        myCounter.io.counterMatrix1.ready <= UInt<1>("h1") @[PathFinder.scala 53:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h1") @[PathFinder.scala 54:39]
        myMuxes.io.mat1[0][0] <= io.Stationary_matrix[0][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][1] <= io.Stationary_matrix[0][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][2] <= io.Stationary_matrix[0][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[0][3] <= io.Stationary_matrix[0][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][0] <= io.Stationary_matrix[1][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][1] <= io.Stationary_matrix[1][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][2] <= io.Stationary_matrix[1][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[1][3] <= io.Stationary_matrix[1][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][0] <= io.Stationary_matrix[2][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][1] <= io.Stationary_matrix[2][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][2] <= io.Stationary_matrix[2][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[2][3] <= io.Stationary_matrix[2][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][0] <= io.Stationary_matrix[3][0] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][1] <= io.Stationary_matrix[3][1] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][2] <= io.Stationary_matrix[3][2] @[PathFinder.scala 55:21]
        myMuxes.io.mat1[3][3] <= io.Stationary_matrix[3][3] @[PathFinder.scala 55:21]
        myMuxes.io.mat2[0] <= io.Streaming_matrix[0] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[1] <= io.Streaming_matrix[1] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[2] <= io.Streaming_matrix[2] @[PathFinder.scala 57:21]
        myMuxes.io.mat2[3] <= io.Streaming_matrix[3] @[PathFinder.scala 57:21]
        myMuxes.io.counterMatrix1 <= Distribution.io.out @[PathFinder.scala 58:31]
        myMuxes.io.counterMatrix2 <= myCounter.io.counterMatrix2.bits @[PathFinder.scala 59:31]
      else :
        myCounter.io.counterMatrix1.ready <= UInt<1>("h0") @[PathFinder.scala 62:39]
        myCounter.io.counterMatrix2.ready <= UInt<1>("h0") @[PathFinder.scala 64:39]
        myMuxes.io.mat1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 65:21]
        myMuxes.io.mat1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 65:21]
        myMuxes.io.mat2[0] <= counterRegs2[0] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[1] <= counterRegs2[1] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[2] <= counterRegs2[2] @[PathFinder.scala 66:21]
        myMuxes.io.mat2[3] <= counterRegs2[3] @[PathFinder.scala 66:21]
        myMuxes.io.counterMatrix1[0][0] <= counterRegs1[0][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][1] <= counterRegs1[0][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][2] <= counterRegs1[0][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[0][3] <= counterRegs1[0][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][0] <= counterRegs1[1][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][1] <= counterRegs1[1][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][2] <= counterRegs1[1][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[1][3] <= counterRegs1[1][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][0] <= counterRegs1[2][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][1] <= counterRegs1[2][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][2] <= counterRegs1[2][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[2][3] <= counterRegs1[2][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][0] <= counterRegs1[3][0] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][1] <= counterRegs1[3][1] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][2] <= counterRegs1[3][2] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix1[3][3] <= counterRegs1[3][3] @[PathFinder.scala 67:31]
        myMuxes.io.counterMatrix2[0] <= counterRegs2[0] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[1] <= counterRegs2[1] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[2] <= counterRegs2[2] @[PathFinder.scala 68:31]
        myMuxes.io.counterMatrix2[3] <= counterRegs2[3] @[PathFinder.scala 68:31]
      io.PF_Valid <= myMuxes.io.valid @[PathFinder.scala 74:15]
      io.i_mux_bus <= myMuxes.io.i_mux_bus @[PathFinder.scala 75:16]
      io.Source <= myMuxes.io.Source @[PathFinder.scala 76:13]
      io.destination <= myMuxes.io.destination @[PathFinder.scala 77:18]
    else :
      io.validIteration <= UInt<1>("h0") @[PathFinder.scala 79:21]
      io.iteration <= UInt<1>("h0") @[PathFinder.scala 80:16]
      io.PF_Valid <= UInt<1>("h0") @[PathFinder.scala 81:15]
      wire _WIRE : UInt<32>[16] @[PathFinder.scala 82:35]
      _WIRE[0] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[1] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[2] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[3] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[4] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[5] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[6] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[7] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[8] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[9] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[10] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[11] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[12] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[13] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[14] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      _WIRE[15] <= UInt<32>("h0") @[PathFinder.scala 82:35]
      wire _WIRE_1 : UInt<32>[16]
      _WIRE_1 <= _WIRE
      io.i_mux_bus <= _WIRE_1 @[PathFinder.scala 82:16]
      wire _WIRE_2 : UInt<32>[16] @[PathFinder.scala 83:32]
      _WIRE_2[0] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[1] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[2] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[3] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[4] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[5] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[6] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[7] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[8] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[9] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[10] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[11] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[12] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[13] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[14] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      _WIRE_2[15] <= UInt<32>("h0") @[PathFinder.scala 83:32]
      wire _WIRE_3 : UInt<32>[16]
      _WIRE_3 <= _WIRE_2
      io.Source <= _WIRE_3 @[PathFinder.scala 83:13]
      wire _WIRE_4 : UInt<32>[16] @[PathFinder.scala 84:37]
      _WIRE_4[0] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[1] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[2] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[3] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[4] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[5] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[6] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[7] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[8] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[9] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[10] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[11] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[12] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[13] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[14] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      _WIRE_4[15] <= UInt<32>("h0") @[PathFinder.scala 84:37]
      wire _WIRE_5 : UInt<32>[16]
      _WIRE_5 <= _WIRE_4
      io.destination <= _WIRE_5 @[PathFinder.scala 84:18]

  module ivncontrol4 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], o_vn : UInt<5>[4]}

    wire _i_vn_WIRE : UInt<5>[4] @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[0] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[1] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[2] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[3] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    reg i_vn : UInt<5>[4], clock with :
      reset => (reset, _i_vn_WIRE) @[ivncontrol(4).scala 15:23]
    wire _rowcount_WIRE : UInt<32>[4] @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[0] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[1] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[2] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[3] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    reg rowcount : UInt<32>[4], clock with :
      reset => (reset, _rowcount_WIRE) @[ivncontrol(4).scala 19:27]
    wire valid : UInt<1>
    valid <= UInt<1>("h0")
    wire valid1 : UInt<1>
    valid1 <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 31:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 32:20]
    reg mat : UInt<32>[4][4], clock with :
      reset => (UInt<1>("h0"), mat) @[ivncontrol(4).scala 35:18]
    reg count : UInt<32>[4], clock with :
      reset => (UInt<1>("h0"), count) @[ivncontrol(4).scala 39:20]
    node _T = bits(i, 1, 0)
    node _T_1 = bits(j, 1, 0)
    node _mat_T = bits(i, 1, 0)
    node _mat_T_1 = bits(j, 1, 0)
    mat[_T][_T_1] <= io.Stationary_matrix[_mat_T][_mat_T_1] @[ivncontrol(4).scala 44:15]
    node _T_2 = eq(valid1, UInt<1>("h0")) @[ivncontrol(4).scala 45:16]
    when _T_2 : @[ivncontrol(4).scala 45:28]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = neq(io.Stationary_matrix[_T_3][_T_4], UInt<1>("h0")) @[ivncontrol(4).scala 46:43]
      when _T_5 : @[ivncontrol(4).scala 46:51]
        node _T_6 = bits(i, 1, 0)
        node _count_T = bits(i, 1, 0)
        node _count_T_1 = add(count[_count_T], UInt<1>("h1")) @[ivncontrol(4).scala 47:33]
        node _count_T_2 = tail(_count_T_1, 1) @[ivncontrol(4).scala 47:33]
        count[_T_6] <= _count_T_2 @[ivncontrol(4).scala 47:22]
    node _T_7 = geq(count[1], UInt<3>("h4")) @[ivncontrol(4).scala 53:20]
    when _T_7 : @[ivncontrol(4).scala 53:28]
      valid1 <= UInt<1>("h1") @[ivncontrol(4).scala 54:16]
    node _T_8 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 59:14]
    node _T_9 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 59:47]
    node _T_10 = and(_T_8, _T_9) @[ivncontrol(4).scala 59:41]
    when _T_10 : @[ivncontrol(4).scala 59:75]
      rowcount[0] <= count[0] @[ivncontrol(4).scala 66:21]
      node _T_11 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_11 : @[ivncontrol(4).scala 67:49]
        node _T_12 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_13 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_14 = and(_T_12, _T_13) @[ivncontrol(4).scala 71:54]
        node _T_15 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_16 = and(_T_14, _T_15) @[ivncontrol(4).scala 71:92]
        node _T_17 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_18 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_19 = and(_T_17, _T_18) @[ivncontrol(4).scala 71:170]
        node _T_20 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_21 = and(_T_19, _T_20) @[ivncontrol(4).scala 71:208]
        node _T_22 = or(_T_16, _T_21) @[ivncontrol(4).scala 71:131]
        node _T_23 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_24 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_25 = and(_T_23, _T_24) @[ivncontrol(4).scala 71:284]
        node _T_26 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_27 = and(_T_25, _T_26) @[ivncontrol(4).scala 71:322]
        node _T_28 = or(_T_22, _T_27) @[ivncontrol(4).scala 71:246]
        when _T_28 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_1 = tail(_rowcount_1_T, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_1 @[ivncontrol(4).scala 72:29]
        else :
          node _T_29 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_30 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_31 = and(_T_29, _T_30) @[ivncontrol(4).scala 73:60]
          node _T_32 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_33 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_34 = and(_T_32, _T_33) @[ivncontrol(4).scala 73:138]
          node _T_35 = or(_T_31, _T_34) @[ivncontrol(4).scala 73:99]
          node _T_36 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_37 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_38 = and(_T_36, _T_37) @[ivncontrol(4).scala 73:217]
          node _T_39 = or(_T_35, _T_38) @[ivncontrol(4).scala 73:178]
          when _T_39 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_2 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_3 = tail(_rowcount_1_T_2, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_3 @[ivncontrol(4).scala 74:29]
          else :
            node _T_40 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_41 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_42 = and(_T_40, _T_41) @[ivncontrol(4).scala 75:60]
            node _T_43 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_44 = and(_T_42, _T_43) @[ivncontrol(4).scala 75:98]
            node _T_45 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_46 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_47 = and(_T_45, _T_46) @[ivncontrol(4).scala 75:175]
            node _T_48 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_49 = and(_T_47, _T_48) @[ivncontrol(4).scala 75:213]
            node _T_50 = or(_T_44, _T_49) @[ivncontrol(4).scala 75:136]
            node _T_51 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_52 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_53 = and(_T_51, _T_52) @[ivncontrol(4).scala 75:293]
            node _T_54 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_55 = and(_T_53, _T_54) @[ivncontrol(4).scala 75:331]
            node _T_56 = or(_T_50, _T_55) @[ivncontrol(4).scala 75:253]
            when _T_56 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_4 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_5 = tail(_rowcount_1_T_4, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_5 @[ivncontrol(4).scala 76:29]
      rowcount[1] <= count[1] @[ivncontrol(4).scala 66:21]
      node _T_57 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_57 : @[ivncontrol(4).scala 67:49]
        node _T_58 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_59 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_60 = and(_T_58, _T_59) @[ivncontrol(4).scala 71:54]
        node _T_61 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_62 = and(_T_60, _T_61) @[ivncontrol(4).scala 71:92]
        node _T_63 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_64 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_65 = and(_T_63, _T_64) @[ivncontrol(4).scala 71:170]
        node _T_66 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_67 = and(_T_65, _T_66) @[ivncontrol(4).scala 71:208]
        node _T_68 = or(_T_62, _T_67) @[ivncontrol(4).scala 71:131]
        node _T_69 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_70 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_71 = and(_T_69, _T_70) @[ivncontrol(4).scala 71:284]
        node _T_72 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_73 = and(_T_71, _T_72) @[ivncontrol(4).scala 71:322]
        node _T_74 = or(_T_68, _T_73) @[ivncontrol(4).scala 71:246]
        when _T_74 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T_6 = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_7 = tail(_rowcount_1_T_6, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_7 @[ivncontrol(4).scala 72:29]
        else :
          node _T_75 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_76 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_77 = and(_T_75, _T_76) @[ivncontrol(4).scala 73:60]
          node _T_78 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_79 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_80 = and(_T_78, _T_79) @[ivncontrol(4).scala 73:138]
          node _T_81 = or(_T_77, _T_80) @[ivncontrol(4).scala 73:99]
          node _T_82 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_83 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_84 = and(_T_82, _T_83) @[ivncontrol(4).scala 73:217]
          node _T_85 = or(_T_81, _T_84) @[ivncontrol(4).scala 73:178]
          when _T_85 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_8 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_9 = tail(_rowcount_1_T_8, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_9 @[ivncontrol(4).scala 74:29]
          else :
            node _T_86 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_87 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_88 = and(_T_86, _T_87) @[ivncontrol(4).scala 75:60]
            node _T_89 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_90 = and(_T_88, _T_89) @[ivncontrol(4).scala 75:98]
            node _T_91 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_92 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_93 = and(_T_91, _T_92) @[ivncontrol(4).scala 75:175]
            node _T_94 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_95 = and(_T_93, _T_94) @[ivncontrol(4).scala 75:213]
            node _T_96 = or(_T_90, _T_95) @[ivncontrol(4).scala 75:136]
            node _T_97 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_98 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_99 = and(_T_97, _T_98) @[ivncontrol(4).scala 75:293]
            node _T_100 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_101 = and(_T_99, _T_100) @[ivncontrol(4).scala 75:331]
            node _T_102 = or(_T_96, _T_101) @[ivncontrol(4).scala 75:253]
            when _T_102 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_10 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_11 = tail(_rowcount_1_T_10, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_11 @[ivncontrol(4).scala 76:29]
    node _T_103 = lt(i, UInt<2>("h3")) @[ivncontrol(4).scala 87:14]
    node _T_104 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 87:46]
    node _T_105 = and(_T_103, _T_104) @[ivncontrol(4).scala 87:40]
    when _T_105 : @[ivncontrol(4).scala 87:74]
      node _i_T = add(i, UInt<1>("h1")) @[ivncontrol(4).scala 88:16]
      node _i_T_1 = tail(_i_T, 1) @[ivncontrol(4).scala 88:16]
      i <= _i_T_1 @[ivncontrol(4).scala 88:11]
    node _T_106 = lt(j, UInt<2>("h3")) @[ivncontrol(4).scala 91:14]
    node _T_107 = leq(i, UInt<2>("h3")) @[ivncontrol(4).scala 91:44]
    node _T_108 = and(_T_106, _T_107) @[ivncontrol(4).scala 91:39]
    when _T_108 : @[ivncontrol(4).scala 91:71]
      node _j_T = add(j, UInt<1>("h1")) @[ivncontrol(4).scala 92:16]
      node _j_T_1 = tail(_j_T, 1) @[ivncontrol(4).scala 92:16]
      j <= _j_T_1 @[ivncontrol(4).scala 92:11]
    else :
      node _T_109 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 94:19]
      node _T_110 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 94:53]
      node _T_111 = and(_T_109, _T_110) @[ivncontrol(4).scala 94:47]
      when _T_111 : @[ivncontrol(4).scala 94:81]
        j <= j @[ivncontrol(4).scala 95:11]
      else :
        j <= UInt<1>("h0") @[ivncontrol(4).scala 98:11]
    io.o_vn <= i_vn @[ivncontrol(4).scala 105:13]
    i_vn[0] <= UInt<5>("h9") @[ivncontrol(4).scala 108:17]
    i_vn[1] <= UInt<5>("ha") @[ivncontrol(4).scala 108:17]
    i_vn[2] <= UInt<5>("h5") @[ivncontrol(4).scala 108:17]
    i_vn[3] <= UInt<5>("h16") @[ivncontrol(4).scala 108:17]
    node _T_112 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 118:14]
    node _T_113 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 118:47]
    node _T_114 = and(_T_112, _T_113) @[ivncontrol(4).scala 118:41]
    when _T_114 : @[ivncontrol(4).scala 118:75]
      valid <= UInt<1>("h1") @[ivncontrol(4).scala 119:14]
    else :
      valid <= UInt<1>("h0") @[ivncontrol(4).scala 121:14]
    node _T_115 = eq(valid, UInt<1>("h1")) @[ivncontrol(4).scala 129:17]
    when _T_115 : @[ivncontrol(4).scala 129:28]
      node _T_116 = geq(UInt<3>("h4"), UInt<2>("h2")) @[ivncontrol(4).scala 130:25]
      when _T_116 : @[ivncontrol(4).scala 130:32]
        node _T_117 = eq(rowcount[0], UInt<2>("h2")) @[ivncontrol(4).scala 131:29]
        when _T_117 : @[ivncontrol(4).scala 131:38]
          i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 132:25]
          i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 133:25]
          node _T_118 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 134:34]
          when _T_118 : @[ivncontrol(4).scala 134:42]
            i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 135:29]
            i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 136:29]
          else :
            node _T_119 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 137:39]
            when _T_119 : @[ivncontrol(4).scala 137:46]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 138:29]
            else :
              node _T_120 = gt(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 139:40]
              when _T_120 : @[ivncontrol(4).scala 139:46]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 140:29]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 141:29]
        else :
          node _T_121 = eq(rowcount[0], UInt<1>("h1")) @[ivncontrol(4).scala 145:35]
          when _T_121 : @[ivncontrol(4).scala 145:43]
            i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 146:25]
            node _T_122 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 147:33]
            when _T_122 : @[ivncontrol(4).scala 147:40]
              i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 148:29]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 149:29]
              i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 150:29]
            else :
              node _T_123 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 151:39]
              when _T_123 : @[ivncontrol(4).scala 151:46]
                i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 152:29]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 153:29]
              else :
                node _T_124 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 155:39]
                when _T_124 : @[ivncontrol(4).scala 155:46]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 156:31]
                else :
                  node _T_125 = gt(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 158:39]
                  when _T_125 : @[ivncontrol(4).scala 158:44]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 159:30]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 160:29]
                    i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 161:29]
          else :
            node _T_126 = eq(rowcount[0], UInt<2>("h3")) @[ivncontrol(4).scala 167:35]
            when _T_126 : @[ivncontrol(4).scala 167:43]
              i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 168:25]
              i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 169:25]
              i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 170:25]
              node _T_127 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 171:34]
              when _T_127 : @[ivncontrol(4).scala 171:42]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 172:29]
            else :
              node _T_128 = eq(rowcount[0], UInt<1>("h0")) @[ivncontrol(4).scala 175:35]
              when _T_128 : @[ivncontrol(4).scala 175:43]
                node _T_129 = eq(rowcount[1], UInt<3>("h4")) @[ivncontrol(4).scala 176:33]
                when _T_129 : @[ivncontrol(4).scala 176:41]
                  i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 177:29]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 178:29]
                  i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 179:29]
                  i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 180:29]
                else :
                  node _T_130 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 181:39]
                  when _T_130 : @[ivncontrol(4).scala 181:46]
                    i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 182:29]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 183:29]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 184:29]
                  else :
                    node _T_131 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 185:39]
                    when _T_131 : @[ivncontrol(4).scala 185:46]
                      i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 186:29]
                      i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 187:29]
                    else :
                      node _T_132 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 188:39]
                      when _T_132 : @[ivncontrol(4).scala 188:46]
                        i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 189:29]
              else :
                node _T_133 = eq(rowcount[0], UInt<3>("h4")) @[ivncontrol(4).scala 191:35]
                when _T_133 : @[ivncontrol(4).scala 191:42]
                  i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 192:25]
                  i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 193:25]
                  i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 194:25]
                  i_vn[3] <= UInt<1>("h0") @[ivncontrol(4).scala 195:25]

  module fancontrol4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, o_reduction_add : UInt[3], o_reduction_cmd : UInt<3>[3], o_reduction_valid : UInt<1>}

    wire _r_reduction_add_WIRE : UInt<1>[3] @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    reg r_reduction_add : UInt<1>[3], clock with :
      reset => (reset, _r_reduction_add_WIRE) @[FanCtrl.scala 19:34]
    wire _r_reduction_cmd_WIRE : UInt<3>[3] @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    reg r_reduction_cmd : UInt<3>[3], clock with :
      reset => (reset, _r_reduction_cmd_WIRE) @[FanCtrl.scala 20:34]
    wire _r_add_lvl_0Reg_WIRE : UInt<1>[8] @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[5] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[6] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[7] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    reg r_add_lvl_0Reg : UInt<1>[8], clock with :
      reset => (reset, _r_add_lvl_0Reg_WIRE) @[FanCtrl.scala 23:33]
    wire _r_add_lvl_1Reg_WIRE : UInt<1>[5] @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    reg r_add_lvl_1Reg : UInt<1>[5], clock with :
      reset => (reset, _r_add_lvl_1Reg_WIRE) @[FanCtrl.scala 24:33]
    wire _r_cmd_lvl_0Reg_WIRE : UInt<3>[8] @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[5] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[6] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[7] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    reg r_cmd_lvl_0Reg : UInt<3>[8], clock with :
      reset => (reset, _r_cmd_lvl_0Reg_WIRE) @[FanCtrl.scala 27:33]
    wire _r_cmd_lvl_1Reg_WIRE : UInt<3>[5] @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    reg r_cmd_lvl_1Reg : UInt<3>[5], clock with :
      reset => (reset, _r_cmd_lvl_1Reg_WIRE) @[FanCtrl.scala 28:33]
    wire _w_vn_WIRE : UInt<5>[4] @[FanCtrl.scala 34:31]
    _w_vn_WIRE[0] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[1] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[2] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[3] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    reg w_vn : UInt<5>[4], clock with :
      reset => (reset, _w_vn_WIRE) @[FanCtrl.scala 34:23]
    wire _r_valid_WIRE : UInt<1>[5] @[FanCtrl.scala 35:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    reg r_valid : UInt<1>[5], clock with :
      reset => (reset, _r_valid_WIRE) @[FanCtrl.scala 35:26]
    w_vn <= io.i_vn @[FanCtrl.scala 37:10]
    node _T = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T : @[FanCtrl.scala 40:25]
      node _T_1 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_1 : @[FanCtrl.scala 41:34]
        node _T_2 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:25]
        node _T_3 = add(_T_2, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_4 = tail(_T_3, 1) @[FanCtrl.scala 42:31]
        node _T_5 = bits(_T_4, 1, 0)
        node _T_6 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:52]
        node _T_7 = add(_T_6, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_8 = tail(_T_7, 1) @[FanCtrl.scala 42:58]
        node _T_9 = bits(_T_8, 1, 0)
        node _T_10 = eq(w_vn[_T_5], w_vn[_T_9]) @[FanCtrl.scala 42:39]
        when _T_10 : @[FanCtrl.scala 42:66]
          node _T_11 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 43:34]
          node _T_12 = tail(_T_11, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_12] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_13 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 45:32]
          node _T_14 = tail(_T_13, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_14] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_15 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 48:28]
        node _T_16 = add(_T_15, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_17 = tail(_T_16, 1) @[FanCtrl.scala 48:34]
        node _T_18 = bits(_T_17, 1, 0)
        node _T_19 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 49:26]
        node _T_20 = add(_T_19, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_21 = tail(_T_20, 1) @[FanCtrl.scala 49:32]
        node _T_22 = bits(_T_21, 1, 0)
        node _T_23 = neq(w_vn[_T_18], w_vn[_T_22]) @[FanCtrl.scala 48:41]
        node _T_24 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 50:27]
        node _T_25 = add(_T_24, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_26 = tail(_T_25, 1) @[FanCtrl.scala 50:33]
        node _T_27 = bits(_T_26, 1, 0)
        node _T_28 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 51:26]
        node _T_29 = add(_T_28, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_30 = tail(_T_29, 1) @[FanCtrl.scala 51:32]
        node _T_31 = bits(_T_30, 1, 0)
        node _T_32 = neq(w_vn[_T_27], w_vn[_T_31]) @[FanCtrl.scala 50:41]
        node _T_33 = and(_T_23, _T_32) @[FanCtrl.scala 49:41]
        when _T_33 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_34 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 55:34]
          node _T_35 = add(_T_34, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_36 = tail(_T_35, 1) @[FanCtrl.scala 55:40]
          node _T_37 = bits(_T_36, 1, 0)
          node _T_38 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 56:32]
          node _T_39 = add(_T_38, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_40 = tail(_T_39, 1) @[FanCtrl.scala 56:38]
          node _T_41 = bits(_T_40, 1, 0)
          node _T_42 = eq(w_vn[_T_37], w_vn[_T_41]) @[FanCtrl.scala 55:48]
          node _T_43 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 57:33]
          node _T_44 = add(_T_43, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_45 = tail(_T_44, 1) @[FanCtrl.scala 57:39]
          node _T_46 = bits(_T_45, 1, 0)
          node _T_47 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 58:32]
          node _T_48 = add(_T_47, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_49 = tail(_T_48, 1) @[FanCtrl.scala 58:38]
          node _T_50 = bits(_T_49, 1, 0)
          node _T_51 = neq(w_vn[_T_46], w_vn[_T_50]) @[FanCtrl.scala 57:46]
          node _T_52 = and(_T_42, _T_51) @[FanCtrl.scala 56:46]
          when _T_52 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_53 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 67:32]
        node _T_54 = tail(_T_53, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_54] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_55 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 77:29]
      node _T_56 = tail(_T_55, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_56] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_57 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_57 : @[FanCtrl.scala 81:34]
        node _T_58 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:25]
        node _T_59 = add(_T_58, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_60 = tail(_T_59, 1) @[FanCtrl.scala 82:31]
        node _T_61 = bits(_T_60, 1, 0)
        node _T_62 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:52]
        node _T_63 = add(_T_62, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_64 = tail(_T_63, 1) @[FanCtrl.scala 82:58]
        node _T_65 = bits(_T_64, 1, 0)
        node _T_66 = eq(w_vn[_T_61], w_vn[_T_65]) @[FanCtrl.scala 82:39]
        when _T_66 : @[FanCtrl.scala 82:66]
          node _T_67 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 83:33]
          node _T_68 = tail(_T_67, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_68] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_69 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 85:33]
          node _T_70 = tail(_T_69, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_70] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_71 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:26]
        node _T_72 = add(_T_71, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_73 = tail(_T_72, 1) @[FanCtrl.scala 88:32]
        node _T_74 = bits(_T_73, 1, 0)
        node _T_75 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:52]
        node _T_76 = sub(_T_75, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_77 = tail(_T_76, 1) @[FanCtrl.scala 88:58]
        node _T_78 = bits(_T_77, 1, 0)
        node _T_79 = neq(w_vn[_T_74], w_vn[_T_78]) @[FanCtrl.scala 88:39]
        node _T_80 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:23]
        node _T_81 = add(_T_80, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_82 = tail(_T_81, 1) @[FanCtrl.scala 89:29]
        node _T_83 = bits(_T_82, 1, 0)
        node _T_84 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:50]
        node _T_85 = add(_T_84, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_86 = tail(_T_85, 1) @[FanCtrl.scala 89:56]
        node _T_87 = bits(_T_86, 1, 0)
        node _T_88 = neq(w_vn[_T_83], w_vn[_T_87]) @[FanCtrl.scala 89:37]
        node _T_89 = and(_T_79, _T_88) @[FanCtrl.scala 88:67]
        when _T_89 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_90 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:32]
          node _T_91 = add(_T_90, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_92 = tail(_T_91, 1) @[FanCtrl.scala 93:38]
          node _T_93 = bits(_T_92, 1, 0)
          node _T_94 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:59]
          node _T_95 = sub(_T_94, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_96 = tail(_T_95, 1) @[FanCtrl.scala 93:65]
          node _T_97 = bits(_T_96, 1, 0)
          node _T_98 = eq(w_vn[_T_93], w_vn[_T_97]) @[FanCtrl.scala 93:46]
          node _T_99 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:23]
          node _T_100 = add(_T_99, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_101 = tail(_T_100, 1) @[FanCtrl.scala 94:29]
          node _T_102 = bits(_T_101, 1, 0)
          node _T_103 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:50]
          node _T_104 = add(_T_103, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_105 = tail(_T_104, 1) @[FanCtrl.scala 94:56]
          node _T_106 = bits(_T_105, 1, 0)
          node _T_107 = neq(w_vn[_T_102], w_vn[_T_106]) @[FanCtrl.scala 94:37]
          node _T_108 = and(_T_98, _T_107) @[FanCtrl.scala 93:73]
          when _T_108 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_109 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 102:31]
        node _T_110 = tail(_T_109, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_110] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_111 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T_111 : @[FanCtrl.scala 40:25]
      node _T_112 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_112 : @[FanCtrl.scala 41:34]
        node _T_113 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:25]
        node _T_114 = add(_T_113, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_115 = tail(_T_114, 1) @[FanCtrl.scala 42:31]
        node _T_116 = bits(_T_115, 1, 0)
        node _T_117 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:52]
        node _T_118 = add(_T_117, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_119 = tail(_T_118, 1) @[FanCtrl.scala 42:58]
        node _T_120 = bits(_T_119, 1, 0)
        node _T_121 = eq(w_vn[_T_116], w_vn[_T_120]) @[FanCtrl.scala 42:39]
        when _T_121 : @[FanCtrl.scala 42:66]
          node _T_122 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 43:34]
          node _T_123 = tail(_T_122, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_123] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_124 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 45:32]
          node _T_125 = tail(_T_124, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_125] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_126 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 48:28]
        node _T_127 = add(_T_126, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_128 = tail(_T_127, 1) @[FanCtrl.scala 48:34]
        node _T_129 = bits(_T_128, 1, 0)
        node _T_130 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 49:26]
        node _T_131 = add(_T_130, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_132 = tail(_T_131, 1) @[FanCtrl.scala 49:32]
        node _T_133 = bits(_T_132, 1, 0)
        node _T_134 = neq(w_vn[_T_129], w_vn[_T_133]) @[FanCtrl.scala 48:41]
        node _T_135 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 50:27]
        node _T_136 = add(_T_135, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_137 = tail(_T_136, 1) @[FanCtrl.scala 50:33]
        node _T_138 = bits(_T_137, 1, 0)
        node _T_139 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 51:26]
        node _T_140 = add(_T_139, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_141 = tail(_T_140, 1) @[FanCtrl.scala 51:32]
        node _T_142 = bits(_T_141, 1, 0)
        node _T_143 = neq(w_vn[_T_138], w_vn[_T_142]) @[FanCtrl.scala 50:41]
        node _T_144 = and(_T_134, _T_143) @[FanCtrl.scala 49:41]
        when _T_144 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_145 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 55:34]
          node _T_146 = add(_T_145, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_147 = tail(_T_146, 1) @[FanCtrl.scala 55:40]
          node _T_148 = bits(_T_147, 1, 0)
          node _T_149 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 56:32]
          node _T_150 = add(_T_149, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_151 = tail(_T_150, 1) @[FanCtrl.scala 56:38]
          node _T_152 = bits(_T_151, 1, 0)
          node _T_153 = eq(w_vn[_T_148], w_vn[_T_152]) @[FanCtrl.scala 55:48]
          node _T_154 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 57:33]
          node _T_155 = add(_T_154, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_156 = tail(_T_155, 1) @[FanCtrl.scala 57:39]
          node _T_157 = bits(_T_156, 1, 0)
          node _T_158 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 58:32]
          node _T_159 = add(_T_158, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_160 = tail(_T_159, 1) @[FanCtrl.scala 58:38]
          node _T_161 = bits(_T_160, 1, 0)
          node _T_162 = neq(w_vn[_T_157], w_vn[_T_161]) @[FanCtrl.scala 57:46]
          node _T_163 = and(_T_153, _T_162) @[FanCtrl.scala 56:46]
          when _T_163 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_164 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 67:32]
        node _T_165 = tail(_T_164, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_165] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_166 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 77:29]
      node _T_167 = tail(_T_166, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_167] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_168 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_168 : @[FanCtrl.scala 81:34]
        node _T_169 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:25]
        node _T_170 = add(_T_169, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_171 = tail(_T_170, 1) @[FanCtrl.scala 82:31]
        node _T_172 = bits(_T_171, 1, 0)
        node _T_173 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:52]
        node _T_174 = add(_T_173, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_175 = tail(_T_174, 1) @[FanCtrl.scala 82:58]
        node _T_176 = bits(_T_175, 1, 0)
        node _T_177 = eq(w_vn[_T_172], w_vn[_T_176]) @[FanCtrl.scala 82:39]
        when _T_177 : @[FanCtrl.scala 82:66]
          node _T_178 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 83:33]
          node _T_179 = tail(_T_178, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_179] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_180 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 85:33]
          node _T_181 = tail(_T_180, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_181] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_182 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:26]
        node _T_183 = add(_T_182, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_184 = tail(_T_183, 1) @[FanCtrl.scala 88:32]
        node _T_185 = bits(_T_184, 1, 0)
        node _T_186 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:52]
        node _T_187 = sub(_T_186, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_188 = tail(_T_187, 1) @[FanCtrl.scala 88:58]
        node _T_189 = bits(_T_188, 1, 0)
        node _T_190 = neq(w_vn[_T_185], w_vn[_T_189]) @[FanCtrl.scala 88:39]
        node _T_191 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:23]
        node _T_192 = add(_T_191, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_193 = tail(_T_192, 1) @[FanCtrl.scala 89:29]
        node _T_194 = bits(_T_193, 1, 0)
        node _T_195 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:50]
        node _T_196 = add(_T_195, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_197 = tail(_T_196, 1) @[FanCtrl.scala 89:56]
        node _T_198 = bits(_T_197, 1, 0)
        node _T_199 = neq(w_vn[_T_194], w_vn[_T_198]) @[FanCtrl.scala 89:37]
        node _T_200 = and(_T_190, _T_199) @[FanCtrl.scala 88:67]
        when _T_200 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_201 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:32]
          node _T_202 = add(_T_201, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_203 = tail(_T_202, 1) @[FanCtrl.scala 93:38]
          node _T_204 = bits(_T_203, 1, 0)
          node _T_205 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:59]
          node _T_206 = sub(_T_205, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_207 = tail(_T_206, 1) @[FanCtrl.scala 93:65]
          node _T_208 = bits(_T_207, 1, 0)
          node _T_209 = eq(w_vn[_T_204], w_vn[_T_208]) @[FanCtrl.scala 93:46]
          node _T_210 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:23]
          node _T_211 = add(_T_210, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_212 = tail(_T_211, 1) @[FanCtrl.scala 94:29]
          node _T_213 = bits(_T_212, 1, 0)
          node _T_214 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:50]
          node _T_215 = add(_T_214, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_216 = tail(_T_215, 1) @[FanCtrl.scala 94:56]
          node _T_217 = bits(_T_216, 1, 0)
          node _T_218 = neq(w_vn[_T_213], w_vn[_T_217]) @[FanCtrl.scala 94:37]
          node _T_219 = and(_T_209, _T_218) @[FanCtrl.scala 93:73]
          when _T_219 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_220 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 102:31]
        node _T_221 = tail(_T_220, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_221] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_222 = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 112:14]
    when _T_222 : @[FanCtrl.scala 112:23]
      node _T_223 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 113:27]
      node _T_224 = tail(_T_223, 1) @[FanCtrl.scala 113:27]
      r_reduction_add[_T_224] <= UInt<1>("h0") @[FanCtrl.scala 113:34]
      node _T_225 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 114:28]
      node _T_226 = tail(_T_225, 1) @[FanCtrl.scala 114:28]
      r_reduction_cmd[_T_226] <= UInt<1>("h0") @[FanCtrl.scala 114:35]
      node _T_227 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 116:23]
      when _T_227 : @[FanCtrl.scala 116:32]
        node _T_228 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:23]
        node _T_229 = add(_T_228, UInt<1>("h1")) @[FanCtrl.scala 117:29]
        node _T_230 = tail(_T_229, 1) @[FanCtrl.scala 117:29]
        node _T_231 = bits(_T_230, 1, 0)
        node _T_232 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:50]
        node _T_233 = add(_T_232, UInt<2>("h2")) @[FanCtrl.scala 117:56]
        node _T_234 = tail(_T_233, 1) @[FanCtrl.scala 117:56]
        node _T_235 = bits(_T_234, 1, 0)
        node _T_236 = eq(w_vn[_T_231], w_vn[_T_235]) @[FanCtrl.scala 117:37]
        when _T_236 : @[FanCtrl.scala 117:65]
          node _T_237 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 118:31]
          node _T_238 = tail(_T_237, 1) @[FanCtrl.scala 118:31]
          r_reduction_add[_T_238] <= UInt<1>("h1") @[FanCtrl.scala 118:38]
        else :
          node _T_239 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 120:31]
          node _T_240 = tail(_T_239, 1) @[FanCtrl.scala 120:31]
          r_reduction_add[_T_240] <= UInt<1>("h0") @[FanCtrl.scala 120:38]
        node _T_241 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:24]
        node _T_242 = add(_T_241, UInt<1>("h0")) @[FanCtrl.scala 123:30]
        node _T_243 = tail(_T_242, 1) @[FanCtrl.scala 123:30]
        node _T_244 = bits(_T_243, 1, 0)
        node _T_245 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:51]
        node _T_246 = add(_T_245, UInt<1>("h1")) @[FanCtrl.scala 123:57]
        node _T_247 = tail(_T_246, 1) @[FanCtrl.scala 123:57]
        node _T_248 = bits(_T_247, 1, 0)
        node _T_249 = eq(w_vn[_T_244], w_vn[_T_248]) @[FanCtrl.scala 123:38]
        node _T_250 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:23]
        node _T_251 = add(_T_250, UInt<2>("h2")) @[FanCtrl.scala 124:29]
        node _T_252 = tail(_T_251, 1) @[FanCtrl.scala 124:29]
        node _T_253 = bits(_T_252, 1, 0)
        node _T_254 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:49]
        node _T_255 = add(_T_254, UInt<2>("h3")) @[FanCtrl.scala 124:55]
        node _T_256 = tail(_T_255, 1) @[FanCtrl.scala 124:55]
        node _T_257 = bits(_T_256, 1, 0)
        node _T_258 = eq(w_vn[_T_253], w_vn[_T_257]) @[FanCtrl.scala 124:36]
        node _T_259 = and(_T_249, _T_258) @[FanCtrl.scala 123:65]
        node _T_260 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:23]
        node _T_261 = add(_T_260, UInt<3>("h4")) @[FanCtrl.scala 125:29]
        node _T_262 = tail(_T_261, 1) @[FanCtrl.scala 125:29]
        node _T_263 = bits(_T_262, 1, 0)
        node _T_264 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:50]
        node _T_265 = add(_T_264, UInt<2>("h3")) @[FanCtrl.scala 125:56]
        node _T_266 = tail(_T_265, 1) @[FanCtrl.scala 125:56]
        node _T_267 = bits(_T_266, 1, 0)
        node _T_268 = neq(w_vn[_T_263], w_vn[_T_267]) @[FanCtrl.scala 125:37]
        node _T_269 = and(_T_259, _T_268) @[FanCtrl.scala 124:64]
        node _T_270 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:23]
        node _T_271 = add(_T_270, UInt<1>("h1")) @[FanCtrl.scala 126:29]
        node _T_272 = tail(_T_271, 1) @[FanCtrl.scala 126:29]
        node _T_273 = bits(_T_272, 1, 0)
        node _T_274 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:51]
        node _T_275 = add(_T_274, UInt<2>("h2")) @[FanCtrl.scala 126:57]
        node _T_276 = tail(_T_275, 1) @[FanCtrl.scala 126:57]
        node _T_277 = bits(_T_276, 1, 0)
        node _T_278 = neq(w_vn[_T_273], w_vn[_T_277]) @[FanCtrl.scala 126:37]
        node _T_279 = and(_T_269, _T_278) @[FanCtrl.scala 125:64]
        when _T_279 : @[FanCtrl.scala 126:66]
          node _T_280 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 128:31]
          node _T_281 = tail(_T_280, 1) @[FanCtrl.scala 128:31]
          r_reduction_cmd[_T_281] <= UInt<3>("h5") @[FanCtrl.scala 128:39]
        else :
          node _T_282 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:30]
          node _T_283 = add(_T_282, UInt<2>("h2")) @[FanCtrl.scala 130:36]
          node _T_284 = tail(_T_283, 1) @[FanCtrl.scala 130:36]
          node _T_285 = bits(_T_284, 1, 0)
          node _T_286 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:57]
          node _T_287 = add(_T_286, UInt<2>("h3")) @[FanCtrl.scala 130:63]
          node _T_288 = tail(_T_287, 1) @[FanCtrl.scala 130:63]
          node _T_289 = bits(_T_288, 1, 0)
          node _T_290 = eq(w_vn[_T_285], w_vn[_T_289]) @[FanCtrl.scala 130:44]
          node _T_291 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:29]
          node _T_292 = add(_T_291, UInt<3>("h4")) @[FanCtrl.scala 131:35]
          node _T_293 = tail(_T_292, 1) @[FanCtrl.scala 131:35]
          node _T_294 = bits(_T_293, 1, 0)
          node _T_295 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:57]
          node _T_296 = add(_T_295, UInt<2>("h3")) @[FanCtrl.scala 131:63]
          node _T_297 = tail(_T_296, 1) @[FanCtrl.scala 131:63]
          node _T_298 = bits(_T_297, 1, 0)
          node _T_299 = neq(w_vn[_T_294], w_vn[_T_298]) @[FanCtrl.scala 131:43]
          node _T_300 = and(_T_290, _T_299) @[FanCtrl.scala 130:71]
          node _T_301 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:29]
          node _T_302 = add(_T_301, UInt<1>("h1")) @[FanCtrl.scala 132:35]
          node _T_303 = tail(_T_302, 1) @[FanCtrl.scala 132:35]
          node _T_304 = bits(_T_303, 1, 0)
          node _T_305 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:57]
          node _T_306 = add(_T_305, UInt<2>("h2")) @[FanCtrl.scala 132:63]
          node _T_307 = tail(_T_306, 1) @[FanCtrl.scala 132:63]
          node _T_308 = bits(_T_307, 1, 0)
          node _T_309 = neq(w_vn[_T_304], w_vn[_T_308]) @[FanCtrl.scala 132:43]
          node _T_310 = and(_T_300, _T_309) @[FanCtrl.scala 131:71]
          when _T_310 : @[FanCtrl.scala 132:72]
            node _T_311 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 134:31]
            node _T_312 = tail(_T_311, 1) @[FanCtrl.scala 134:31]
            r_reduction_cmd[_T_312] <= UInt<3>("h4") @[FanCtrl.scala 134:38]
          else :
            node _T_313 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:30]
            node _T_314 = add(_T_313, UInt<1>("h0")) @[FanCtrl.scala 136:36]
            node _T_315 = tail(_T_314, 1) @[FanCtrl.scala 136:36]
            node _T_316 = bits(_T_315, 1, 0)
            node _T_317 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:56]
            node _T_318 = add(_T_317, UInt<1>("h1")) @[FanCtrl.scala 136:62]
            node _T_319 = tail(_T_318, 1) @[FanCtrl.scala 136:62]
            node _T_320 = bits(_T_319, 1, 0)
            node _T_321 = eq(w_vn[_T_316], w_vn[_T_320]) @[FanCtrl.scala 136:43]
            node _T_322 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:29]
            node _T_323 = add(_T_322, UInt<1>("h1")) @[FanCtrl.scala 137:35]
            node _T_324 = tail(_T_323, 1) @[FanCtrl.scala 137:35]
            node _T_325 = bits(_T_324, 1, 0)
            node _T_326 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:57]
            node _T_327 = add(_T_326, UInt<2>("h2")) @[FanCtrl.scala 137:63]
            node _T_328 = tail(_T_327, 1) @[FanCtrl.scala 137:63]
            node _T_329 = bits(_T_328, 1, 0)
            node _T_330 = neq(w_vn[_T_325], w_vn[_T_329]) @[FanCtrl.scala 137:43]
            node _T_331 = and(_T_321, _T_330) @[FanCtrl.scala 136:71]
            when _T_331 : @[FanCtrl.scala 137:72]
              node _T_332 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 139:31]
              node _T_333 = tail(_T_332, 1) @[FanCtrl.scala 139:31]
              r_reduction_cmd[_T_333] <= UInt<2>("h3") @[FanCtrl.scala 139:38]
            else :
              node _T_334 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 141:30]
              node _T_335 = tail(_T_334, 1) @[FanCtrl.scala 141:30]
              r_reduction_cmd[_T_335] <= UInt<1>("h0") @[FanCtrl.scala 141:36]
      else :
        node _T_336 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 144:29]
        node _T_337 = tail(_T_336, 1) @[FanCtrl.scala 144:29]
        r_reduction_add[_T_337] <= UInt<1>("h0") @[FanCtrl.scala 144:36]
        node _T_338 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 145:30]
        node _T_339 = tail(_T_338, 1) @[FanCtrl.scala 145:30]
        r_reduction_cmd[_T_339] <= UInt<1>("h0") @[FanCtrl.scala 145:37]
    wire _WIRE : UInt<1>[8] @[FanCtrl.scala 157:30]
    _WIRE[0] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[1] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[2] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[3] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[4] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[5] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[6] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[7] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    r_add_lvl_0Reg <= _WIRE @[FanCtrl.scala 157:20]
    wire _WIRE_1 : UInt<1>[5] @[FanCtrl.scala 168:30]
    _WIRE_1[0] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[1] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[2] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[3] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[4] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    r_add_lvl_1Reg <= _WIRE_1 @[FanCtrl.scala 168:20]
    wire _WIRE_2 : UInt<3>[8] @[FanCtrl.scala 185:30]
    _WIRE_2[0] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[1] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[2] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[3] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[4] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[5] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[6] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[7] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    r_cmd_lvl_0Reg <= _WIRE_2 @[FanCtrl.scala 185:20]
    wire _WIRE_3 : UInt<3>[5] @[FanCtrl.scala 199:30]
    _WIRE_3[0] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[1] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[2] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[3] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[4] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    r_cmd_lvl_1Reg <= _WIRE_3 @[FanCtrl.scala 199:20]
    node _T_340 = eq(io.i_stationary, UInt<1>("h0")) @[FanCtrl.scala 213:26]
    node _T_341 = eq(io.i_data_valid, UInt<1>("h1")) @[FanCtrl.scala 213:53]
    node _T_342 = and(_T_340, _T_341) @[FanCtrl.scala 213:34]
    when _T_342 : @[FanCtrl.scala 213:62]
      r_valid[0] <= UInt<1>("h1") @[FanCtrl.scala 214:18]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanCtrl.scala 216:18]
    r_valid[1] <= r_valid[0] @[FanCtrl.scala 222:24]
    r_valid[2] <= r_valid[1] @[FanCtrl.scala 222:24]
    r_valid[3] <= r_valid[2] @[FanCtrl.scala 222:24]
    r_valid[4] <= r_valid[3] @[FanCtrl.scala 222:24]
    io.o_reduction_valid <= r_valid[3] @[FanCtrl.scala 226:26]
    wire _WIRE_4 : UInt<1>[3] @[FanCtrl.scala 227:35]
    _WIRE_4[0] <= r_add_lvl_0Reg[6] @[FanCtrl.scala 227:35]
    _WIRE_4[1] <= r_add_lvl_0Reg[7] @[FanCtrl.scala 227:35]
    _WIRE_4[2] <= r_add_lvl_1Reg[4] @[FanCtrl.scala 227:35]
    io.o_reduction_add <= _WIRE_4 @[FanCtrl.scala 227:24]
    wire _WIRE_5 : UInt<3>[3] @[FanCtrl.scala 236:34]
    _WIRE_5[0] <= r_cmd_lvl_0Reg[6] @[FanCtrl.scala 236:34]
    _WIRE_5[1] <= r_cmd_lvl_0Reg[7] @[FanCtrl.scala 236:34]
    _WIRE_5[2] <= r_cmd_lvl_1Reg[4] @[FanCtrl.scala 236:34]
    io.o_reduction_cmd <= _WIRE_5 @[FanCtrl.scala 236:24]

  module Benes :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data_bus2 : UInt<16>[4], flip i_data_bus1 : UInt<16>[4], flip i_mux_bus : UInt<4>[4], o_dist_bus1 : UInt<16>[4], o_dist_bus2 : UInt<16>[4]}

    io.o_dist_bus1 <= io.i_data_bus1 @[Benes.scala 16:18]
    wire _parse_array_WIRE : UInt<16>[5] @[Benes.scala 19:37]
    _parse_array_WIRE[0] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[1] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[2] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[3] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[4] <= UInt<16>("h0") @[Benes.scala 19:37]
    wire parse_array : UInt<16>[5]
    parse_array <= _parse_array_WIRE
    node _T = neq(io.i_data_bus2[1], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T : @[Benes.scala 56:39]
      node _T_1 = orr(io.i_mux_bus[1]) @[Benes.scala 58:31]
      when _T_1 : @[Benes.scala 58:35]
        node _T_2 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 60:36]
        when _T_2 : @[Benes.scala 60:61]
          node _parsedindexvalue_T = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_1 = tail(_parsedindexvalue_T, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_1 = rem(_parsedindexvalue_T_1, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_2 = eq(_parsedindexvalue_first_stage_T_1, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_3 = add(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_4 = tail(_parsedindexvalue_first_stage_T_3, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_5 = sub(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_6 = tail(_parsedindexvalue_first_stage_T_5, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_7 = mux(_parsedindexvalue_first_stage_T_2, _parsedindexvalue_first_stage_T_4, _parsedindexvalue_first_stage_T_6) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage = mux(_parsedindexvalue_first_stage_T, _parsedindexvalue_first_stage_T_7, _parsedindexvalue_T_1) @[Benes.scala 24:26]
          node _parsedindexvalue_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_1 = bits(_parsedindexvalue_boolArray_T, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_3 = bits(_parsedindexvalue_boolArray_T_2, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray[0] <= _parsedindexvalue_boolArray_T_1 @[Benes.scala 28:28]
          parsedindexvalue_boolArray[1] <= _parsedindexvalue_boolArray_T_3 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage : UInt
          parsedindexvalue_second_stage <= parsedindexvalue_first_stage
          node parsedindexvalue_calculation = rem(parsedindexvalue_second_stage, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_1 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_2 = and(_parsedindexvalue_nextIndex_T, _parsedindexvalue_nextIndex_T_1) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_3 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_4 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_5 = and(_parsedindexvalue_nextIndex_T_3, _parsedindexvalue_nextIndex_T_4) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_6 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_7 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_8 = and(_parsedindexvalue_nextIndex_T_6, _parsedindexvalue_nextIndex_T_7) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_9 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_10 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_11 = and(_parsedindexvalue_nextIndex_T_9, _parsedindexvalue_nextIndex_T_10) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_12 = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_13 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_14 = and(_parsedindexvalue_nextIndex_T_12, _parsedindexvalue_nextIndex_T_13) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_15 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_16 = tail(_parsedindexvalue_nextIndex_T_15, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_17 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_18 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_19 = and(_parsedindexvalue_nextIndex_T_17, _parsedindexvalue_nextIndex_T_18) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_20 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_21 = tail(_parsedindexvalue_nextIndex_T_20, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_22 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_23 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_24 = and(_parsedindexvalue_nextIndex_T_22, _parsedindexvalue_nextIndex_T_23) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_25 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_26 = tail(_parsedindexvalue_nextIndex_T_25, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_27 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_28 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_29 = and(_parsedindexvalue_nextIndex_T_27, _parsedindexvalue_nextIndex_T_28) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_30 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_31 = tail(_parsedindexvalue_nextIndex_T_30, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_32 = mux(_parsedindexvalue_nextIndex_T_29, _parsedindexvalue_nextIndex_T_31, parsedindexvalue_second_stage) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_33 = mux(_parsedindexvalue_nextIndex_T_24, _parsedindexvalue_nextIndex_T_26, _parsedindexvalue_nextIndex_T_32) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_34 = mux(_parsedindexvalue_nextIndex_T_19, _parsedindexvalue_nextIndex_T_21, _parsedindexvalue_nextIndex_T_33) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_35 = mux(_parsedindexvalue_nextIndex_T_14, _parsedindexvalue_nextIndex_T_16, _parsedindexvalue_nextIndex_T_34) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_36 = mux(_parsedindexvalue_nextIndex_T_11, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_35) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_37 = mux(_parsedindexvalue_nextIndex_T_8, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_36) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_38 = mux(_parsedindexvalue_nextIndex_T_5, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_37) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex = mux(_parsedindexvalue_nextIndex_T_2, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_38) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_1 = rem(parsedindexvalue_nextIndex, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_39 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_40 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_41 = and(_parsedindexvalue_nextIndex_T_39, _parsedindexvalue_nextIndex_T_40) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_42 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_43 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_44 = and(_parsedindexvalue_nextIndex_T_42, _parsedindexvalue_nextIndex_T_43) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_45 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_46 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_47 = and(_parsedindexvalue_nextIndex_T_45, _parsedindexvalue_nextIndex_T_46) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_48 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_49 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_50 = and(_parsedindexvalue_nextIndex_T_48, _parsedindexvalue_nextIndex_T_49) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_51 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_52 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_53 = and(_parsedindexvalue_nextIndex_T_51, _parsedindexvalue_nextIndex_T_52) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_54 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_55 = tail(_parsedindexvalue_nextIndex_T_54, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_56 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_57 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_58 = and(_parsedindexvalue_nextIndex_T_56, _parsedindexvalue_nextIndex_T_57) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_59 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_60 = tail(_parsedindexvalue_nextIndex_T_59, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_61 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_62 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_63 = and(_parsedindexvalue_nextIndex_T_61, _parsedindexvalue_nextIndex_T_62) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_64 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_65 = tail(_parsedindexvalue_nextIndex_T_64, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_66 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_67 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_68 = and(_parsedindexvalue_nextIndex_T_66, _parsedindexvalue_nextIndex_T_67) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_69 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_70 = tail(_parsedindexvalue_nextIndex_T_69, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_71 = mux(_parsedindexvalue_nextIndex_T_68, _parsedindexvalue_nextIndex_T_70, parsedindexvalue_nextIndex) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_72 = mux(_parsedindexvalue_nextIndex_T_63, _parsedindexvalue_nextIndex_T_65, _parsedindexvalue_nextIndex_T_71) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_73 = mux(_parsedindexvalue_nextIndex_T_58, _parsedindexvalue_nextIndex_T_60, _parsedindexvalue_nextIndex_T_72) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_74 = mux(_parsedindexvalue_nextIndex_T_53, _parsedindexvalue_nextIndex_T_55, _parsedindexvalue_nextIndex_T_73) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_75 = mux(_parsedindexvalue_nextIndex_T_50, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_74) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_76 = mux(_parsedindexvalue_nextIndex_T_47, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_75) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_77 = mux(_parsedindexvalue_nextIndex_T_44, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_76) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_1 = mux(_parsedindexvalue_nextIndex_T_41, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_77) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_1 = rem(parsedindexvalue_nextIndex_1, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_2 = eq(_parsedindexvalue_third_stage_T_1, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_3 = add(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_4 = tail(_parsedindexvalue_third_stage_T_3, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_5 = sub(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_6 = tail(_parsedindexvalue_third_stage_T_5, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_7 = mux(_parsedindexvalue_third_stage_T_2, _parsedindexvalue_third_stage_T_4, _parsedindexvalue_third_stage_T_6) @[Benes.scala 48:47]
          node parsedindexvalue = mux(_parsedindexvalue_third_stage_T, _parsedindexvalue_third_stage_T_7, parsedindexvalue_nextIndex_1) @[Benes.scala 48:24]
          node _T_3 = or(parsedindexvalue, UInt<3>("h0"))
          node _T_4 = bits(_T_3, 2, 0)
          parse_array[_T_4] <= io.i_data_bus2[1] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_8 = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_9 = rem(UInt<1>("h1"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_10 = eq(_parsedindexvalue_first_stage_T_9, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_11 = add(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_12 = tail(_parsedindexvalue_first_stage_T_11, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_13 = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_14 = tail(_parsedindexvalue_first_stage_T_13, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_15 = mux(_parsedindexvalue_first_stage_T_10, _parsedindexvalue_first_stage_T_12, _parsedindexvalue_first_stage_T_14) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_1 = mux(_parsedindexvalue_first_stage_T_8, _parsedindexvalue_first_stage_T_15, UInt<1>("h1")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_3 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_4 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_5 = bits(_parsedindexvalue_boolArray_T_4, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_6 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_7 = bits(_parsedindexvalue_boolArray_T_6, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_1 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[0] <= _parsedindexvalue_boolArray_T_5 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[1] <= _parsedindexvalue_boolArray_T_7 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_1 : UInt
          parsedindexvalue_second_stage_1 <= parsedindexvalue_first_stage_1
          node parsedindexvalue_calculation_2 = rem(parsedindexvalue_second_stage_1, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_78 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_79 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_80 = and(_parsedindexvalue_nextIndex_T_78, _parsedindexvalue_nextIndex_T_79) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_81 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_82 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_83 = and(_parsedindexvalue_nextIndex_T_81, _parsedindexvalue_nextIndex_T_82) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_84 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_85 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_86 = and(_parsedindexvalue_nextIndex_T_84, _parsedindexvalue_nextIndex_T_85) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_87 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_88 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_89 = and(_parsedindexvalue_nextIndex_T_87, _parsedindexvalue_nextIndex_T_88) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_90 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_91 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_92 = and(_parsedindexvalue_nextIndex_T_90, _parsedindexvalue_nextIndex_T_91) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_93 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_94 = tail(_parsedindexvalue_nextIndex_T_93, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_95 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_96 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_97 = and(_parsedindexvalue_nextIndex_T_95, _parsedindexvalue_nextIndex_T_96) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_98 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_99 = tail(_parsedindexvalue_nextIndex_T_98, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_100 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_101 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_102 = and(_parsedindexvalue_nextIndex_T_100, _parsedindexvalue_nextIndex_T_101) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_103 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_104 = tail(_parsedindexvalue_nextIndex_T_103, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_105 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_106 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_107 = and(_parsedindexvalue_nextIndex_T_105, _parsedindexvalue_nextIndex_T_106) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_108 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_109 = tail(_parsedindexvalue_nextIndex_T_108, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_110 = mux(_parsedindexvalue_nextIndex_T_107, _parsedindexvalue_nextIndex_T_109, parsedindexvalue_second_stage_1) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_111 = mux(_parsedindexvalue_nextIndex_T_102, _parsedindexvalue_nextIndex_T_104, _parsedindexvalue_nextIndex_T_110) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_112 = mux(_parsedindexvalue_nextIndex_T_97, _parsedindexvalue_nextIndex_T_99, _parsedindexvalue_nextIndex_T_111) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_113 = mux(_parsedindexvalue_nextIndex_T_92, _parsedindexvalue_nextIndex_T_94, _parsedindexvalue_nextIndex_T_112) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_114 = mux(_parsedindexvalue_nextIndex_T_89, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_113) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_115 = mux(_parsedindexvalue_nextIndex_T_86, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_114) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_116 = mux(_parsedindexvalue_nextIndex_T_83, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_115) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_2 = mux(_parsedindexvalue_nextIndex_T_80, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_116) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_3 = rem(parsedindexvalue_nextIndex_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_117 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_118 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_119 = and(_parsedindexvalue_nextIndex_T_117, _parsedindexvalue_nextIndex_T_118) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_120 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_121 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_122 = and(_parsedindexvalue_nextIndex_T_120, _parsedindexvalue_nextIndex_T_121) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_123 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_124 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_125 = and(_parsedindexvalue_nextIndex_T_123, _parsedindexvalue_nextIndex_T_124) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_126 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_127 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_128 = and(_parsedindexvalue_nextIndex_T_126, _parsedindexvalue_nextIndex_T_127) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_129 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_130 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_131 = and(_parsedindexvalue_nextIndex_T_129, _parsedindexvalue_nextIndex_T_130) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_132 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_133 = tail(_parsedindexvalue_nextIndex_T_132, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_134 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_135 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_136 = and(_parsedindexvalue_nextIndex_T_134, _parsedindexvalue_nextIndex_T_135) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_137 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_138 = tail(_parsedindexvalue_nextIndex_T_137, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_139 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_140 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_141 = and(_parsedindexvalue_nextIndex_T_139, _parsedindexvalue_nextIndex_T_140) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_142 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_143 = tail(_parsedindexvalue_nextIndex_T_142, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_144 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_145 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_146 = and(_parsedindexvalue_nextIndex_T_144, _parsedindexvalue_nextIndex_T_145) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_147 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_148 = tail(_parsedindexvalue_nextIndex_T_147, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_149 = mux(_parsedindexvalue_nextIndex_T_146, _parsedindexvalue_nextIndex_T_148, parsedindexvalue_nextIndex_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_150 = mux(_parsedindexvalue_nextIndex_T_141, _parsedindexvalue_nextIndex_T_143, _parsedindexvalue_nextIndex_T_149) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_151 = mux(_parsedindexvalue_nextIndex_T_136, _parsedindexvalue_nextIndex_T_138, _parsedindexvalue_nextIndex_T_150) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_152 = mux(_parsedindexvalue_nextIndex_T_131, _parsedindexvalue_nextIndex_T_133, _parsedindexvalue_nextIndex_T_151) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_153 = mux(_parsedindexvalue_nextIndex_T_128, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_152) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_154 = mux(_parsedindexvalue_nextIndex_T_125, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_153) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_155 = mux(_parsedindexvalue_nextIndex_T_122, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_154) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_3 = mux(_parsedindexvalue_nextIndex_T_119, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_155) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_8 = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_9 = rem(parsedindexvalue_nextIndex_3, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_10 = eq(_parsedindexvalue_third_stage_T_9, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_11 = add(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_12 = tail(_parsedindexvalue_third_stage_T_11, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_13 = sub(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_14 = tail(_parsedindexvalue_third_stage_T_13, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_15 = mux(_parsedindexvalue_third_stage_T_10, _parsedindexvalue_third_stage_T_12, _parsedindexvalue_third_stage_T_14) @[Benes.scala 48:47]
          node parsedindexvalue_1 = mux(_parsedindexvalue_third_stage_T_8, _parsedindexvalue_third_stage_T_15, parsedindexvalue_nextIndex_3) @[Benes.scala 48:24]
          node _T_5 = or(parsedindexvalue_1, UInt<3>("h0"))
          node _T_6 = bits(_T_5, 2, 0)
          parse_array[_T_6] <= io.i_data_bus2[1] @[Benes.scala 67:47]
      else :
        node _T_7 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 72:35]
        when _T_7 : @[Benes.scala 72:60]
          parse_array[1] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[1] <= io.i_data_bus2[1] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_8 = neq(io.i_data_bus2[2], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_8 : @[Benes.scala 56:39]
      node _T_9 = orr(io.i_mux_bus[2]) @[Benes.scala 58:31]
      when _T_9 : @[Benes.scala 58:35]
        node _T_10 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 60:36]
        when _T_10 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_4 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_5 = tail(_parsedindexvalue_T_4, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_16 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_17 = rem(_parsedindexvalue_T_5, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_18 = eq(_parsedindexvalue_first_stage_T_17, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_19 = add(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_20 = tail(_parsedindexvalue_first_stage_T_19, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_21 = sub(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_22 = tail(_parsedindexvalue_first_stage_T_21, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_23 = mux(_parsedindexvalue_first_stage_T_18, _parsedindexvalue_first_stage_T_20, _parsedindexvalue_first_stage_T_22) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_2 = mux(_parsedindexvalue_first_stage_T_16, _parsedindexvalue_first_stage_T_23, _parsedindexvalue_T_5) @[Benes.scala 24:26]
          node _parsedindexvalue_T_6 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_8 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_9 = bits(_parsedindexvalue_boolArray_T_8, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_10 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_11 = bits(_parsedindexvalue_boolArray_T_10, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_2 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[0] <= _parsedindexvalue_boolArray_T_9 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[1] <= _parsedindexvalue_boolArray_T_11 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_2 : UInt
          parsedindexvalue_second_stage_2 <= parsedindexvalue_first_stage_2
          node parsedindexvalue_calculation_4 = rem(parsedindexvalue_second_stage_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_156 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_157 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_158 = and(_parsedindexvalue_nextIndex_T_156, _parsedindexvalue_nextIndex_T_157) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_159 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_160 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_161 = and(_parsedindexvalue_nextIndex_T_159, _parsedindexvalue_nextIndex_T_160) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_162 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_163 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_164 = and(_parsedindexvalue_nextIndex_T_162, _parsedindexvalue_nextIndex_T_163) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_165 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_166 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_167 = and(_parsedindexvalue_nextIndex_T_165, _parsedindexvalue_nextIndex_T_166) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_168 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_169 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_170 = and(_parsedindexvalue_nextIndex_T_168, _parsedindexvalue_nextIndex_T_169) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_171 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_172 = tail(_parsedindexvalue_nextIndex_T_171, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_173 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_174 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_175 = and(_parsedindexvalue_nextIndex_T_173, _parsedindexvalue_nextIndex_T_174) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_176 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_177 = tail(_parsedindexvalue_nextIndex_T_176, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_178 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_179 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_180 = and(_parsedindexvalue_nextIndex_T_178, _parsedindexvalue_nextIndex_T_179) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_181 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_182 = tail(_parsedindexvalue_nextIndex_T_181, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_183 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_184 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_185 = and(_parsedindexvalue_nextIndex_T_183, _parsedindexvalue_nextIndex_T_184) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_186 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_187 = tail(_parsedindexvalue_nextIndex_T_186, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_188 = mux(_parsedindexvalue_nextIndex_T_185, _parsedindexvalue_nextIndex_T_187, parsedindexvalue_second_stage_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_189 = mux(_parsedindexvalue_nextIndex_T_180, _parsedindexvalue_nextIndex_T_182, _parsedindexvalue_nextIndex_T_188) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_190 = mux(_parsedindexvalue_nextIndex_T_175, _parsedindexvalue_nextIndex_T_177, _parsedindexvalue_nextIndex_T_189) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_191 = mux(_parsedindexvalue_nextIndex_T_170, _parsedindexvalue_nextIndex_T_172, _parsedindexvalue_nextIndex_T_190) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_192 = mux(_parsedindexvalue_nextIndex_T_167, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_191) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_193 = mux(_parsedindexvalue_nextIndex_T_164, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_192) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_194 = mux(_parsedindexvalue_nextIndex_T_161, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_193) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_4 = mux(_parsedindexvalue_nextIndex_T_158, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_194) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_5 = rem(parsedindexvalue_nextIndex_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_195 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_196 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_197 = and(_parsedindexvalue_nextIndex_T_195, _parsedindexvalue_nextIndex_T_196) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_198 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_199 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_200 = and(_parsedindexvalue_nextIndex_T_198, _parsedindexvalue_nextIndex_T_199) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_201 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_202 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_203 = and(_parsedindexvalue_nextIndex_T_201, _parsedindexvalue_nextIndex_T_202) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_204 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_205 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_206 = and(_parsedindexvalue_nextIndex_T_204, _parsedindexvalue_nextIndex_T_205) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_207 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_208 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_209 = and(_parsedindexvalue_nextIndex_T_207, _parsedindexvalue_nextIndex_T_208) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_210 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_211 = tail(_parsedindexvalue_nextIndex_T_210, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_212 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_213 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_214 = and(_parsedindexvalue_nextIndex_T_212, _parsedindexvalue_nextIndex_T_213) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_215 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_216 = tail(_parsedindexvalue_nextIndex_T_215, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_217 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_218 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_219 = and(_parsedindexvalue_nextIndex_T_217, _parsedindexvalue_nextIndex_T_218) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_220 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_221 = tail(_parsedindexvalue_nextIndex_T_220, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_222 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_223 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_224 = and(_parsedindexvalue_nextIndex_T_222, _parsedindexvalue_nextIndex_T_223) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_225 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_226 = tail(_parsedindexvalue_nextIndex_T_225, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_227 = mux(_parsedindexvalue_nextIndex_T_224, _parsedindexvalue_nextIndex_T_226, parsedindexvalue_nextIndex_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_228 = mux(_parsedindexvalue_nextIndex_T_219, _parsedindexvalue_nextIndex_T_221, _parsedindexvalue_nextIndex_T_227) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_229 = mux(_parsedindexvalue_nextIndex_T_214, _parsedindexvalue_nextIndex_T_216, _parsedindexvalue_nextIndex_T_228) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_230 = mux(_parsedindexvalue_nextIndex_T_209, _parsedindexvalue_nextIndex_T_211, _parsedindexvalue_nextIndex_T_229) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_231 = mux(_parsedindexvalue_nextIndex_T_206, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_230) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_232 = mux(_parsedindexvalue_nextIndex_T_203, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_231) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_233 = mux(_parsedindexvalue_nextIndex_T_200, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_232) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_5 = mux(_parsedindexvalue_nextIndex_T_197, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_233) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_16 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_17 = rem(parsedindexvalue_nextIndex_5, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_18 = eq(_parsedindexvalue_third_stage_T_17, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_19 = add(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_20 = tail(_parsedindexvalue_third_stage_T_19, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_21 = sub(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_22 = tail(_parsedindexvalue_third_stage_T_21, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_23 = mux(_parsedindexvalue_third_stage_T_18, _parsedindexvalue_third_stage_T_20, _parsedindexvalue_third_stage_T_22) @[Benes.scala 48:47]
          node parsedindexvalue_2 = mux(_parsedindexvalue_third_stage_T_16, _parsedindexvalue_third_stage_T_23, parsedindexvalue_nextIndex_5) @[Benes.scala 48:24]
          node _T_11 = or(parsedindexvalue_2, UInt<3>("h0"))
          node _T_12 = bits(_T_11, 2, 0)
          parse_array[_T_12] <= io.i_data_bus2[2] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_24 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_25 = rem(UInt<2>("h2"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_26 = eq(_parsedindexvalue_first_stage_T_25, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_27 = add(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_28 = tail(_parsedindexvalue_first_stage_T_27, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_29 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_30 = tail(_parsedindexvalue_first_stage_T_29, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_31 = mux(_parsedindexvalue_first_stage_T_26, _parsedindexvalue_first_stage_T_28, _parsedindexvalue_first_stage_T_30) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_3 = mux(_parsedindexvalue_first_stage_T_24, _parsedindexvalue_first_stage_T_31, UInt<2>("h2")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_7 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_12 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_13 = bits(_parsedindexvalue_boolArray_T_12, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_14 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_15 = bits(_parsedindexvalue_boolArray_T_14, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_3 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[0] <= _parsedindexvalue_boolArray_T_13 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[1] <= _parsedindexvalue_boolArray_T_15 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_3 : UInt
          parsedindexvalue_second_stage_3 <= parsedindexvalue_first_stage_3
          node parsedindexvalue_calculation_6 = rem(parsedindexvalue_second_stage_3, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_234 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_235 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_236 = and(_parsedindexvalue_nextIndex_T_234, _parsedindexvalue_nextIndex_T_235) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_237 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_238 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_239 = and(_parsedindexvalue_nextIndex_T_237, _parsedindexvalue_nextIndex_T_238) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_240 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_241 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_242 = and(_parsedindexvalue_nextIndex_T_240, _parsedindexvalue_nextIndex_T_241) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_243 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_244 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_245 = and(_parsedindexvalue_nextIndex_T_243, _parsedindexvalue_nextIndex_T_244) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_246 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_247 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_248 = and(_parsedindexvalue_nextIndex_T_246, _parsedindexvalue_nextIndex_T_247) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_249 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_250 = tail(_parsedindexvalue_nextIndex_T_249, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_251 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_252 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_253 = and(_parsedindexvalue_nextIndex_T_251, _parsedindexvalue_nextIndex_T_252) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_254 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_255 = tail(_parsedindexvalue_nextIndex_T_254, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_256 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_257 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_258 = and(_parsedindexvalue_nextIndex_T_256, _parsedindexvalue_nextIndex_T_257) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_259 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_260 = tail(_parsedindexvalue_nextIndex_T_259, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_261 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_262 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_263 = and(_parsedindexvalue_nextIndex_T_261, _parsedindexvalue_nextIndex_T_262) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_264 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_265 = tail(_parsedindexvalue_nextIndex_T_264, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_266 = mux(_parsedindexvalue_nextIndex_T_263, _parsedindexvalue_nextIndex_T_265, parsedindexvalue_second_stage_3) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_267 = mux(_parsedindexvalue_nextIndex_T_258, _parsedindexvalue_nextIndex_T_260, _parsedindexvalue_nextIndex_T_266) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_268 = mux(_parsedindexvalue_nextIndex_T_253, _parsedindexvalue_nextIndex_T_255, _parsedindexvalue_nextIndex_T_267) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_269 = mux(_parsedindexvalue_nextIndex_T_248, _parsedindexvalue_nextIndex_T_250, _parsedindexvalue_nextIndex_T_268) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_270 = mux(_parsedindexvalue_nextIndex_T_245, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_269) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_271 = mux(_parsedindexvalue_nextIndex_T_242, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_270) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_272 = mux(_parsedindexvalue_nextIndex_T_239, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_271) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_6 = mux(_parsedindexvalue_nextIndex_T_236, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_272) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_7 = rem(parsedindexvalue_nextIndex_6, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_273 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_274 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_275 = and(_parsedindexvalue_nextIndex_T_273, _parsedindexvalue_nextIndex_T_274) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_276 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_277 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_278 = and(_parsedindexvalue_nextIndex_T_276, _parsedindexvalue_nextIndex_T_277) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_279 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_280 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_281 = and(_parsedindexvalue_nextIndex_T_279, _parsedindexvalue_nextIndex_T_280) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_282 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_283 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_284 = and(_parsedindexvalue_nextIndex_T_282, _parsedindexvalue_nextIndex_T_283) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_285 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_286 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_287 = and(_parsedindexvalue_nextIndex_T_285, _parsedindexvalue_nextIndex_T_286) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_288 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_289 = tail(_parsedindexvalue_nextIndex_T_288, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_290 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_291 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_292 = and(_parsedindexvalue_nextIndex_T_290, _parsedindexvalue_nextIndex_T_291) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_293 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_294 = tail(_parsedindexvalue_nextIndex_T_293, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_295 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_296 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_297 = and(_parsedindexvalue_nextIndex_T_295, _parsedindexvalue_nextIndex_T_296) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_298 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_299 = tail(_parsedindexvalue_nextIndex_T_298, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_300 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_301 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_302 = and(_parsedindexvalue_nextIndex_T_300, _parsedindexvalue_nextIndex_T_301) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_303 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_304 = tail(_parsedindexvalue_nextIndex_T_303, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_305 = mux(_parsedindexvalue_nextIndex_T_302, _parsedindexvalue_nextIndex_T_304, parsedindexvalue_nextIndex_6) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_306 = mux(_parsedindexvalue_nextIndex_T_297, _parsedindexvalue_nextIndex_T_299, _parsedindexvalue_nextIndex_T_305) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_307 = mux(_parsedindexvalue_nextIndex_T_292, _parsedindexvalue_nextIndex_T_294, _parsedindexvalue_nextIndex_T_306) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_308 = mux(_parsedindexvalue_nextIndex_T_287, _parsedindexvalue_nextIndex_T_289, _parsedindexvalue_nextIndex_T_307) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_309 = mux(_parsedindexvalue_nextIndex_T_284, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_308) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_310 = mux(_parsedindexvalue_nextIndex_T_281, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_309) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_311 = mux(_parsedindexvalue_nextIndex_T_278, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_310) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_7 = mux(_parsedindexvalue_nextIndex_T_275, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_311) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_24 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_25 = rem(parsedindexvalue_nextIndex_7, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_26 = eq(_parsedindexvalue_third_stage_T_25, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_27 = add(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_28 = tail(_parsedindexvalue_third_stage_T_27, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_29 = sub(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_30 = tail(_parsedindexvalue_third_stage_T_29, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_31 = mux(_parsedindexvalue_third_stage_T_26, _parsedindexvalue_third_stage_T_28, _parsedindexvalue_third_stage_T_30) @[Benes.scala 48:47]
          node parsedindexvalue_3 = mux(_parsedindexvalue_third_stage_T_24, _parsedindexvalue_third_stage_T_31, parsedindexvalue_nextIndex_7) @[Benes.scala 48:24]
          node _T_13 = or(parsedindexvalue_3, UInt<3>("h0"))
          node _T_14 = bits(_T_13, 2, 0)
          parse_array[_T_14] <= io.i_data_bus2[2] @[Benes.scala 67:47]
      else :
        node _T_15 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 72:35]
        when _T_15 : @[Benes.scala 72:60]
          parse_array[2] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[2] <= io.i_data_bus2[2] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_16 = neq(io.i_data_bus2[3], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_16 : @[Benes.scala 56:39]
      node _T_17 = orr(io.i_mux_bus[3]) @[Benes.scala 58:31]
      when _T_17 : @[Benes.scala 58:35]
        node _T_18 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 60:36]
        when _T_18 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_8 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_9 = tail(_parsedindexvalue_T_8, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_32 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_33 = rem(_parsedindexvalue_T_9, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_34 = eq(_parsedindexvalue_first_stage_T_33, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_35 = add(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_36 = tail(_parsedindexvalue_first_stage_T_35, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_37 = sub(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_38 = tail(_parsedindexvalue_first_stage_T_37, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_39 = mux(_parsedindexvalue_first_stage_T_34, _parsedindexvalue_first_stage_T_36, _parsedindexvalue_first_stage_T_38) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_4 = mux(_parsedindexvalue_first_stage_T_32, _parsedindexvalue_first_stage_T_39, _parsedindexvalue_T_9) @[Benes.scala 24:26]
          node _parsedindexvalue_T_10 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_16 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_17 = bits(_parsedindexvalue_boolArray_T_16, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_18 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_19 = bits(_parsedindexvalue_boolArray_T_18, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_4 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[0] <= _parsedindexvalue_boolArray_T_17 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[1] <= _parsedindexvalue_boolArray_T_19 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_4 : UInt
          parsedindexvalue_second_stage_4 <= parsedindexvalue_first_stage_4
          node parsedindexvalue_calculation_8 = rem(parsedindexvalue_second_stage_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_312 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_313 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_314 = and(_parsedindexvalue_nextIndex_T_312, _parsedindexvalue_nextIndex_T_313) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_315 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_316 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_317 = and(_parsedindexvalue_nextIndex_T_315, _parsedindexvalue_nextIndex_T_316) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_318 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_319 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_320 = and(_parsedindexvalue_nextIndex_T_318, _parsedindexvalue_nextIndex_T_319) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_321 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_322 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_323 = and(_parsedindexvalue_nextIndex_T_321, _parsedindexvalue_nextIndex_T_322) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_324 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_325 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_326 = and(_parsedindexvalue_nextIndex_T_324, _parsedindexvalue_nextIndex_T_325) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_327 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_328 = tail(_parsedindexvalue_nextIndex_T_327, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_329 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_330 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_331 = and(_parsedindexvalue_nextIndex_T_329, _parsedindexvalue_nextIndex_T_330) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_332 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_333 = tail(_parsedindexvalue_nextIndex_T_332, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_334 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_335 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_336 = and(_parsedindexvalue_nextIndex_T_334, _parsedindexvalue_nextIndex_T_335) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_337 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_338 = tail(_parsedindexvalue_nextIndex_T_337, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_339 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_340 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_341 = and(_parsedindexvalue_nextIndex_T_339, _parsedindexvalue_nextIndex_T_340) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_342 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_343 = tail(_parsedindexvalue_nextIndex_T_342, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_344 = mux(_parsedindexvalue_nextIndex_T_341, _parsedindexvalue_nextIndex_T_343, parsedindexvalue_second_stage_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_345 = mux(_parsedindexvalue_nextIndex_T_336, _parsedindexvalue_nextIndex_T_338, _parsedindexvalue_nextIndex_T_344) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_346 = mux(_parsedindexvalue_nextIndex_T_331, _parsedindexvalue_nextIndex_T_333, _parsedindexvalue_nextIndex_T_345) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_347 = mux(_parsedindexvalue_nextIndex_T_326, _parsedindexvalue_nextIndex_T_328, _parsedindexvalue_nextIndex_T_346) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_348 = mux(_parsedindexvalue_nextIndex_T_323, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_347) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_349 = mux(_parsedindexvalue_nextIndex_T_320, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_348) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_350 = mux(_parsedindexvalue_nextIndex_T_317, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_349) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_8 = mux(_parsedindexvalue_nextIndex_T_314, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_350) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_9 = rem(parsedindexvalue_nextIndex_8, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_351 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_352 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_353 = and(_parsedindexvalue_nextIndex_T_351, _parsedindexvalue_nextIndex_T_352) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_354 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_355 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_356 = and(_parsedindexvalue_nextIndex_T_354, _parsedindexvalue_nextIndex_T_355) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_357 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_358 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_359 = and(_parsedindexvalue_nextIndex_T_357, _parsedindexvalue_nextIndex_T_358) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_360 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_361 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_362 = and(_parsedindexvalue_nextIndex_T_360, _parsedindexvalue_nextIndex_T_361) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_363 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_364 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_365 = and(_parsedindexvalue_nextIndex_T_363, _parsedindexvalue_nextIndex_T_364) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_366 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_367 = tail(_parsedindexvalue_nextIndex_T_366, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_368 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_369 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_370 = and(_parsedindexvalue_nextIndex_T_368, _parsedindexvalue_nextIndex_T_369) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_371 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_372 = tail(_parsedindexvalue_nextIndex_T_371, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_373 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_374 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_375 = and(_parsedindexvalue_nextIndex_T_373, _parsedindexvalue_nextIndex_T_374) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_376 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_377 = tail(_parsedindexvalue_nextIndex_T_376, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_378 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_379 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_380 = and(_parsedindexvalue_nextIndex_T_378, _parsedindexvalue_nextIndex_T_379) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_381 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_382 = tail(_parsedindexvalue_nextIndex_T_381, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_383 = mux(_parsedindexvalue_nextIndex_T_380, _parsedindexvalue_nextIndex_T_382, parsedindexvalue_nextIndex_8) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_384 = mux(_parsedindexvalue_nextIndex_T_375, _parsedindexvalue_nextIndex_T_377, _parsedindexvalue_nextIndex_T_383) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_385 = mux(_parsedindexvalue_nextIndex_T_370, _parsedindexvalue_nextIndex_T_372, _parsedindexvalue_nextIndex_T_384) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_386 = mux(_parsedindexvalue_nextIndex_T_365, _parsedindexvalue_nextIndex_T_367, _parsedindexvalue_nextIndex_T_385) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_387 = mux(_parsedindexvalue_nextIndex_T_362, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_386) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_388 = mux(_parsedindexvalue_nextIndex_T_359, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_387) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_389 = mux(_parsedindexvalue_nextIndex_T_356, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_388) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_9 = mux(_parsedindexvalue_nextIndex_T_353, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_389) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_32 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_33 = rem(parsedindexvalue_nextIndex_9, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_34 = eq(_parsedindexvalue_third_stage_T_33, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_35 = add(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_36 = tail(_parsedindexvalue_third_stage_T_35, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_37 = sub(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_38 = tail(_parsedindexvalue_third_stage_T_37, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_39 = mux(_parsedindexvalue_third_stage_T_34, _parsedindexvalue_third_stage_T_36, _parsedindexvalue_third_stage_T_38) @[Benes.scala 48:47]
          node parsedindexvalue_4 = mux(_parsedindexvalue_third_stage_T_32, _parsedindexvalue_third_stage_T_39, parsedindexvalue_nextIndex_9) @[Benes.scala 48:24]
          node _T_19 = or(parsedindexvalue_4, UInt<3>("h0"))
          node _T_20 = bits(_T_19, 2, 0)
          parse_array[_T_20] <= io.i_data_bus2[3] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_40 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_41 = rem(UInt<2>("h3"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_42 = eq(_parsedindexvalue_first_stage_T_41, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_43 = add(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_44 = tail(_parsedindexvalue_first_stage_T_43, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_45 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_46 = tail(_parsedindexvalue_first_stage_T_45, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_47 = mux(_parsedindexvalue_first_stage_T_42, _parsedindexvalue_first_stage_T_44, _parsedindexvalue_first_stage_T_46) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_5 = mux(_parsedindexvalue_first_stage_T_40, _parsedindexvalue_first_stage_T_47, UInt<2>("h3")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_11 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_20 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_21 = bits(_parsedindexvalue_boolArray_T_20, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_22 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_23 = bits(_parsedindexvalue_boolArray_T_22, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_5 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[0] <= _parsedindexvalue_boolArray_T_21 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[1] <= _parsedindexvalue_boolArray_T_23 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_5 : UInt
          parsedindexvalue_second_stage_5 <= parsedindexvalue_first_stage_5
          node parsedindexvalue_calculation_10 = rem(parsedindexvalue_second_stage_5, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_390 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_391 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_392 = and(_parsedindexvalue_nextIndex_T_390, _parsedindexvalue_nextIndex_T_391) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_393 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_394 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_395 = and(_parsedindexvalue_nextIndex_T_393, _parsedindexvalue_nextIndex_T_394) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_396 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_397 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_398 = and(_parsedindexvalue_nextIndex_T_396, _parsedindexvalue_nextIndex_T_397) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_399 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_400 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_401 = and(_parsedindexvalue_nextIndex_T_399, _parsedindexvalue_nextIndex_T_400) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_402 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_403 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_404 = and(_parsedindexvalue_nextIndex_T_402, _parsedindexvalue_nextIndex_T_403) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_405 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_406 = tail(_parsedindexvalue_nextIndex_T_405, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_407 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_408 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_409 = and(_parsedindexvalue_nextIndex_T_407, _parsedindexvalue_nextIndex_T_408) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_410 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_411 = tail(_parsedindexvalue_nextIndex_T_410, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_412 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_413 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_414 = and(_parsedindexvalue_nextIndex_T_412, _parsedindexvalue_nextIndex_T_413) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_415 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_416 = tail(_parsedindexvalue_nextIndex_T_415, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_417 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_418 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_419 = and(_parsedindexvalue_nextIndex_T_417, _parsedindexvalue_nextIndex_T_418) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_420 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_421 = tail(_parsedindexvalue_nextIndex_T_420, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_422 = mux(_parsedindexvalue_nextIndex_T_419, _parsedindexvalue_nextIndex_T_421, parsedindexvalue_second_stage_5) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_423 = mux(_parsedindexvalue_nextIndex_T_414, _parsedindexvalue_nextIndex_T_416, _parsedindexvalue_nextIndex_T_422) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_424 = mux(_parsedindexvalue_nextIndex_T_409, _parsedindexvalue_nextIndex_T_411, _parsedindexvalue_nextIndex_T_423) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_425 = mux(_parsedindexvalue_nextIndex_T_404, _parsedindexvalue_nextIndex_T_406, _parsedindexvalue_nextIndex_T_424) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_426 = mux(_parsedindexvalue_nextIndex_T_401, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_425) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_427 = mux(_parsedindexvalue_nextIndex_T_398, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_426) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_428 = mux(_parsedindexvalue_nextIndex_T_395, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_427) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_10 = mux(_parsedindexvalue_nextIndex_T_392, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_428) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_11 = rem(parsedindexvalue_nextIndex_10, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_429 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_430 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_431 = and(_parsedindexvalue_nextIndex_T_429, _parsedindexvalue_nextIndex_T_430) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_432 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_433 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_434 = and(_parsedindexvalue_nextIndex_T_432, _parsedindexvalue_nextIndex_T_433) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_435 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_436 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_437 = and(_parsedindexvalue_nextIndex_T_435, _parsedindexvalue_nextIndex_T_436) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_438 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_439 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_440 = and(_parsedindexvalue_nextIndex_T_438, _parsedindexvalue_nextIndex_T_439) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_441 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_442 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_443 = and(_parsedindexvalue_nextIndex_T_441, _parsedindexvalue_nextIndex_T_442) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_444 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_445 = tail(_parsedindexvalue_nextIndex_T_444, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_446 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_447 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_448 = and(_parsedindexvalue_nextIndex_T_446, _parsedindexvalue_nextIndex_T_447) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_449 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_450 = tail(_parsedindexvalue_nextIndex_T_449, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_451 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_452 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_453 = and(_parsedindexvalue_nextIndex_T_451, _parsedindexvalue_nextIndex_T_452) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_454 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_455 = tail(_parsedindexvalue_nextIndex_T_454, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_456 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_457 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_458 = and(_parsedindexvalue_nextIndex_T_456, _parsedindexvalue_nextIndex_T_457) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_459 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_460 = tail(_parsedindexvalue_nextIndex_T_459, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_461 = mux(_parsedindexvalue_nextIndex_T_458, _parsedindexvalue_nextIndex_T_460, parsedindexvalue_nextIndex_10) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_462 = mux(_parsedindexvalue_nextIndex_T_453, _parsedindexvalue_nextIndex_T_455, _parsedindexvalue_nextIndex_T_461) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_463 = mux(_parsedindexvalue_nextIndex_T_448, _parsedindexvalue_nextIndex_T_450, _parsedindexvalue_nextIndex_T_462) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_464 = mux(_parsedindexvalue_nextIndex_T_443, _parsedindexvalue_nextIndex_T_445, _parsedindexvalue_nextIndex_T_463) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_465 = mux(_parsedindexvalue_nextIndex_T_440, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_464) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_466 = mux(_parsedindexvalue_nextIndex_T_437, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_465) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_467 = mux(_parsedindexvalue_nextIndex_T_434, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_466) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_11 = mux(_parsedindexvalue_nextIndex_T_431, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_467) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_40 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_41 = rem(parsedindexvalue_nextIndex_11, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_42 = eq(_parsedindexvalue_third_stage_T_41, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_43 = add(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_44 = tail(_parsedindexvalue_third_stage_T_43, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_45 = sub(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_46 = tail(_parsedindexvalue_third_stage_T_45, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_47 = mux(_parsedindexvalue_third_stage_T_42, _parsedindexvalue_third_stage_T_44, _parsedindexvalue_third_stage_T_46) @[Benes.scala 48:47]
          node parsedindexvalue_5 = mux(_parsedindexvalue_third_stage_T_40, _parsedindexvalue_third_stage_T_47, parsedindexvalue_nextIndex_11) @[Benes.scala 48:24]
          node _T_21 = or(parsedindexvalue_5, UInt<3>("h0"))
          node _T_22 = bits(_T_21, 2, 0)
          parse_array[_T_22] <= io.i_data_bus2[3] @[Benes.scala 67:47]
      else :
        node _T_23 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 72:35]
        when _T_23 : @[Benes.scala 72:60]
          parse_array[3] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[3] <= io.i_data_bus2[3] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_24 = neq(io.i_data_bus2[0], UInt<1>("h0")) @[Benes.scala 91:27]
    when _T_24 : @[Benes.scala 91:35]
      node _parsedindexvalue_first_stage_T_48 = bits(io.i_mux_bus[0], 0, 0) @[Benes.scala 24:32]
      node _parsedindexvalue_first_stage_T_49 = rem(UInt<1>("h0"), UInt<2>("h2")) @[Benes.scala 24:52]
      node _parsedindexvalue_first_stage_T_50 = eq(_parsedindexvalue_first_stage_T_49, UInt<1>("h0")) @[Benes.scala 24:58]
      node _parsedindexvalue_first_stage_T_51 = add(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_52 = tail(_parsedindexvalue_first_stage_T_51, 1) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_53 = sub(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_54 = tail(_parsedindexvalue_first_stage_T_53, 1) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_55 = mux(_parsedindexvalue_first_stage_T_50, _parsedindexvalue_first_stage_T_52, _parsedindexvalue_first_stage_T_54) @[Benes.scala 24:40]
      node parsedindexvalue_first_stage_6 = mux(_parsedindexvalue_first_stage_T_48, _parsedindexvalue_first_stage_T_55, UInt<1>("h0")) @[Benes.scala 24:26]
      node _parsedindexvalue_T_12 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 27:31]
      node _parsedindexvalue_boolArray_T_24 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_25 = bits(_parsedindexvalue_boolArray_T_24, 0, 0) @[Benes.scala 28:92]
      node _parsedindexvalue_boolArray_T_26 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_27 = bits(_parsedindexvalue_boolArray_T_26, 1, 1) @[Benes.scala 28:92]
      wire parsedindexvalue_boolArray_6 : UInt<1>[2] @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[0] <= _parsedindexvalue_boolArray_T_25 @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[1] <= _parsedindexvalue_boolArray_T_27 @[Benes.scala 28:28]
      wire parsedindexvalue_second_stage_6 : UInt
      parsedindexvalue_second_stage_6 <= parsedindexvalue_first_stage_6
      node parsedindexvalue_calculation_12 = rem(parsedindexvalue_second_stage_6, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_468 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_469 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_470 = and(_parsedindexvalue_nextIndex_T_468, _parsedindexvalue_nextIndex_T_469) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_471 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_472 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_473 = and(_parsedindexvalue_nextIndex_T_471, _parsedindexvalue_nextIndex_T_472) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_474 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_475 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_476 = and(_parsedindexvalue_nextIndex_T_474, _parsedindexvalue_nextIndex_T_475) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_477 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_478 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_479 = and(_parsedindexvalue_nextIndex_T_477, _parsedindexvalue_nextIndex_T_478) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_480 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_481 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_482 = and(_parsedindexvalue_nextIndex_T_480, _parsedindexvalue_nextIndex_T_481) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_483 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_484 = tail(_parsedindexvalue_nextIndex_T_483, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_485 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_486 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_487 = and(_parsedindexvalue_nextIndex_T_485, _parsedindexvalue_nextIndex_T_486) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_488 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_489 = tail(_parsedindexvalue_nextIndex_T_488, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_490 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_491 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_492 = and(_parsedindexvalue_nextIndex_T_490, _parsedindexvalue_nextIndex_T_491) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_493 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_494 = tail(_parsedindexvalue_nextIndex_T_493, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_495 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_496 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_497 = and(_parsedindexvalue_nextIndex_T_495, _parsedindexvalue_nextIndex_T_496) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_498 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_499 = tail(_parsedindexvalue_nextIndex_T_498, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_500 = mux(_parsedindexvalue_nextIndex_T_497, _parsedindexvalue_nextIndex_T_499, parsedindexvalue_second_stage_6) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_501 = mux(_parsedindexvalue_nextIndex_T_492, _parsedindexvalue_nextIndex_T_494, _parsedindexvalue_nextIndex_T_500) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_502 = mux(_parsedindexvalue_nextIndex_T_487, _parsedindexvalue_nextIndex_T_489, _parsedindexvalue_nextIndex_T_501) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_503 = mux(_parsedindexvalue_nextIndex_T_482, _parsedindexvalue_nextIndex_T_484, _parsedindexvalue_nextIndex_T_502) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_504 = mux(_parsedindexvalue_nextIndex_T_479, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_503) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_505 = mux(_parsedindexvalue_nextIndex_T_476, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_504) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_506 = mux(_parsedindexvalue_nextIndex_T_473, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_505) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_12 = mux(_parsedindexvalue_nextIndex_T_470, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_506) @[Mux.scala 101:16]
      node parsedindexvalue_calculation_13 = rem(parsedindexvalue_nextIndex_12, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_507 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_508 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_509 = and(_parsedindexvalue_nextIndex_T_507, _parsedindexvalue_nextIndex_T_508) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_510 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_511 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_512 = and(_parsedindexvalue_nextIndex_T_510, _parsedindexvalue_nextIndex_T_511) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_513 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_514 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_515 = and(_parsedindexvalue_nextIndex_T_513, _parsedindexvalue_nextIndex_T_514) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_516 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_517 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_518 = and(_parsedindexvalue_nextIndex_T_516, _parsedindexvalue_nextIndex_T_517) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_519 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_520 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_521 = and(_parsedindexvalue_nextIndex_T_519, _parsedindexvalue_nextIndex_T_520) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_522 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_523 = tail(_parsedindexvalue_nextIndex_T_522, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_524 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_525 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_526 = and(_parsedindexvalue_nextIndex_T_524, _parsedindexvalue_nextIndex_T_525) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_527 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_528 = tail(_parsedindexvalue_nextIndex_T_527, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_529 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_530 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_531 = and(_parsedindexvalue_nextIndex_T_529, _parsedindexvalue_nextIndex_T_530) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_532 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_533 = tail(_parsedindexvalue_nextIndex_T_532, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_534 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_535 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_536 = and(_parsedindexvalue_nextIndex_T_534, _parsedindexvalue_nextIndex_T_535) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_537 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_538 = tail(_parsedindexvalue_nextIndex_T_537, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_539 = mux(_parsedindexvalue_nextIndex_T_536, _parsedindexvalue_nextIndex_T_538, parsedindexvalue_nextIndex_12) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_540 = mux(_parsedindexvalue_nextIndex_T_531, _parsedindexvalue_nextIndex_T_533, _parsedindexvalue_nextIndex_T_539) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_541 = mux(_parsedindexvalue_nextIndex_T_526, _parsedindexvalue_nextIndex_T_528, _parsedindexvalue_nextIndex_T_540) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_542 = mux(_parsedindexvalue_nextIndex_T_521, _parsedindexvalue_nextIndex_T_523, _parsedindexvalue_nextIndex_T_541) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_543 = mux(_parsedindexvalue_nextIndex_T_518, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_542) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_544 = mux(_parsedindexvalue_nextIndex_T_515, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_543) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_545 = mux(_parsedindexvalue_nextIndex_T_512, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_544) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_13 = mux(_parsedindexvalue_nextIndex_T_509, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_545) @[Mux.scala 101:16]
      node _parsedindexvalue_third_stage_T_48 = bits(io.i_mux_bus[0], 3, 3) @[Benes.scala 48:30]
      node _parsedindexvalue_third_stage_T_49 = rem(parsedindexvalue_nextIndex_13, UInt<2>("h2")) @[Benes.scala 48:61]
      node _parsedindexvalue_third_stage_T_50 = eq(_parsedindexvalue_third_stage_T_49, UInt<1>("h0")) @[Benes.scala 48:67]
      node _parsedindexvalue_third_stage_T_51 = add(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_52 = tail(_parsedindexvalue_third_stage_T_51, 1) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_53 = sub(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_54 = tail(_parsedindexvalue_third_stage_T_53, 1) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_55 = mux(_parsedindexvalue_third_stage_T_50, _parsedindexvalue_third_stage_T_52, _parsedindexvalue_third_stage_T_54) @[Benes.scala 48:47]
      node parsedindexvalue_6 = mux(_parsedindexvalue_third_stage_T_48, _parsedindexvalue_third_stage_T_55, parsedindexvalue_nextIndex_13) @[Benes.scala 48:24]
      node _T_25 = or(parsedindexvalue_6, UInt<3>("h0"))
      node _T_26 = bits(_T_25, 2, 0)
      parse_array[_T_26] <= io.i_data_bus2[0] @[Benes.scala 94:35]
    else :
      parse_array[4] <= UInt<1>("h0") @[Benes.scala 98:33]
    io.o_dist_bus2[0] <= parse_array[0] @[Benes.scala 103:27]
    io.o_dist_bus2[1] <= parse_array[1] @[Benes.scala 103:27]
    io.o_dist_bus2[2] <= parse_array[2] @[Benes.scala 103:27]
    io.o_dist_bus2[3] <= parse_array[3] @[Benes.scala 103:27]

  module buffer_multiplication :
    input clock : Clock
    input reset : Reset
    output io : { flip buffer1 : UInt<16>[4], flip buffer2 : UInt<16>[4], out : UInt<16>[4]}

    node elementMul = mul(io.buffer1[0], io.buffer2[0]) @[buffer_multiplication.scala 17:42]
    node result_elementMul = mul(io.buffer1[1], io.buffer2[1]) @[buffer_multiplication.scala 17:42]
    node result_result_elementMul = mul(io.buffer1[2], io.buffer2[2]) @[buffer_multiplication.scala 17:42]
    node result_result_result_elementMul = mul(io.buffer1[3], io.buffer2[3]) @[buffer_multiplication.scala 17:42]
    wire result : UInt<16>[4] @[buffer_multiplication.scala 15:20]
    result[0] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[1] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[2] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= result_result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[2] <= result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[1] <= result_elementMul @[buffer_multiplication.scala 19:27]
    result[0] <= elementMul @[buffer_multiplication.scala 19:27]
    io.out <= result @[buffer_multiplication.scala 24:10]

  module ReductionMux :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_1 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_1 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_2 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_2 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module Fan4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<32>[4], flip i_add_en_bus : UInt<1>[3], flip i_cmd_bus : UInt<3>[3], o_valid : UInt<1>[4], o_data_bus : UInt<32>[4], o_adder : UInt<32>[3]}

    wire _w_fan_lvl_0_WIRE : UInt<64>[2] @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[0] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[1] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    wire w_fan_lvl_0 : UInt<64>[2]
    w_fan_lvl_0 <= _w_fan_lvl_0_WIRE
    wire _w_fan_lvl_1_WIRE : UInt<32>[1] @[FanNetwork.scala 21:39]
    _w_fan_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 21:39]
    wire w_fan_lvl_1 : UInt<32>[1]
    w_fan_lvl_1 <= _w_fan_lvl_1_WIRE
    wire _w_vn_lvl_0_WIRE : UInt<32>[4] @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    wire w_vn_lvl_0 : UInt<32>[4]
    w_vn_lvl_0 <= _w_vn_lvl_0_WIRE
    wire _w_vn_lvl_0_valid_WIRE : UInt<1>[4] @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    wire w_vn_lvl_0_valid : UInt<1>[4]
    w_vn_lvl_0_valid <= _w_vn_lvl_0_valid_WIRE
    wire _w_vn_lvl_1_WIRE : UInt<32>[2] @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    wire w_vn_lvl_1 : UInt<32>[2]
    w_vn_lvl_1 <= _w_vn_lvl_1_WIRE
    wire _w_vn_lvl_1_valid_WIRE : UInt<1>[2] @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    wire w_vn_lvl_1_valid : UInt<1>[2]
    w_vn_lvl_1_valid <= _w_vn_lvl_1_valid_WIRE
    wire _r_lvl_output_ff_WIRE : UInt<32>[8] @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[4] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[5] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[6] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[7] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    reg r_lvl_output_ff : UInt<32>[8], clock with :
      reset => (reset, _r_lvl_output_ff_WIRE) @[FanNetwork.scala 28:34]
    wire _r_lvl_output_ff_valid_WIRE : UInt<1>[8] @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[4] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[5] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[6] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[7] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    reg r_lvl_output_ff_valid : UInt<1>[8], clock with :
      reset => (reset, _r_lvl_output_ff_valid_WIRE) @[FanNetwork.scala 29:40]
    wire _r_valid_WIRE : UInt<1>[3] @[FanNetwork.scala 30:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    reg r_valid : UInt<1>[3], clock with :
      reset => (reset, _r_valid_WIRE) @[FanNetwork.scala 30:26]
    reg r_final_sum : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FanNetwork.scala 32:30]
    reg r_final_add : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 33:30]
    reg r_final_add2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 34:31]
    node _T = bits(w_vn_lvl_0_valid[1], 0, 0) @[FanNetwork.scala 38:30]
    node _T_1 = eq(_T, UInt<1>("h1")) @[FanNetwork.scala 38:34]
    node _T_2 = bits(w_vn_lvl_0_valid[0], 0, 0) @[FanNetwork.scala 38:64]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[FanNetwork.scala 38:68]
    node _T_4 = and(_T_1, _T_3) @[FanNetwork.scala 38:42]
    when _T_4 : @[FanNetwork.scala 38:77]
      r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 39:28]
      r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 40:28]
      r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 41:34]
      r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 42:34]
    else :
      node _T_5 = eq(w_vn_lvl_0_valid[1], UInt<1>("h1")) @[FanNetwork.scala 43:37]
      node _T_6 = eq(w_vn_lvl_0_valid[0], UInt<1>("h0")) @[FanNetwork.scala 43:68]
      node _T_7 = and(_T_5, _T_6) @[FanNetwork.scala 43:45]
      when _T_7 : @[FanNetwork.scala 43:77]
        r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 44:28]
        r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 45:28]
        r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 46:34]
        r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 47:34]
      else :
        node _T_8 = eq(w_vn_lvl_0_valid[1], UInt<1>("h0")) @[FanNetwork.scala 48:37]
        node _T_9 = eq(w_vn_lvl_0_valid[0], UInt<1>("h1")) @[FanNetwork.scala 48:68]
        node _T_10 = and(_T_8, _T_9) @[FanNetwork.scala 48:45]
        when _T_10 : @[FanNetwork.scala 48:77]
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 49:28]
          r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 50:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 51:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 52:34]
        else :
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 54:28]
          r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 55:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 56:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 57:34]
    node _T_11 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 59:30]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[FanNetwork.scala 59:34]
    node _T_13 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 59:64]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[FanNetwork.scala 59:68]
    node _T_15 = and(_T_12, _T_14) @[FanNetwork.scala 59:42]
    when _T_15 : @[FanNetwork.scala 59:77]
      r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 60:28]
      r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 61:28]
      r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 62:34]
      r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 63:34]
    else :
      node _T_16 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 64:36]
      node _T_17 = eq(_T_16, UInt<1>("h1")) @[FanNetwork.scala 64:40]
      node _T_18 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 64:70]
      node _T_19 = eq(_T_18, UInt<1>("h0")) @[FanNetwork.scala 64:74]
      node _T_20 = and(_T_17, _T_19) @[FanNetwork.scala 64:48]
      when _T_20 : @[FanNetwork.scala 64:83]
        r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 65:28]
        r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 66:28]
        r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 67:34]
        r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 68:34]
      else :
        node _T_21 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 69:36]
        node _T_22 = eq(_T_21, UInt<1>("h0")) @[FanNetwork.scala 69:40]
        node _T_23 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 69:70]
        node _T_24 = eq(_T_23, UInt<1>("h1")) @[FanNetwork.scala 69:74]
        node _T_25 = and(_T_22, _T_24) @[FanNetwork.scala 69:48]
        when _T_25 : @[FanNetwork.scala 69:83]
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 70:28]
          r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 71:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 72:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 73:34]
        else :
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 75:28]
          r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 76:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 77:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 78:34]
    r_lvl_output_ff[4] <= r_lvl_output_ff[0] @[FanNetwork.scala 81:24]
    r_lvl_output_ff_valid[4] <= r_lvl_output_ff_valid[0] @[FanNetwork.scala 82:30]
    node _T_26 = bits(w_vn_lvl_1_valid[0], 0, 0) @[FanNetwork.scala 84:29]
    when _T_26 : @[FanNetwork.scala 84:34]
      r_lvl_output_ff[5] <= w_vn_lvl_1[0] @[FanNetwork.scala 85:28]
      r_lvl_output_ff_valid[5] <= UInt<1>("h1") @[FanNetwork.scala 86:34]
    else :
      r_lvl_output_ff[5] <= r_lvl_output_ff[1] @[FanNetwork.scala 88:28]
      r_lvl_output_ff_valid[5] <= r_lvl_output_ff_valid[1] @[FanNetwork.scala 89:34]
    node _T_27 = bits(w_vn_lvl_1_valid[1], 0, 0) @[FanNetwork.scala 91:29]
    when _T_27 : @[FanNetwork.scala 91:34]
      r_lvl_output_ff[6] <= w_vn_lvl_1[1] @[FanNetwork.scala 92:28]
      r_lvl_output_ff_valid[6] <= UInt<1>("h1") @[FanNetwork.scala 93:34]
    else :
      r_lvl_output_ff[6] <= r_lvl_output_ff[2] @[FanNetwork.scala 95:28]
      r_lvl_output_ff_valid[6] <= r_lvl_output_ff_valid[2] @[FanNetwork.scala 96:34]
    r_lvl_output_ff[7] <= r_lvl_output_ff[3] @[FanNetwork.scala 99:24]
    r_lvl_output_ff_valid[7] <= r_lvl_output_ff_valid[3] @[FanNetwork.scala 100:30]
    node _T_28 = eq(io.i_valid, UInt<1>("h1")) @[FanNetwork.scala 104:22]
    when _T_28 : @[FanNetwork.scala 104:31]
      r_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 105:16]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 107:20]
    r_valid[1] <= r_valid[0] @[FanNetwork.scala 114:24]
    r_valid[2] <= r_valid[1] @[FanNetwork.scala 114:24]
    inst my_adder_0 of EdgeAdderSwitch @[FanNetwork.scala 119:28]
    my_adder_0.clock <= clock
    my_adder_0.reset <= reset
    my_adder_0.io.i_valid <= r_valid[0] @[FanNetwork.scala 121:27]
    wire _WIRE : UInt<32>[2] @[FanNetwork.scala 122:40]
    _WIRE[0] <= io.i_data_bus[1] @[FanNetwork.scala 122:40]
    _WIRE[1] <= io.i_data_bus[0] @[FanNetwork.scala 122:40]
    my_adder_0.io.i_data_bus[0] <= _WIRE[0] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_data_bus[1] <= _WIRE[1] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_add_en <= io.i_add_en_bus[0] @[FanNetwork.scala 123:28]
    my_adder_0.io.i_cmd <= io.i_cmd_bus[0] @[FanNetwork.scala 124:25]
    my_adder_0.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 125:25]
    node _w_vn_lvl_0_0_T = bits(my_adder_0.io.o_vn, 31, 0) @[FanNetwork.scala 126:40]
    w_vn_lvl_0[0] <= _w_vn_lvl_0_0_T @[FanNetwork.scala 126:19]
    node _w_vn_lvl_0_1_T = bits(my_adder_0.io.o_vn, 63, 32) @[FanNetwork.scala 127:40]
    w_vn_lvl_0[1] <= _w_vn_lvl_0_1_T @[FanNetwork.scala 127:19]
    node _w_vn_lvl_0_valid_0_T = bits(my_adder_0.io.o_vn_valid, 0, 0) @[FanNetwork.scala 128:52]
    w_vn_lvl_0_valid[0] <= _w_vn_lvl_0_valid_0_T @[FanNetwork.scala 128:25]
    node _w_vn_lvl_0_valid_1_T = bits(my_adder_0.io.o_vn_valid, 1, 1) @[FanNetwork.scala 129:52]
    w_vn_lvl_0_valid[1] <= _w_vn_lvl_0_valid_1_T @[FanNetwork.scala 129:25]
    w_fan_lvl_0[0] <= my_adder_0.io.o_adder @[FanNetwork.scala 130:20]
    inst my_adder_1 of EdgeAdderSwitch_1 @[FanNetwork.scala 132:28]
    my_adder_1.clock <= clock
    my_adder_1.reset <= reset
    my_adder_1.io.i_valid <= r_valid[1] @[FanNetwork.scala 134:27]
    wire _WIRE_1 : UInt<64>[2] @[FanNetwork.scala 135:40]
    _WIRE_1[0] <= w_fan_lvl_0[1] @[FanNetwork.scala 135:40]
    _WIRE_1[1] <= w_fan_lvl_0[0] @[FanNetwork.scala 135:40]
    my_adder_1.io.i_data_bus[0] <= _WIRE_1[0] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_data_bus[1] <= _WIRE_1[1] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_add_en <= io.i_add_en_bus[2] @[FanNetwork.scala 136:28]
    my_adder_1.io.i_cmd <= io.i_cmd_bus[2] @[FanNetwork.scala 137:26]
    my_adder_1.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 138:25]
    node _w_vn_lvl_1_0_T = bits(my_adder_1.io.o_vn, 31, 0) @[FanNetwork.scala 139:40]
    w_vn_lvl_1[0] <= _w_vn_lvl_1_0_T @[FanNetwork.scala 139:19]
    node _w_vn_lvl_1_1_T = bits(my_adder_1.io.o_vn, 63, 32) @[FanNetwork.scala 140:40]
    w_vn_lvl_1[1] <= _w_vn_lvl_1_1_T @[FanNetwork.scala 140:19]
    node _w_vn_lvl_1_valid_0_T = bits(my_adder_1.io.o_vn_valid, 0, 0) @[FanNetwork.scala 141:52]
    w_vn_lvl_1_valid[0] <= _w_vn_lvl_1_valid_0_T @[FanNetwork.scala 141:25]
    node _w_vn_lvl_1_valid_1_T = bits(my_adder_1.io.o_vn_valid, 1, 1) @[FanNetwork.scala 142:52]
    w_vn_lvl_1_valid[1] <= _w_vn_lvl_1_valid_1_T @[FanNetwork.scala 142:25]
    w_fan_lvl_1[0] <= my_adder_1.io.o_adder @[FanNetwork.scala 143:20]
    inst my_adder_2 of EdgeAdderSwitch_2 @[FanNetwork.scala 145:28]
    my_adder_2.clock <= clock
    my_adder_2.reset <= reset
    my_adder_2.io.i_valid <= r_valid[0] @[FanNetwork.scala 147:27]
    wire _WIRE_2 : UInt<32>[2] @[FanNetwork.scala 148:40]
    _WIRE_2[0] <= io.i_data_bus[3] @[FanNetwork.scala 148:40]
    _WIRE_2[1] <= io.i_data_bus[2] @[FanNetwork.scala 148:40]
    my_adder_2.io.i_data_bus[0] <= _WIRE_2[0] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_data_bus[1] <= _WIRE_2[1] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_add_en <= io.i_add_en_bus[1] @[FanNetwork.scala 149:28]
    my_adder_2.io.i_cmd <= io.i_cmd_bus[1] @[FanNetwork.scala 150:25]
    my_adder_2.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 151:25]
    node _w_vn_lvl_0_2_T = bits(my_adder_2.io.o_vn, 31, 0) @[FanNetwork.scala 153:40]
    w_vn_lvl_0[2] <= _w_vn_lvl_0_2_T @[FanNetwork.scala 153:19]
    node _w_vn_lvl_0_3_T = bits(my_adder_2.io.o_vn, 63, 32) @[FanNetwork.scala 154:40]
    w_vn_lvl_0[3] <= _w_vn_lvl_0_3_T @[FanNetwork.scala 154:19]
    node _w_vn_lvl_0_valid_2_T = bits(my_adder_2.io.o_vn_valid, 0, 0) @[FanNetwork.scala 156:52]
    w_vn_lvl_0_valid[2] <= _w_vn_lvl_0_valid_2_T @[FanNetwork.scala 156:25]
    node _w_vn_lvl_0_valid_3_T = bits(my_adder_2.io.o_vn_valid, 1, 1) @[FanNetwork.scala 157:52]
    w_vn_lvl_0_valid[3] <= _w_vn_lvl_0_valid_3_T @[FanNetwork.scala 157:25]
    w_fan_lvl_0[1] <= my_adder_2.io.o_adder @[FanNetwork.scala 159:20]
    r_final_add <= UInt<1>("h0") @[FanNetwork.scala 163:17]
    r_final_add2 <= UInt<1>("h0") @[FanNetwork.scala 164:18]
    r_final_sum <= UInt<1>("h0") @[FanNetwork.scala 165:17]
    r_final_add <= io.i_add_en_bus[2] @[FanNetwork.scala 167:17]
    r_final_add2 <= r_final_add @[FanNetwork.scala 168:18]
    r_final_sum <= w_fan_lvl_1[0] @[FanNetwork.scala 169:17]
    io.o_data_bus[0] <= UInt<1>("h0") @[FanNetwork.scala 172:22]
    io.o_data_bus[1] <= UInt<1>("h0") @[FanNetwork.scala 173:22]
    io.o_data_bus[2] <= UInt<1>("h0") @[FanNetwork.scala 174:22]
    io.o_data_bus[3] <= UInt<1>("h0") @[FanNetwork.scala 175:22]
    io.o_data_bus[0] <= r_lvl_output_ff[4] @[FanNetwork.scala 177:22]
    node _T_29 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 178:24]
    when _T_29 : @[FanNetwork.scala 178:33]
      io.o_data_bus[1] <= r_final_sum @[FanNetwork.scala 179:26]
    else :
      io.o_data_bus[1] <= r_lvl_output_ff[5] @[FanNetwork.scala 181:26]
    io.o_data_bus[2] <= r_lvl_output_ff[6] @[FanNetwork.scala 183:22]
    io.o_data_bus[3] <= r_lvl_output_ff[7] @[FanNetwork.scala 184:22]
    io.o_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 187:19]
    io.o_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 188:19]
    io.o_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 189:19]
    io.o_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 190:19]
    io.o_valid[0] <= r_lvl_output_ff_valid[4] @[FanNetwork.scala 192:19]
    node _T_30 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 193:24]
    when _T_30 : @[FanNetwork.scala 193:33]
      io.o_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 194:23]
    else :
      io.o_valid[1] <= r_lvl_output_ff_valid[5] @[FanNetwork.scala 196:23]
    io.o_valid[2] <= r_lvl_output_ff_valid[6] @[FanNetwork.scala 198:19]
    io.o_valid[3] <= r_lvl_output_ff_valid[7] @[FanNetwork.scala 199:19]
    io.o_adder[0] <= UInt<1>("h0") @[FanNetwork.scala 203:19]
    io.o_adder[1] <= UInt<1>("h0") @[FanNetwork.scala 204:19]
    io.o_adder[2] <= UInt<1>("h0") @[FanNetwork.scala 205:19]
    io.o_adder[0] <= w_fan_lvl_0[0] @[FanNetwork.scala 207:19]
    io.o_adder[1] <= w_fan_lvl_1[0] @[FanNetwork.scala 208:19]
    io.o_adder[2] <= w_fan_lvl_0[1] @[FanNetwork.scala 209:19]

  module flexdpecom4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[4][4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4]}

    wire _r_mult_WIRE : UInt<15>[4] @[FlexDPE.scala 32:34]
    _r_mult_WIRE[0] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[1] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[2] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[3] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    reg r_mult : UInt<15>[4], clock with :
      reset => (reset, _r_mult_WIRE) @[FlexDPE.scala 32:26]
    reg matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), matrix) @[FlexDPE.scala 33:21]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPE.scala 36:26]
    reg r_stationary_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff) @[FlexDPE.scala 40:30]
    reg r_stationary_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff2) @[FlexDPE.scala 41:31]
    reg r_data_valid_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff) @[FlexDPE.scala 43:30]
    reg r_data_valid_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff2) @[FlexDPE.scala 44:31]
    r_stationary_ff <= io.i_stationary @[FlexDPE.scala 46:21]
    r_stationary_ff2 <= r_stationary_ff @[FlexDPE.scala 47:22]
    r_data_valid_ff <= io.i_data_valid @[FlexDPE.scala 49:21]
    r_data_valid_ff2 <= r_data_valid_ff @[FlexDPE.scala 50:22]
    inst my_ivn of ivncontrol4 @[FlexDPE.scala 53:23]
    my_ivn.clock <= clock
    my_ivn.reset <= reset
    my_ivn.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPE.scala 54:33]
    inst my_controller of fancontrol4 @[FlexDPE.scala 57:31]
    my_controller.clock <= clock
    my_controller.reset <= reset
    my_controller.io.i_vn[0] <= my_ivn.io.o_vn[0] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[1] <= my_ivn.io.o_vn[1] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[2] <= my_ivn.io.o_vn[2] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[3] <= my_ivn.io.o_vn[3] @[FlexDPE.scala 59:27]
    my_controller.io.i_stationary <= UInt<1>("h0") @[FlexDPE.scala 60:35]
    my_controller.io.i_data_valid <= io.i_data_valid @[FlexDPE.scala 61:35]
    inst my_Benes of Benes @[FlexDPE.scala 66:26]
    my_Benes.clock <= clock
    my_Benes.reset <= reset
    my_Benes.io.i_data_bus1[0] <= io.i_data_bus[0] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[1] <= io.i_data_bus[1] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[2] <= io.i_data_bus[2] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[3] <= io.i_data_bus[3] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus2[0] <= io.i_data_bus2[0] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[1] <= io.i_data_bus2[1] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[2] <= io.i_data_bus2[2] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[3] <= io.i_data_bus2[3] @[FlexDPE.scala 69:29]
    my_Benes.io.i_mux_bus[0] <= io.i_mux_bus[0] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[1] <= io.i_mux_bus[1] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[2] <= io.i_mux_bus[2] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[3] <= io.i_mux_bus[3] @[FlexDPE.scala 70:27]
    inst buffer_mult of buffer_multiplication @[FlexDPE.scala 77:30]
    buffer_mult.clock <= clock
    buffer_mult.reset <= reset
    buffer_mult.io.buffer1[0] <= my_Benes.io.o_dist_bus1[0] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[1] <= my_Benes.io.o_dist_bus1[1] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[2] <= my_Benes.io.o_dist_bus1[2] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[3] <= my_Benes.io.o_dist_bus1[3] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer2[0] <= my_Benes.io.o_dist_bus2[0] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[1] <= my_Benes.io.o_dist_bus2[1] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[2] <= my_Benes.io.o_dist_bus2[2] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[3] <= my_Benes.io.o_dist_bus2[3] @[FlexDPE.scala 81:30]
    r_mult <= buffer_mult.io.out @[FlexDPE.scala 83:14]
    inst my_fan_network of Fan4 @[FlexDPE.scala 89:32]
    my_fan_network.clock <= clock
    my_fan_network.reset <= reset
    my_fan_network.io.i_valid <= my_controller.io.o_reduction_valid @[FlexDPE.scala 91:31]
    my_fan_network.io.i_data_bus[0] <= r_mult[0] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[1] <= r_mult[1] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[2] <= r_mult[2] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[3] <= r_mult[3] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_add_en_bus[0] <= my_controller.io.o_reduction_add[0] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[1] <= my_controller.io.o_reduction_add[1] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[2] <= my_controller.io.o_reduction_add[2] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_cmd_bus[0] <= my_controller.io.o_reduction_cmd[0] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[1] <= my_controller.io.o_reduction_cmd[1] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[2] <= my_controller.io.o_reduction_cmd[2] @[FlexDPE.scala 94:33]
    io.o_valid <= my_fan_network.io.o_valid @[FlexDPE.scala 96:16]
    io.o_data_bus <= my_fan_network.io.o_data_bus @[FlexDPE.scala 97:19]
    io.o_adder <= my_fan_network.io.o_adder @[FlexDPE.scala 98:16]

  module ivncontrol4_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], o_vn : UInt<5>[4]}

    wire _i_vn_WIRE : UInt<5>[4] @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[0] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[1] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[2] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[3] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    reg i_vn : UInt<5>[4], clock with :
      reset => (reset, _i_vn_WIRE) @[ivncontrol(4).scala 15:23]
    wire _rowcount_WIRE : UInt<32>[4] @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[0] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[1] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[2] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[3] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    reg rowcount : UInt<32>[4], clock with :
      reset => (reset, _rowcount_WIRE) @[ivncontrol(4).scala 19:27]
    wire valid : UInt<1>
    valid <= UInt<1>("h0")
    wire valid1 : UInt<1>
    valid1 <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 31:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 32:20]
    reg mat : UInt<32>[4][4], clock with :
      reset => (UInt<1>("h0"), mat) @[ivncontrol(4).scala 35:18]
    reg count : UInt<32>[4], clock with :
      reset => (UInt<1>("h0"), count) @[ivncontrol(4).scala 39:20]
    node _T = bits(i, 1, 0)
    node _T_1 = bits(j, 1, 0)
    node _mat_T = bits(i, 1, 0)
    node _mat_T_1 = bits(j, 1, 0)
    mat[_T][_T_1] <= io.Stationary_matrix[_mat_T][_mat_T_1] @[ivncontrol(4).scala 44:15]
    node _T_2 = eq(valid1, UInt<1>("h0")) @[ivncontrol(4).scala 45:16]
    when _T_2 : @[ivncontrol(4).scala 45:28]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = neq(io.Stationary_matrix[_T_3][_T_4], UInt<1>("h0")) @[ivncontrol(4).scala 46:43]
      when _T_5 : @[ivncontrol(4).scala 46:51]
        node _T_6 = bits(i, 1, 0)
        node _count_T = bits(i, 1, 0)
        node _count_T_1 = add(count[_count_T], UInt<1>("h1")) @[ivncontrol(4).scala 47:33]
        node _count_T_2 = tail(_count_T_1, 1) @[ivncontrol(4).scala 47:33]
        count[_T_6] <= _count_T_2 @[ivncontrol(4).scala 47:22]
    node _T_7 = geq(count[1], UInt<3>("h4")) @[ivncontrol(4).scala 53:20]
    when _T_7 : @[ivncontrol(4).scala 53:28]
      valid1 <= UInt<1>("h1") @[ivncontrol(4).scala 54:16]
    node _T_8 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 59:14]
    node _T_9 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 59:47]
    node _T_10 = and(_T_8, _T_9) @[ivncontrol(4).scala 59:41]
    when _T_10 : @[ivncontrol(4).scala 59:75]
      rowcount[0] <= count[0] @[ivncontrol(4).scala 66:21]
      node _T_11 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_11 : @[ivncontrol(4).scala 67:49]
        node _T_12 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_13 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_14 = and(_T_12, _T_13) @[ivncontrol(4).scala 71:54]
        node _T_15 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_16 = and(_T_14, _T_15) @[ivncontrol(4).scala 71:92]
        node _T_17 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_18 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_19 = and(_T_17, _T_18) @[ivncontrol(4).scala 71:170]
        node _T_20 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_21 = and(_T_19, _T_20) @[ivncontrol(4).scala 71:208]
        node _T_22 = or(_T_16, _T_21) @[ivncontrol(4).scala 71:131]
        node _T_23 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_24 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_25 = and(_T_23, _T_24) @[ivncontrol(4).scala 71:284]
        node _T_26 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_27 = and(_T_25, _T_26) @[ivncontrol(4).scala 71:322]
        node _T_28 = or(_T_22, _T_27) @[ivncontrol(4).scala 71:246]
        when _T_28 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_1 = tail(_rowcount_1_T, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_1 @[ivncontrol(4).scala 72:29]
        else :
          node _T_29 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_30 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_31 = and(_T_29, _T_30) @[ivncontrol(4).scala 73:60]
          node _T_32 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_33 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_34 = and(_T_32, _T_33) @[ivncontrol(4).scala 73:138]
          node _T_35 = or(_T_31, _T_34) @[ivncontrol(4).scala 73:99]
          node _T_36 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_37 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_38 = and(_T_36, _T_37) @[ivncontrol(4).scala 73:217]
          node _T_39 = or(_T_35, _T_38) @[ivncontrol(4).scala 73:178]
          when _T_39 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_2 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_3 = tail(_rowcount_1_T_2, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_3 @[ivncontrol(4).scala 74:29]
          else :
            node _T_40 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_41 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_42 = and(_T_40, _T_41) @[ivncontrol(4).scala 75:60]
            node _T_43 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_44 = and(_T_42, _T_43) @[ivncontrol(4).scala 75:98]
            node _T_45 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_46 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_47 = and(_T_45, _T_46) @[ivncontrol(4).scala 75:175]
            node _T_48 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_49 = and(_T_47, _T_48) @[ivncontrol(4).scala 75:213]
            node _T_50 = or(_T_44, _T_49) @[ivncontrol(4).scala 75:136]
            node _T_51 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_52 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_53 = and(_T_51, _T_52) @[ivncontrol(4).scala 75:293]
            node _T_54 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_55 = and(_T_53, _T_54) @[ivncontrol(4).scala 75:331]
            node _T_56 = or(_T_50, _T_55) @[ivncontrol(4).scala 75:253]
            when _T_56 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_4 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_5 = tail(_rowcount_1_T_4, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_5 @[ivncontrol(4).scala 76:29]
      rowcount[1] <= count[1] @[ivncontrol(4).scala 66:21]
      node _T_57 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_57 : @[ivncontrol(4).scala 67:49]
        node _T_58 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_59 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_60 = and(_T_58, _T_59) @[ivncontrol(4).scala 71:54]
        node _T_61 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_62 = and(_T_60, _T_61) @[ivncontrol(4).scala 71:92]
        node _T_63 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_64 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_65 = and(_T_63, _T_64) @[ivncontrol(4).scala 71:170]
        node _T_66 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_67 = and(_T_65, _T_66) @[ivncontrol(4).scala 71:208]
        node _T_68 = or(_T_62, _T_67) @[ivncontrol(4).scala 71:131]
        node _T_69 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_70 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_71 = and(_T_69, _T_70) @[ivncontrol(4).scala 71:284]
        node _T_72 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_73 = and(_T_71, _T_72) @[ivncontrol(4).scala 71:322]
        node _T_74 = or(_T_68, _T_73) @[ivncontrol(4).scala 71:246]
        when _T_74 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T_6 = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_7 = tail(_rowcount_1_T_6, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_7 @[ivncontrol(4).scala 72:29]
        else :
          node _T_75 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_76 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_77 = and(_T_75, _T_76) @[ivncontrol(4).scala 73:60]
          node _T_78 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_79 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_80 = and(_T_78, _T_79) @[ivncontrol(4).scala 73:138]
          node _T_81 = or(_T_77, _T_80) @[ivncontrol(4).scala 73:99]
          node _T_82 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_83 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_84 = and(_T_82, _T_83) @[ivncontrol(4).scala 73:217]
          node _T_85 = or(_T_81, _T_84) @[ivncontrol(4).scala 73:178]
          when _T_85 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_8 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_9 = tail(_rowcount_1_T_8, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_9 @[ivncontrol(4).scala 74:29]
          else :
            node _T_86 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_87 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_88 = and(_T_86, _T_87) @[ivncontrol(4).scala 75:60]
            node _T_89 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_90 = and(_T_88, _T_89) @[ivncontrol(4).scala 75:98]
            node _T_91 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_92 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_93 = and(_T_91, _T_92) @[ivncontrol(4).scala 75:175]
            node _T_94 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_95 = and(_T_93, _T_94) @[ivncontrol(4).scala 75:213]
            node _T_96 = or(_T_90, _T_95) @[ivncontrol(4).scala 75:136]
            node _T_97 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_98 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_99 = and(_T_97, _T_98) @[ivncontrol(4).scala 75:293]
            node _T_100 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_101 = and(_T_99, _T_100) @[ivncontrol(4).scala 75:331]
            node _T_102 = or(_T_96, _T_101) @[ivncontrol(4).scala 75:253]
            when _T_102 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_10 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_11 = tail(_rowcount_1_T_10, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_11 @[ivncontrol(4).scala 76:29]
    node _T_103 = lt(i, UInt<2>("h3")) @[ivncontrol(4).scala 87:14]
    node _T_104 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 87:46]
    node _T_105 = and(_T_103, _T_104) @[ivncontrol(4).scala 87:40]
    when _T_105 : @[ivncontrol(4).scala 87:74]
      node _i_T = add(i, UInt<1>("h1")) @[ivncontrol(4).scala 88:16]
      node _i_T_1 = tail(_i_T, 1) @[ivncontrol(4).scala 88:16]
      i <= _i_T_1 @[ivncontrol(4).scala 88:11]
    node _T_106 = lt(j, UInt<2>("h3")) @[ivncontrol(4).scala 91:14]
    node _T_107 = leq(i, UInt<2>("h3")) @[ivncontrol(4).scala 91:44]
    node _T_108 = and(_T_106, _T_107) @[ivncontrol(4).scala 91:39]
    when _T_108 : @[ivncontrol(4).scala 91:71]
      node _j_T = add(j, UInt<1>("h1")) @[ivncontrol(4).scala 92:16]
      node _j_T_1 = tail(_j_T, 1) @[ivncontrol(4).scala 92:16]
      j <= _j_T_1 @[ivncontrol(4).scala 92:11]
    else :
      node _T_109 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 94:19]
      node _T_110 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 94:53]
      node _T_111 = and(_T_109, _T_110) @[ivncontrol(4).scala 94:47]
      when _T_111 : @[ivncontrol(4).scala 94:81]
        j <= j @[ivncontrol(4).scala 95:11]
      else :
        j <= UInt<1>("h0") @[ivncontrol(4).scala 98:11]
    io.o_vn <= i_vn @[ivncontrol(4).scala 105:13]
    i_vn[0] <= UInt<5>("h4") @[ivncontrol(4).scala 108:17]
    i_vn[1] <= UInt<5>("h10") @[ivncontrol(4).scala 108:17]
    i_vn[2] <= UInt<5>("h1e") @[ivncontrol(4).scala 108:17]
    i_vn[3] <= UInt<5>("h11") @[ivncontrol(4).scala 108:17]
    node _T_112 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 118:14]
    node _T_113 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 118:47]
    node _T_114 = and(_T_112, _T_113) @[ivncontrol(4).scala 118:41]
    when _T_114 : @[ivncontrol(4).scala 118:75]
      valid <= UInt<1>("h1") @[ivncontrol(4).scala 119:14]
    else :
      valid <= UInt<1>("h0") @[ivncontrol(4).scala 121:14]
    node _T_115 = eq(valid, UInt<1>("h1")) @[ivncontrol(4).scala 129:17]
    when _T_115 : @[ivncontrol(4).scala 129:28]
      node _T_116 = geq(UInt<3>("h4"), UInt<2>("h2")) @[ivncontrol(4).scala 130:25]
      when _T_116 : @[ivncontrol(4).scala 130:32]
        node _T_117 = eq(rowcount[0], UInt<2>("h2")) @[ivncontrol(4).scala 131:29]
        when _T_117 : @[ivncontrol(4).scala 131:38]
          i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 132:25]
          i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 133:25]
          node _T_118 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 134:34]
          when _T_118 : @[ivncontrol(4).scala 134:42]
            i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 135:29]
            i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 136:29]
          else :
            node _T_119 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 137:39]
            when _T_119 : @[ivncontrol(4).scala 137:46]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 138:29]
            else :
              node _T_120 = gt(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 139:40]
              when _T_120 : @[ivncontrol(4).scala 139:46]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 140:29]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 141:29]
        else :
          node _T_121 = eq(rowcount[0], UInt<1>("h1")) @[ivncontrol(4).scala 145:35]
          when _T_121 : @[ivncontrol(4).scala 145:43]
            i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 146:25]
            node _T_122 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 147:33]
            when _T_122 : @[ivncontrol(4).scala 147:40]
              i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 148:29]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 149:29]
              i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 150:29]
            else :
              node _T_123 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 151:39]
              when _T_123 : @[ivncontrol(4).scala 151:46]
                i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 152:29]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 153:29]
              else :
                node _T_124 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 155:39]
                when _T_124 : @[ivncontrol(4).scala 155:46]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 156:31]
                else :
                  node _T_125 = gt(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 158:39]
                  when _T_125 : @[ivncontrol(4).scala 158:44]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 159:30]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 160:29]
                    i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 161:29]
          else :
            node _T_126 = eq(rowcount[0], UInt<2>("h3")) @[ivncontrol(4).scala 167:35]
            when _T_126 : @[ivncontrol(4).scala 167:43]
              i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 168:25]
              i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 169:25]
              i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 170:25]
              node _T_127 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 171:34]
              when _T_127 : @[ivncontrol(4).scala 171:42]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 172:29]
            else :
              node _T_128 = eq(rowcount[0], UInt<1>("h0")) @[ivncontrol(4).scala 175:35]
              when _T_128 : @[ivncontrol(4).scala 175:43]
                node _T_129 = eq(rowcount[1], UInt<3>("h4")) @[ivncontrol(4).scala 176:33]
                when _T_129 : @[ivncontrol(4).scala 176:41]
                  i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 177:29]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 178:29]
                  i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 179:29]
                  i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 180:29]
                else :
                  node _T_130 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 181:39]
                  when _T_130 : @[ivncontrol(4).scala 181:46]
                    i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 182:29]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 183:29]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 184:29]
                  else :
                    node _T_131 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 185:39]
                    when _T_131 : @[ivncontrol(4).scala 185:46]
                      i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 186:29]
                      i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 187:29]
                    else :
                      node _T_132 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 188:39]
                      when _T_132 : @[ivncontrol(4).scala 188:46]
                        i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 189:29]
              else :
                node _T_133 = eq(rowcount[0], UInt<3>("h4")) @[ivncontrol(4).scala 191:35]
                when _T_133 : @[ivncontrol(4).scala 191:42]
                  i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 192:25]
                  i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 193:25]
                  i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 194:25]
                  i_vn[3] <= UInt<1>("h0") @[ivncontrol(4).scala 195:25]

  module fancontrol4_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, o_reduction_add : UInt[3], o_reduction_cmd : UInt<3>[3], o_reduction_valid : UInt<1>}

    wire _r_reduction_add_WIRE : UInt<1>[3] @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    reg r_reduction_add : UInt<1>[3], clock with :
      reset => (reset, _r_reduction_add_WIRE) @[FanCtrl.scala 19:34]
    wire _r_reduction_cmd_WIRE : UInt<3>[3] @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    reg r_reduction_cmd : UInt<3>[3], clock with :
      reset => (reset, _r_reduction_cmd_WIRE) @[FanCtrl.scala 20:34]
    wire _r_add_lvl_0Reg_WIRE : UInt<1>[8] @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[5] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[6] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[7] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    reg r_add_lvl_0Reg : UInt<1>[8], clock with :
      reset => (reset, _r_add_lvl_0Reg_WIRE) @[FanCtrl.scala 23:33]
    wire _r_add_lvl_1Reg_WIRE : UInt<1>[5] @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    reg r_add_lvl_1Reg : UInt<1>[5], clock with :
      reset => (reset, _r_add_lvl_1Reg_WIRE) @[FanCtrl.scala 24:33]
    wire _r_cmd_lvl_0Reg_WIRE : UInt<3>[8] @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[5] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[6] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[7] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    reg r_cmd_lvl_0Reg : UInt<3>[8], clock with :
      reset => (reset, _r_cmd_lvl_0Reg_WIRE) @[FanCtrl.scala 27:33]
    wire _r_cmd_lvl_1Reg_WIRE : UInt<3>[5] @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    reg r_cmd_lvl_1Reg : UInt<3>[5], clock with :
      reset => (reset, _r_cmd_lvl_1Reg_WIRE) @[FanCtrl.scala 28:33]
    wire _w_vn_WIRE : UInt<5>[4] @[FanCtrl.scala 34:31]
    _w_vn_WIRE[0] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[1] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[2] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[3] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    reg w_vn : UInt<5>[4], clock with :
      reset => (reset, _w_vn_WIRE) @[FanCtrl.scala 34:23]
    wire _r_valid_WIRE : UInt<1>[5] @[FanCtrl.scala 35:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    reg r_valid : UInt<1>[5], clock with :
      reset => (reset, _r_valid_WIRE) @[FanCtrl.scala 35:26]
    w_vn <= io.i_vn @[FanCtrl.scala 37:10]
    node _T = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T : @[FanCtrl.scala 40:25]
      node _T_1 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_1 : @[FanCtrl.scala 41:34]
        node _T_2 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:25]
        node _T_3 = add(_T_2, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_4 = tail(_T_3, 1) @[FanCtrl.scala 42:31]
        node _T_5 = bits(_T_4, 1, 0)
        node _T_6 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:52]
        node _T_7 = add(_T_6, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_8 = tail(_T_7, 1) @[FanCtrl.scala 42:58]
        node _T_9 = bits(_T_8, 1, 0)
        node _T_10 = eq(w_vn[_T_5], w_vn[_T_9]) @[FanCtrl.scala 42:39]
        when _T_10 : @[FanCtrl.scala 42:66]
          node _T_11 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 43:34]
          node _T_12 = tail(_T_11, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_12] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_13 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 45:32]
          node _T_14 = tail(_T_13, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_14] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_15 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 48:28]
        node _T_16 = add(_T_15, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_17 = tail(_T_16, 1) @[FanCtrl.scala 48:34]
        node _T_18 = bits(_T_17, 1, 0)
        node _T_19 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 49:26]
        node _T_20 = add(_T_19, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_21 = tail(_T_20, 1) @[FanCtrl.scala 49:32]
        node _T_22 = bits(_T_21, 1, 0)
        node _T_23 = neq(w_vn[_T_18], w_vn[_T_22]) @[FanCtrl.scala 48:41]
        node _T_24 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 50:27]
        node _T_25 = add(_T_24, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_26 = tail(_T_25, 1) @[FanCtrl.scala 50:33]
        node _T_27 = bits(_T_26, 1, 0)
        node _T_28 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 51:26]
        node _T_29 = add(_T_28, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_30 = tail(_T_29, 1) @[FanCtrl.scala 51:32]
        node _T_31 = bits(_T_30, 1, 0)
        node _T_32 = neq(w_vn[_T_27], w_vn[_T_31]) @[FanCtrl.scala 50:41]
        node _T_33 = and(_T_23, _T_32) @[FanCtrl.scala 49:41]
        when _T_33 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_34 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 55:34]
          node _T_35 = add(_T_34, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_36 = tail(_T_35, 1) @[FanCtrl.scala 55:40]
          node _T_37 = bits(_T_36, 1, 0)
          node _T_38 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 56:32]
          node _T_39 = add(_T_38, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_40 = tail(_T_39, 1) @[FanCtrl.scala 56:38]
          node _T_41 = bits(_T_40, 1, 0)
          node _T_42 = eq(w_vn[_T_37], w_vn[_T_41]) @[FanCtrl.scala 55:48]
          node _T_43 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 57:33]
          node _T_44 = add(_T_43, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_45 = tail(_T_44, 1) @[FanCtrl.scala 57:39]
          node _T_46 = bits(_T_45, 1, 0)
          node _T_47 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 58:32]
          node _T_48 = add(_T_47, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_49 = tail(_T_48, 1) @[FanCtrl.scala 58:38]
          node _T_50 = bits(_T_49, 1, 0)
          node _T_51 = neq(w_vn[_T_46], w_vn[_T_50]) @[FanCtrl.scala 57:46]
          node _T_52 = and(_T_42, _T_51) @[FanCtrl.scala 56:46]
          when _T_52 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_53 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 67:32]
        node _T_54 = tail(_T_53, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_54] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_55 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 77:29]
      node _T_56 = tail(_T_55, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_56] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_57 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_57 : @[FanCtrl.scala 81:34]
        node _T_58 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:25]
        node _T_59 = add(_T_58, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_60 = tail(_T_59, 1) @[FanCtrl.scala 82:31]
        node _T_61 = bits(_T_60, 1, 0)
        node _T_62 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:52]
        node _T_63 = add(_T_62, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_64 = tail(_T_63, 1) @[FanCtrl.scala 82:58]
        node _T_65 = bits(_T_64, 1, 0)
        node _T_66 = eq(w_vn[_T_61], w_vn[_T_65]) @[FanCtrl.scala 82:39]
        when _T_66 : @[FanCtrl.scala 82:66]
          node _T_67 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 83:33]
          node _T_68 = tail(_T_67, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_68] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_69 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 85:33]
          node _T_70 = tail(_T_69, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_70] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_71 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:26]
        node _T_72 = add(_T_71, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_73 = tail(_T_72, 1) @[FanCtrl.scala 88:32]
        node _T_74 = bits(_T_73, 1, 0)
        node _T_75 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:52]
        node _T_76 = sub(_T_75, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_77 = tail(_T_76, 1) @[FanCtrl.scala 88:58]
        node _T_78 = bits(_T_77, 1, 0)
        node _T_79 = neq(w_vn[_T_74], w_vn[_T_78]) @[FanCtrl.scala 88:39]
        node _T_80 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:23]
        node _T_81 = add(_T_80, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_82 = tail(_T_81, 1) @[FanCtrl.scala 89:29]
        node _T_83 = bits(_T_82, 1, 0)
        node _T_84 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:50]
        node _T_85 = add(_T_84, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_86 = tail(_T_85, 1) @[FanCtrl.scala 89:56]
        node _T_87 = bits(_T_86, 1, 0)
        node _T_88 = neq(w_vn[_T_83], w_vn[_T_87]) @[FanCtrl.scala 89:37]
        node _T_89 = and(_T_79, _T_88) @[FanCtrl.scala 88:67]
        when _T_89 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_90 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:32]
          node _T_91 = add(_T_90, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_92 = tail(_T_91, 1) @[FanCtrl.scala 93:38]
          node _T_93 = bits(_T_92, 1, 0)
          node _T_94 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:59]
          node _T_95 = sub(_T_94, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_96 = tail(_T_95, 1) @[FanCtrl.scala 93:65]
          node _T_97 = bits(_T_96, 1, 0)
          node _T_98 = eq(w_vn[_T_93], w_vn[_T_97]) @[FanCtrl.scala 93:46]
          node _T_99 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:23]
          node _T_100 = add(_T_99, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_101 = tail(_T_100, 1) @[FanCtrl.scala 94:29]
          node _T_102 = bits(_T_101, 1, 0)
          node _T_103 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:50]
          node _T_104 = add(_T_103, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_105 = tail(_T_104, 1) @[FanCtrl.scala 94:56]
          node _T_106 = bits(_T_105, 1, 0)
          node _T_107 = neq(w_vn[_T_102], w_vn[_T_106]) @[FanCtrl.scala 94:37]
          node _T_108 = and(_T_98, _T_107) @[FanCtrl.scala 93:73]
          when _T_108 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_109 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 102:31]
        node _T_110 = tail(_T_109, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_110] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_111 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T_111 : @[FanCtrl.scala 40:25]
      node _T_112 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_112 : @[FanCtrl.scala 41:34]
        node _T_113 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:25]
        node _T_114 = add(_T_113, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_115 = tail(_T_114, 1) @[FanCtrl.scala 42:31]
        node _T_116 = bits(_T_115, 1, 0)
        node _T_117 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:52]
        node _T_118 = add(_T_117, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_119 = tail(_T_118, 1) @[FanCtrl.scala 42:58]
        node _T_120 = bits(_T_119, 1, 0)
        node _T_121 = eq(w_vn[_T_116], w_vn[_T_120]) @[FanCtrl.scala 42:39]
        when _T_121 : @[FanCtrl.scala 42:66]
          node _T_122 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 43:34]
          node _T_123 = tail(_T_122, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_123] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_124 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 45:32]
          node _T_125 = tail(_T_124, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_125] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_126 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 48:28]
        node _T_127 = add(_T_126, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_128 = tail(_T_127, 1) @[FanCtrl.scala 48:34]
        node _T_129 = bits(_T_128, 1, 0)
        node _T_130 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 49:26]
        node _T_131 = add(_T_130, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_132 = tail(_T_131, 1) @[FanCtrl.scala 49:32]
        node _T_133 = bits(_T_132, 1, 0)
        node _T_134 = neq(w_vn[_T_129], w_vn[_T_133]) @[FanCtrl.scala 48:41]
        node _T_135 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 50:27]
        node _T_136 = add(_T_135, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_137 = tail(_T_136, 1) @[FanCtrl.scala 50:33]
        node _T_138 = bits(_T_137, 1, 0)
        node _T_139 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 51:26]
        node _T_140 = add(_T_139, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_141 = tail(_T_140, 1) @[FanCtrl.scala 51:32]
        node _T_142 = bits(_T_141, 1, 0)
        node _T_143 = neq(w_vn[_T_138], w_vn[_T_142]) @[FanCtrl.scala 50:41]
        node _T_144 = and(_T_134, _T_143) @[FanCtrl.scala 49:41]
        when _T_144 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_145 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 55:34]
          node _T_146 = add(_T_145, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_147 = tail(_T_146, 1) @[FanCtrl.scala 55:40]
          node _T_148 = bits(_T_147, 1, 0)
          node _T_149 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 56:32]
          node _T_150 = add(_T_149, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_151 = tail(_T_150, 1) @[FanCtrl.scala 56:38]
          node _T_152 = bits(_T_151, 1, 0)
          node _T_153 = eq(w_vn[_T_148], w_vn[_T_152]) @[FanCtrl.scala 55:48]
          node _T_154 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 57:33]
          node _T_155 = add(_T_154, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_156 = tail(_T_155, 1) @[FanCtrl.scala 57:39]
          node _T_157 = bits(_T_156, 1, 0)
          node _T_158 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 58:32]
          node _T_159 = add(_T_158, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_160 = tail(_T_159, 1) @[FanCtrl.scala 58:38]
          node _T_161 = bits(_T_160, 1, 0)
          node _T_162 = neq(w_vn[_T_157], w_vn[_T_161]) @[FanCtrl.scala 57:46]
          node _T_163 = and(_T_153, _T_162) @[FanCtrl.scala 56:46]
          when _T_163 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_164 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 67:32]
        node _T_165 = tail(_T_164, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_165] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_166 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 77:29]
      node _T_167 = tail(_T_166, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_167] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_168 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_168 : @[FanCtrl.scala 81:34]
        node _T_169 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:25]
        node _T_170 = add(_T_169, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_171 = tail(_T_170, 1) @[FanCtrl.scala 82:31]
        node _T_172 = bits(_T_171, 1, 0)
        node _T_173 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:52]
        node _T_174 = add(_T_173, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_175 = tail(_T_174, 1) @[FanCtrl.scala 82:58]
        node _T_176 = bits(_T_175, 1, 0)
        node _T_177 = eq(w_vn[_T_172], w_vn[_T_176]) @[FanCtrl.scala 82:39]
        when _T_177 : @[FanCtrl.scala 82:66]
          node _T_178 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 83:33]
          node _T_179 = tail(_T_178, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_179] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_180 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 85:33]
          node _T_181 = tail(_T_180, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_181] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_182 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:26]
        node _T_183 = add(_T_182, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_184 = tail(_T_183, 1) @[FanCtrl.scala 88:32]
        node _T_185 = bits(_T_184, 1, 0)
        node _T_186 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:52]
        node _T_187 = sub(_T_186, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_188 = tail(_T_187, 1) @[FanCtrl.scala 88:58]
        node _T_189 = bits(_T_188, 1, 0)
        node _T_190 = neq(w_vn[_T_185], w_vn[_T_189]) @[FanCtrl.scala 88:39]
        node _T_191 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:23]
        node _T_192 = add(_T_191, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_193 = tail(_T_192, 1) @[FanCtrl.scala 89:29]
        node _T_194 = bits(_T_193, 1, 0)
        node _T_195 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:50]
        node _T_196 = add(_T_195, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_197 = tail(_T_196, 1) @[FanCtrl.scala 89:56]
        node _T_198 = bits(_T_197, 1, 0)
        node _T_199 = neq(w_vn[_T_194], w_vn[_T_198]) @[FanCtrl.scala 89:37]
        node _T_200 = and(_T_190, _T_199) @[FanCtrl.scala 88:67]
        when _T_200 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_201 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:32]
          node _T_202 = add(_T_201, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_203 = tail(_T_202, 1) @[FanCtrl.scala 93:38]
          node _T_204 = bits(_T_203, 1, 0)
          node _T_205 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:59]
          node _T_206 = sub(_T_205, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_207 = tail(_T_206, 1) @[FanCtrl.scala 93:65]
          node _T_208 = bits(_T_207, 1, 0)
          node _T_209 = eq(w_vn[_T_204], w_vn[_T_208]) @[FanCtrl.scala 93:46]
          node _T_210 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:23]
          node _T_211 = add(_T_210, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_212 = tail(_T_211, 1) @[FanCtrl.scala 94:29]
          node _T_213 = bits(_T_212, 1, 0)
          node _T_214 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:50]
          node _T_215 = add(_T_214, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_216 = tail(_T_215, 1) @[FanCtrl.scala 94:56]
          node _T_217 = bits(_T_216, 1, 0)
          node _T_218 = neq(w_vn[_T_213], w_vn[_T_217]) @[FanCtrl.scala 94:37]
          node _T_219 = and(_T_209, _T_218) @[FanCtrl.scala 93:73]
          when _T_219 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_220 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 102:31]
        node _T_221 = tail(_T_220, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_221] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_222 = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 112:14]
    when _T_222 : @[FanCtrl.scala 112:23]
      node _T_223 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 113:27]
      node _T_224 = tail(_T_223, 1) @[FanCtrl.scala 113:27]
      r_reduction_add[_T_224] <= UInt<1>("h0") @[FanCtrl.scala 113:34]
      node _T_225 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 114:28]
      node _T_226 = tail(_T_225, 1) @[FanCtrl.scala 114:28]
      r_reduction_cmd[_T_226] <= UInt<1>("h0") @[FanCtrl.scala 114:35]
      node _T_227 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 116:23]
      when _T_227 : @[FanCtrl.scala 116:32]
        node _T_228 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:23]
        node _T_229 = add(_T_228, UInt<1>("h1")) @[FanCtrl.scala 117:29]
        node _T_230 = tail(_T_229, 1) @[FanCtrl.scala 117:29]
        node _T_231 = bits(_T_230, 1, 0)
        node _T_232 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:50]
        node _T_233 = add(_T_232, UInt<2>("h2")) @[FanCtrl.scala 117:56]
        node _T_234 = tail(_T_233, 1) @[FanCtrl.scala 117:56]
        node _T_235 = bits(_T_234, 1, 0)
        node _T_236 = eq(w_vn[_T_231], w_vn[_T_235]) @[FanCtrl.scala 117:37]
        when _T_236 : @[FanCtrl.scala 117:65]
          node _T_237 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 118:31]
          node _T_238 = tail(_T_237, 1) @[FanCtrl.scala 118:31]
          r_reduction_add[_T_238] <= UInt<1>("h1") @[FanCtrl.scala 118:38]
        else :
          node _T_239 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 120:31]
          node _T_240 = tail(_T_239, 1) @[FanCtrl.scala 120:31]
          r_reduction_add[_T_240] <= UInt<1>("h0") @[FanCtrl.scala 120:38]
        node _T_241 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:24]
        node _T_242 = add(_T_241, UInt<1>("h0")) @[FanCtrl.scala 123:30]
        node _T_243 = tail(_T_242, 1) @[FanCtrl.scala 123:30]
        node _T_244 = bits(_T_243, 1, 0)
        node _T_245 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:51]
        node _T_246 = add(_T_245, UInt<1>("h1")) @[FanCtrl.scala 123:57]
        node _T_247 = tail(_T_246, 1) @[FanCtrl.scala 123:57]
        node _T_248 = bits(_T_247, 1, 0)
        node _T_249 = eq(w_vn[_T_244], w_vn[_T_248]) @[FanCtrl.scala 123:38]
        node _T_250 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:23]
        node _T_251 = add(_T_250, UInt<2>("h2")) @[FanCtrl.scala 124:29]
        node _T_252 = tail(_T_251, 1) @[FanCtrl.scala 124:29]
        node _T_253 = bits(_T_252, 1, 0)
        node _T_254 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:49]
        node _T_255 = add(_T_254, UInt<2>("h3")) @[FanCtrl.scala 124:55]
        node _T_256 = tail(_T_255, 1) @[FanCtrl.scala 124:55]
        node _T_257 = bits(_T_256, 1, 0)
        node _T_258 = eq(w_vn[_T_253], w_vn[_T_257]) @[FanCtrl.scala 124:36]
        node _T_259 = and(_T_249, _T_258) @[FanCtrl.scala 123:65]
        node _T_260 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:23]
        node _T_261 = add(_T_260, UInt<3>("h4")) @[FanCtrl.scala 125:29]
        node _T_262 = tail(_T_261, 1) @[FanCtrl.scala 125:29]
        node _T_263 = bits(_T_262, 1, 0)
        node _T_264 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:50]
        node _T_265 = add(_T_264, UInt<2>("h3")) @[FanCtrl.scala 125:56]
        node _T_266 = tail(_T_265, 1) @[FanCtrl.scala 125:56]
        node _T_267 = bits(_T_266, 1, 0)
        node _T_268 = neq(w_vn[_T_263], w_vn[_T_267]) @[FanCtrl.scala 125:37]
        node _T_269 = and(_T_259, _T_268) @[FanCtrl.scala 124:64]
        node _T_270 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:23]
        node _T_271 = add(_T_270, UInt<1>("h1")) @[FanCtrl.scala 126:29]
        node _T_272 = tail(_T_271, 1) @[FanCtrl.scala 126:29]
        node _T_273 = bits(_T_272, 1, 0)
        node _T_274 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:51]
        node _T_275 = add(_T_274, UInt<2>("h2")) @[FanCtrl.scala 126:57]
        node _T_276 = tail(_T_275, 1) @[FanCtrl.scala 126:57]
        node _T_277 = bits(_T_276, 1, 0)
        node _T_278 = neq(w_vn[_T_273], w_vn[_T_277]) @[FanCtrl.scala 126:37]
        node _T_279 = and(_T_269, _T_278) @[FanCtrl.scala 125:64]
        when _T_279 : @[FanCtrl.scala 126:66]
          node _T_280 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 128:31]
          node _T_281 = tail(_T_280, 1) @[FanCtrl.scala 128:31]
          r_reduction_cmd[_T_281] <= UInt<3>("h5") @[FanCtrl.scala 128:39]
        else :
          node _T_282 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:30]
          node _T_283 = add(_T_282, UInt<2>("h2")) @[FanCtrl.scala 130:36]
          node _T_284 = tail(_T_283, 1) @[FanCtrl.scala 130:36]
          node _T_285 = bits(_T_284, 1, 0)
          node _T_286 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:57]
          node _T_287 = add(_T_286, UInt<2>("h3")) @[FanCtrl.scala 130:63]
          node _T_288 = tail(_T_287, 1) @[FanCtrl.scala 130:63]
          node _T_289 = bits(_T_288, 1, 0)
          node _T_290 = eq(w_vn[_T_285], w_vn[_T_289]) @[FanCtrl.scala 130:44]
          node _T_291 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:29]
          node _T_292 = add(_T_291, UInt<3>("h4")) @[FanCtrl.scala 131:35]
          node _T_293 = tail(_T_292, 1) @[FanCtrl.scala 131:35]
          node _T_294 = bits(_T_293, 1, 0)
          node _T_295 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:57]
          node _T_296 = add(_T_295, UInt<2>("h3")) @[FanCtrl.scala 131:63]
          node _T_297 = tail(_T_296, 1) @[FanCtrl.scala 131:63]
          node _T_298 = bits(_T_297, 1, 0)
          node _T_299 = neq(w_vn[_T_294], w_vn[_T_298]) @[FanCtrl.scala 131:43]
          node _T_300 = and(_T_290, _T_299) @[FanCtrl.scala 130:71]
          node _T_301 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:29]
          node _T_302 = add(_T_301, UInt<1>("h1")) @[FanCtrl.scala 132:35]
          node _T_303 = tail(_T_302, 1) @[FanCtrl.scala 132:35]
          node _T_304 = bits(_T_303, 1, 0)
          node _T_305 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:57]
          node _T_306 = add(_T_305, UInt<2>("h2")) @[FanCtrl.scala 132:63]
          node _T_307 = tail(_T_306, 1) @[FanCtrl.scala 132:63]
          node _T_308 = bits(_T_307, 1, 0)
          node _T_309 = neq(w_vn[_T_304], w_vn[_T_308]) @[FanCtrl.scala 132:43]
          node _T_310 = and(_T_300, _T_309) @[FanCtrl.scala 131:71]
          when _T_310 : @[FanCtrl.scala 132:72]
            node _T_311 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 134:31]
            node _T_312 = tail(_T_311, 1) @[FanCtrl.scala 134:31]
            r_reduction_cmd[_T_312] <= UInt<3>("h4") @[FanCtrl.scala 134:38]
          else :
            node _T_313 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:30]
            node _T_314 = add(_T_313, UInt<1>("h0")) @[FanCtrl.scala 136:36]
            node _T_315 = tail(_T_314, 1) @[FanCtrl.scala 136:36]
            node _T_316 = bits(_T_315, 1, 0)
            node _T_317 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:56]
            node _T_318 = add(_T_317, UInt<1>("h1")) @[FanCtrl.scala 136:62]
            node _T_319 = tail(_T_318, 1) @[FanCtrl.scala 136:62]
            node _T_320 = bits(_T_319, 1, 0)
            node _T_321 = eq(w_vn[_T_316], w_vn[_T_320]) @[FanCtrl.scala 136:43]
            node _T_322 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:29]
            node _T_323 = add(_T_322, UInt<1>("h1")) @[FanCtrl.scala 137:35]
            node _T_324 = tail(_T_323, 1) @[FanCtrl.scala 137:35]
            node _T_325 = bits(_T_324, 1, 0)
            node _T_326 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:57]
            node _T_327 = add(_T_326, UInt<2>("h2")) @[FanCtrl.scala 137:63]
            node _T_328 = tail(_T_327, 1) @[FanCtrl.scala 137:63]
            node _T_329 = bits(_T_328, 1, 0)
            node _T_330 = neq(w_vn[_T_325], w_vn[_T_329]) @[FanCtrl.scala 137:43]
            node _T_331 = and(_T_321, _T_330) @[FanCtrl.scala 136:71]
            when _T_331 : @[FanCtrl.scala 137:72]
              node _T_332 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 139:31]
              node _T_333 = tail(_T_332, 1) @[FanCtrl.scala 139:31]
              r_reduction_cmd[_T_333] <= UInt<2>("h3") @[FanCtrl.scala 139:38]
            else :
              node _T_334 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 141:30]
              node _T_335 = tail(_T_334, 1) @[FanCtrl.scala 141:30]
              r_reduction_cmd[_T_335] <= UInt<1>("h0") @[FanCtrl.scala 141:36]
      else :
        node _T_336 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 144:29]
        node _T_337 = tail(_T_336, 1) @[FanCtrl.scala 144:29]
        r_reduction_add[_T_337] <= UInt<1>("h0") @[FanCtrl.scala 144:36]
        node _T_338 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 145:30]
        node _T_339 = tail(_T_338, 1) @[FanCtrl.scala 145:30]
        r_reduction_cmd[_T_339] <= UInt<1>("h0") @[FanCtrl.scala 145:37]
    wire _WIRE : UInt<1>[8] @[FanCtrl.scala 157:30]
    _WIRE[0] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[1] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[2] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[3] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[4] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[5] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[6] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[7] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    r_add_lvl_0Reg <= _WIRE @[FanCtrl.scala 157:20]
    wire _WIRE_1 : UInt<1>[5] @[FanCtrl.scala 168:30]
    _WIRE_1[0] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[1] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[2] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[3] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[4] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    r_add_lvl_1Reg <= _WIRE_1 @[FanCtrl.scala 168:20]
    wire _WIRE_2 : UInt<3>[8] @[FanCtrl.scala 185:30]
    _WIRE_2[0] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[1] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[2] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[3] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[4] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[5] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[6] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[7] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    r_cmd_lvl_0Reg <= _WIRE_2 @[FanCtrl.scala 185:20]
    wire _WIRE_3 : UInt<3>[5] @[FanCtrl.scala 199:30]
    _WIRE_3[0] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[1] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[2] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[3] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[4] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    r_cmd_lvl_1Reg <= _WIRE_3 @[FanCtrl.scala 199:20]
    node _T_340 = eq(io.i_stationary, UInt<1>("h0")) @[FanCtrl.scala 213:26]
    node _T_341 = eq(io.i_data_valid, UInt<1>("h1")) @[FanCtrl.scala 213:53]
    node _T_342 = and(_T_340, _T_341) @[FanCtrl.scala 213:34]
    when _T_342 : @[FanCtrl.scala 213:62]
      r_valid[0] <= UInt<1>("h1") @[FanCtrl.scala 214:18]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanCtrl.scala 216:18]
    r_valid[1] <= r_valid[0] @[FanCtrl.scala 222:24]
    r_valid[2] <= r_valid[1] @[FanCtrl.scala 222:24]
    r_valid[3] <= r_valid[2] @[FanCtrl.scala 222:24]
    r_valid[4] <= r_valid[3] @[FanCtrl.scala 222:24]
    io.o_reduction_valid <= r_valid[3] @[FanCtrl.scala 226:26]
    wire _WIRE_4 : UInt<1>[3] @[FanCtrl.scala 227:35]
    _WIRE_4[0] <= r_add_lvl_0Reg[6] @[FanCtrl.scala 227:35]
    _WIRE_4[1] <= r_add_lvl_0Reg[7] @[FanCtrl.scala 227:35]
    _WIRE_4[2] <= r_add_lvl_1Reg[4] @[FanCtrl.scala 227:35]
    io.o_reduction_add <= _WIRE_4 @[FanCtrl.scala 227:24]
    wire _WIRE_5 : UInt<3>[3] @[FanCtrl.scala 236:34]
    _WIRE_5[0] <= r_cmd_lvl_0Reg[6] @[FanCtrl.scala 236:34]
    _WIRE_5[1] <= r_cmd_lvl_0Reg[7] @[FanCtrl.scala 236:34]
    _WIRE_5[2] <= r_cmd_lvl_1Reg[4] @[FanCtrl.scala 236:34]
    io.o_reduction_cmd <= _WIRE_5 @[FanCtrl.scala 236:24]

  module Benes_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data_bus2 : UInt<16>[4], flip i_data_bus1 : UInt<16>[4], flip i_mux_bus : UInt<4>[4], o_dist_bus1 : UInt<16>[4], o_dist_bus2 : UInt<16>[4]}

    io.o_dist_bus1 <= io.i_data_bus1 @[Benes.scala 16:18]
    wire _parse_array_WIRE : UInt<16>[5] @[Benes.scala 19:37]
    _parse_array_WIRE[0] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[1] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[2] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[3] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[4] <= UInt<16>("h0") @[Benes.scala 19:37]
    wire parse_array : UInt<16>[5]
    parse_array <= _parse_array_WIRE
    node _T = neq(io.i_data_bus2[1], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T : @[Benes.scala 56:39]
      node _T_1 = orr(io.i_mux_bus[1]) @[Benes.scala 58:31]
      when _T_1 : @[Benes.scala 58:35]
        node _T_2 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 60:36]
        when _T_2 : @[Benes.scala 60:61]
          node _parsedindexvalue_T = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_1 = tail(_parsedindexvalue_T, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_1 = rem(_parsedindexvalue_T_1, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_2 = eq(_parsedindexvalue_first_stage_T_1, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_3 = add(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_4 = tail(_parsedindexvalue_first_stage_T_3, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_5 = sub(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_6 = tail(_parsedindexvalue_first_stage_T_5, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_7 = mux(_parsedindexvalue_first_stage_T_2, _parsedindexvalue_first_stage_T_4, _parsedindexvalue_first_stage_T_6) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage = mux(_parsedindexvalue_first_stage_T, _parsedindexvalue_first_stage_T_7, _parsedindexvalue_T_1) @[Benes.scala 24:26]
          node _parsedindexvalue_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_1 = bits(_parsedindexvalue_boolArray_T, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_3 = bits(_parsedindexvalue_boolArray_T_2, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray[0] <= _parsedindexvalue_boolArray_T_1 @[Benes.scala 28:28]
          parsedindexvalue_boolArray[1] <= _parsedindexvalue_boolArray_T_3 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage : UInt
          parsedindexvalue_second_stage <= parsedindexvalue_first_stage
          node parsedindexvalue_calculation = rem(parsedindexvalue_second_stage, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_1 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_2 = and(_parsedindexvalue_nextIndex_T, _parsedindexvalue_nextIndex_T_1) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_3 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_4 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_5 = and(_parsedindexvalue_nextIndex_T_3, _parsedindexvalue_nextIndex_T_4) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_6 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_7 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_8 = and(_parsedindexvalue_nextIndex_T_6, _parsedindexvalue_nextIndex_T_7) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_9 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_10 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_11 = and(_parsedindexvalue_nextIndex_T_9, _parsedindexvalue_nextIndex_T_10) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_12 = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_13 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_14 = and(_parsedindexvalue_nextIndex_T_12, _parsedindexvalue_nextIndex_T_13) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_15 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_16 = tail(_parsedindexvalue_nextIndex_T_15, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_17 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_18 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_19 = and(_parsedindexvalue_nextIndex_T_17, _parsedindexvalue_nextIndex_T_18) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_20 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_21 = tail(_parsedindexvalue_nextIndex_T_20, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_22 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_23 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_24 = and(_parsedindexvalue_nextIndex_T_22, _parsedindexvalue_nextIndex_T_23) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_25 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_26 = tail(_parsedindexvalue_nextIndex_T_25, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_27 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_28 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_29 = and(_parsedindexvalue_nextIndex_T_27, _parsedindexvalue_nextIndex_T_28) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_30 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_31 = tail(_parsedindexvalue_nextIndex_T_30, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_32 = mux(_parsedindexvalue_nextIndex_T_29, _parsedindexvalue_nextIndex_T_31, parsedindexvalue_second_stage) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_33 = mux(_parsedindexvalue_nextIndex_T_24, _parsedindexvalue_nextIndex_T_26, _parsedindexvalue_nextIndex_T_32) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_34 = mux(_parsedindexvalue_nextIndex_T_19, _parsedindexvalue_nextIndex_T_21, _parsedindexvalue_nextIndex_T_33) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_35 = mux(_parsedindexvalue_nextIndex_T_14, _parsedindexvalue_nextIndex_T_16, _parsedindexvalue_nextIndex_T_34) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_36 = mux(_parsedindexvalue_nextIndex_T_11, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_35) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_37 = mux(_parsedindexvalue_nextIndex_T_8, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_36) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_38 = mux(_parsedindexvalue_nextIndex_T_5, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_37) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex = mux(_parsedindexvalue_nextIndex_T_2, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_38) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_1 = rem(parsedindexvalue_nextIndex, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_39 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_40 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_41 = and(_parsedindexvalue_nextIndex_T_39, _parsedindexvalue_nextIndex_T_40) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_42 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_43 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_44 = and(_parsedindexvalue_nextIndex_T_42, _parsedindexvalue_nextIndex_T_43) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_45 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_46 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_47 = and(_parsedindexvalue_nextIndex_T_45, _parsedindexvalue_nextIndex_T_46) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_48 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_49 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_50 = and(_parsedindexvalue_nextIndex_T_48, _parsedindexvalue_nextIndex_T_49) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_51 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_52 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_53 = and(_parsedindexvalue_nextIndex_T_51, _parsedindexvalue_nextIndex_T_52) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_54 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_55 = tail(_parsedindexvalue_nextIndex_T_54, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_56 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_57 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_58 = and(_parsedindexvalue_nextIndex_T_56, _parsedindexvalue_nextIndex_T_57) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_59 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_60 = tail(_parsedindexvalue_nextIndex_T_59, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_61 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_62 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_63 = and(_parsedindexvalue_nextIndex_T_61, _parsedindexvalue_nextIndex_T_62) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_64 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_65 = tail(_parsedindexvalue_nextIndex_T_64, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_66 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_67 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_68 = and(_parsedindexvalue_nextIndex_T_66, _parsedindexvalue_nextIndex_T_67) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_69 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_70 = tail(_parsedindexvalue_nextIndex_T_69, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_71 = mux(_parsedindexvalue_nextIndex_T_68, _parsedindexvalue_nextIndex_T_70, parsedindexvalue_nextIndex) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_72 = mux(_parsedindexvalue_nextIndex_T_63, _parsedindexvalue_nextIndex_T_65, _parsedindexvalue_nextIndex_T_71) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_73 = mux(_parsedindexvalue_nextIndex_T_58, _parsedindexvalue_nextIndex_T_60, _parsedindexvalue_nextIndex_T_72) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_74 = mux(_parsedindexvalue_nextIndex_T_53, _parsedindexvalue_nextIndex_T_55, _parsedindexvalue_nextIndex_T_73) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_75 = mux(_parsedindexvalue_nextIndex_T_50, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_74) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_76 = mux(_parsedindexvalue_nextIndex_T_47, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_75) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_77 = mux(_parsedindexvalue_nextIndex_T_44, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_76) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_1 = mux(_parsedindexvalue_nextIndex_T_41, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_77) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_1 = rem(parsedindexvalue_nextIndex_1, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_2 = eq(_parsedindexvalue_third_stage_T_1, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_3 = add(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_4 = tail(_parsedindexvalue_third_stage_T_3, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_5 = sub(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_6 = tail(_parsedindexvalue_third_stage_T_5, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_7 = mux(_parsedindexvalue_third_stage_T_2, _parsedindexvalue_third_stage_T_4, _parsedindexvalue_third_stage_T_6) @[Benes.scala 48:47]
          node parsedindexvalue = mux(_parsedindexvalue_third_stage_T, _parsedindexvalue_third_stage_T_7, parsedindexvalue_nextIndex_1) @[Benes.scala 48:24]
          node _T_3 = or(parsedindexvalue, UInt<3>("h0"))
          node _T_4 = bits(_T_3, 2, 0)
          parse_array[_T_4] <= io.i_data_bus2[1] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_8 = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_9 = rem(UInt<1>("h1"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_10 = eq(_parsedindexvalue_first_stage_T_9, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_11 = add(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_12 = tail(_parsedindexvalue_first_stage_T_11, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_13 = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_14 = tail(_parsedindexvalue_first_stage_T_13, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_15 = mux(_parsedindexvalue_first_stage_T_10, _parsedindexvalue_first_stage_T_12, _parsedindexvalue_first_stage_T_14) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_1 = mux(_parsedindexvalue_first_stage_T_8, _parsedindexvalue_first_stage_T_15, UInt<1>("h1")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_3 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_4 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_5 = bits(_parsedindexvalue_boolArray_T_4, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_6 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_7 = bits(_parsedindexvalue_boolArray_T_6, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_1 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[0] <= _parsedindexvalue_boolArray_T_5 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[1] <= _parsedindexvalue_boolArray_T_7 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_1 : UInt
          parsedindexvalue_second_stage_1 <= parsedindexvalue_first_stage_1
          node parsedindexvalue_calculation_2 = rem(parsedindexvalue_second_stage_1, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_78 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_79 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_80 = and(_parsedindexvalue_nextIndex_T_78, _parsedindexvalue_nextIndex_T_79) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_81 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_82 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_83 = and(_parsedindexvalue_nextIndex_T_81, _parsedindexvalue_nextIndex_T_82) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_84 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_85 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_86 = and(_parsedindexvalue_nextIndex_T_84, _parsedindexvalue_nextIndex_T_85) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_87 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_88 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_89 = and(_parsedindexvalue_nextIndex_T_87, _parsedindexvalue_nextIndex_T_88) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_90 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_91 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_92 = and(_parsedindexvalue_nextIndex_T_90, _parsedindexvalue_nextIndex_T_91) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_93 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_94 = tail(_parsedindexvalue_nextIndex_T_93, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_95 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_96 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_97 = and(_parsedindexvalue_nextIndex_T_95, _parsedindexvalue_nextIndex_T_96) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_98 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_99 = tail(_parsedindexvalue_nextIndex_T_98, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_100 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_101 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_102 = and(_parsedindexvalue_nextIndex_T_100, _parsedindexvalue_nextIndex_T_101) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_103 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_104 = tail(_parsedindexvalue_nextIndex_T_103, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_105 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_106 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_107 = and(_parsedindexvalue_nextIndex_T_105, _parsedindexvalue_nextIndex_T_106) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_108 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_109 = tail(_parsedindexvalue_nextIndex_T_108, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_110 = mux(_parsedindexvalue_nextIndex_T_107, _parsedindexvalue_nextIndex_T_109, parsedindexvalue_second_stage_1) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_111 = mux(_parsedindexvalue_nextIndex_T_102, _parsedindexvalue_nextIndex_T_104, _parsedindexvalue_nextIndex_T_110) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_112 = mux(_parsedindexvalue_nextIndex_T_97, _parsedindexvalue_nextIndex_T_99, _parsedindexvalue_nextIndex_T_111) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_113 = mux(_parsedindexvalue_nextIndex_T_92, _parsedindexvalue_nextIndex_T_94, _parsedindexvalue_nextIndex_T_112) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_114 = mux(_parsedindexvalue_nextIndex_T_89, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_113) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_115 = mux(_parsedindexvalue_nextIndex_T_86, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_114) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_116 = mux(_parsedindexvalue_nextIndex_T_83, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_115) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_2 = mux(_parsedindexvalue_nextIndex_T_80, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_116) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_3 = rem(parsedindexvalue_nextIndex_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_117 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_118 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_119 = and(_parsedindexvalue_nextIndex_T_117, _parsedindexvalue_nextIndex_T_118) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_120 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_121 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_122 = and(_parsedindexvalue_nextIndex_T_120, _parsedindexvalue_nextIndex_T_121) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_123 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_124 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_125 = and(_parsedindexvalue_nextIndex_T_123, _parsedindexvalue_nextIndex_T_124) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_126 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_127 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_128 = and(_parsedindexvalue_nextIndex_T_126, _parsedindexvalue_nextIndex_T_127) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_129 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_130 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_131 = and(_parsedindexvalue_nextIndex_T_129, _parsedindexvalue_nextIndex_T_130) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_132 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_133 = tail(_parsedindexvalue_nextIndex_T_132, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_134 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_135 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_136 = and(_parsedindexvalue_nextIndex_T_134, _parsedindexvalue_nextIndex_T_135) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_137 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_138 = tail(_parsedindexvalue_nextIndex_T_137, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_139 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_140 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_141 = and(_parsedindexvalue_nextIndex_T_139, _parsedindexvalue_nextIndex_T_140) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_142 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_143 = tail(_parsedindexvalue_nextIndex_T_142, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_144 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_145 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_146 = and(_parsedindexvalue_nextIndex_T_144, _parsedindexvalue_nextIndex_T_145) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_147 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_148 = tail(_parsedindexvalue_nextIndex_T_147, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_149 = mux(_parsedindexvalue_nextIndex_T_146, _parsedindexvalue_nextIndex_T_148, parsedindexvalue_nextIndex_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_150 = mux(_parsedindexvalue_nextIndex_T_141, _parsedindexvalue_nextIndex_T_143, _parsedindexvalue_nextIndex_T_149) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_151 = mux(_parsedindexvalue_nextIndex_T_136, _parsedindexvalue_nextIndex_T_138, _parsedindexvalue_nextIndex_T_150) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_152 = mux(_parsedindexvalue_nextIndex_T_131, _parsedindexvalue_nextIndex_T_133, _parsedindexvalue_nextIndex_T_151) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_153 = mux(_parsedindexvalue_nextIndex_T_128, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_152) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_154 = mux(_parsedindexvalue_nextIndex_T_125, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_153) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_155 = mux(_parsedindexvalue_nextIndex_T_122, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_154) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_3 = mux(_parsedindexvalue_nextIndex_T_119, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_155) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_8 = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_9 = rem(parsedindexvalue_nextIndex_3, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_10 = eq(_parsedindexvalue_third_stage_T_9, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_11 = add(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_12 = tail(_parsedindexvalue_third_stage_T_11, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_13 = sub(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_14 = tail(_parsedindexvalue_third_stage_T_13, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_15 = mux(_parsedindexvalue_third_stage_T_10, _parsedindexvalue_third_stage_T_12, _parsedindexvalue_third_stage_T_14) @[Benes.scala 48:47]
          node parsedindexvalue_1 = mux(_parsedindexvalue_third_stage_T_8, _parsedindexvalue_third_stage_T_15, parsedindexvalue_nextIndex_3) @[Benes.scala 48:24]
          node _T_5 = or(parsedindexvalue_1, UInt<3>("h0"))
          node _T_6 = bits(_T_5, 2, 0)
          parse_array[_T_6] <= io.i_data_bus2[1] @[Benes.scala 67:47]
      else :
        node _T_7 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 72:35]
        when _T_7 : @[Benes.scala 72:60]
          parse_array[1] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[1] <= io.i_data_bus2[1] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_8 = neq(io.i_data_bus2[2], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_8 : @[Benes.scala 56:39]
      node _T_9 = orr(io.i_mux_bus[2]) @[Benes.scala 58:31]
      when _T_9 : @[Benes.scala 58:35]
        node _T_10 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 60:36]
        when _T_10 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_4 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_5 = tail(_parsedindexvalue_T_4, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_16 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_17 = rem(_parsedindexvalue_T_5, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_18 = eq(_parsedindexvalue_first_stage_T_17, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_19 = add(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_20 = tail(_parsedindexvalue_first_stage_T_19, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_21 = sub(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_22 = tail(_parsedindexvalue_first_stage_T_21, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_23 = mux(_parsedindexvalue_first_stage_T_18, _parsedindexvalue_first_stage_T_20, _parsedindexvalue_first_stage_T_22) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_2 = mux(_parsedindexvalue_first_stage_T_16, _parsedindexvalue_first_stage_T_23, _parsedindexvalue_T_5) @[Benes.scala 24:26]
          node _parsedindexvalue_T_6 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_8 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_9 = bits(_parsedindexvalue_boolArray_T_8, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_10 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_11 = bits(_parsedindexvalue_boolArray_T_10, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_2 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[0] <= _parsedindexvalue_boolArray_T_9 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[1] <= _parsedindexvalue_boolArray_T_11 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_2 : UInt
          parsedindexvalue_second_stage_2 <= parsedindexvalue_first_stage_2
          node parsedindexvalue_calculation_4 = rem(parsedindexvalue_second_stage_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_156 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_157 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_158 = and(_parsedindexvalue_nextIndex_T_156, _parsedindexvalue_nextIndex_T_157) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_159 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_160 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_161 = and(_parsedindexvalue_nextIndex_T_159, _parsedindexvalue_nextIndex_T_160) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_162 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_163 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_164 = and(_parsedindexvalue_nextIndex_T_162, _parsedindexvalue_nextIndex_T_163) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_165 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_166 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_167 = and(_parsedindexvalue_nextIndex_T_165, _parsedindexvalue_nextIndex_T_166) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_168 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_169 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_170 = and(_parsedindexvalue_nextIndex_T_168, _parsedindexvalue_nextIndex_T_169) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_171 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_172 = tail(_parsedindexvalue_nextIndex_T_171, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_173 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_174 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_175 = and(_parsedindexvalue_nextIndex_T_173, _parsedindexvalue_nextIndex_T_174) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_176 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_177 = tail(_parsedindexvalue_nextIndex_T_176, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_178 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_179 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_180 = and(_parsedindexvalue_nextIndex_T_178, _parsedindexvalue_nextIndex_T_179) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_181 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_182 = tail(_parsedindexvalue_nextIndex_T_181, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_183 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_184 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_185 = and(_parsedindexvalue_nextIndex_T_183, _parsedindexvalue_nextIndex_T_184) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_186 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_187 = tail(_parsedindexvalue_nextIndex_T_186, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_188 = mux(_parsedindexvalue_nextIndex_T_185, _parsedindexvalue_nextIndex_T_187, parsedindexvalue_second_stage_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_189 = mux(_parsedindexvalue_nextIndex_T_180, _parsedindexvalue_nextIndex_T_182, _parsedindexvalue_nextIndex_T_188) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_190 = mux(_parsedindexvalue_nextIndex_T_175, _parsedindexvalue_nextIndex_T_177, _parsedindexvalue_nextIndex_T_189) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_191 = mux(_parsedindexvalue_nextIndex_T_170, _parsedindexvalue_nextIndex_T_172, _parsedindexvalue_nextIndex_T_190) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_192 = mux(_parsedindexvalue_nextIndex_T_167, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_191) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_193 = mux(_parsedindexvalue_nextIndex_T_164, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_192) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_194 = mux(_parsedindexvalue_nextIndex_T_161, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_193) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_4 = mux(_parsedindexvalue_nextIndex_T_158, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_194) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_5 = rem(parsedindexvalue_nextIndex_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_195 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_196 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_197 = and(_parsedindexvalue_nextIndex_T_195, _parsedindexvalue_nextIndex_T_196) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_198 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_199 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_200 = and(_parsedindexvalue_nextIndex_T_198, _parsedindexvalue_nextIndex_T_199) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_201 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_202 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_203 = and(_parsedindexvalue_nextIndex_T_201, _parsedindexvalue_nextIndex_T_202) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_204 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_205 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_206 = and(_parsedindexvalue_nextIndex_T_204, _parsedindexvalue_nextIndex_T_205) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_207 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_208 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_209 = and(_parsedindexvalue_nextIndex_T_207, _parsedindexvalue_nextIndex_T_208) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_210 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_211 = tail(_parsedindexvalue_nextIndex_T_210, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_212 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_213 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_214 = and(_parsedindexvalue_nextIndex_T_212, _parsedindexvalue_nextIndex_T_213) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_215 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_216 = tail(_parsedindexvalue_nextIndex_T_215, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_217 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_218 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_219 = and(_parsedindexvalue_nextIndex_T_217, _parsedindexvalue_nextIndex_T_218) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_220 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_221 = tail(_parsedindexvalue_nextIndex_T_220, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_222 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_223 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_224 = and(_parsedindexvalue_nextIndex_T_222, _parsedindexvalue_nextIndex_T_223) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_225 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_226 = tail(_parsedindexvalue_nextIndex_T_225, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_227 = mux(_parsedindexvalue_nextIndex_T_224, _parsedindexvalue_nextIndex_T_226, parsedindexvalue_nextIndex_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_228 = mux(_parsedindexvalue_nextIndex_T_219, _parsedindexvalue_nextIndex_T_221, _parsedindexvalue_nextIndex_T_227) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_229 = mux(_parsedindexvalue_nextIndex_T_214, _parsedindexvalue_nextIndex_T_216, _parsedindexvalue_nextIndex_T_228) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_230 = mux(_parsedindexvalue_nextIndex_T_209, _parsedindexvalue_nextIndex_T_211, _parsedindexvalue_nextIndex_T_229) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_231 = mux(_parsedindexvalue_nextIndex_T_206, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_230) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_232 = mux(_parsedindexvalue_nextIndex_T_203, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_231) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_233 = mux(_parsedindexvalue_nextIndex_T_200, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_232) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_5 = mux(_parsedindexvalue_nextIndex_T_197, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_233) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_16 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_17 = rem(parsedindexvalue_nextIndex_5, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_18 = eq(_parsedindexvalue_third_stage_T_17, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_19 = add(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_20 = tail(_parsedindexvalue_third_stage_T_19, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_21 = sub(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_22 = tail(_parsedindexvalue_third_stage_T_21, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_23 = mux(_parsedindexvalue_third_stage_T_18, _parsedindexvalue_third_stage_T_20, _parsedindexvalue_third_stage_T_22) @[Benes.scala 48:47]
          node parsedindexvalue_2 = mux(_parsedindexvalue_third_stage_T_16, _parsedindexvalue_third_stage_T_23, parsedindexvalue_nextIndex_5) @[Benes.scala 48:24]
          node _T_11 = or(parsedindexvalue_2, UInt<3>("h0"))
          node _T_12 = bits(_T_11, 2, 0)
          parse_array[_T_12] <= io.i_data_bus2[2] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_24 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_25 = rem(UInt<2>("h2"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_26 = eq(_parsedindexvalue_first_stage_T_25, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_27 = add(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_28 = tail(_parsedindexvalue_first_stage_T_27, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_29 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_30 = tail(_parsedindexvalue_first_stage_T_29, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_31 = mux(_parsedindexvalue_first_stage_T_26, _parsedindexvalue_first_stage_T_28, _parsedindexvalue_first_stage_T_30) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_3 = mux(_parsedindexvalue_first_stage_T_24, _parsedindexvalue_first_stage_T_31, UInt<2>("h2")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_7 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_12 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_13 = bits(_parsedindexvalue_boolArray_T_12, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_14 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_15 = bits(_parsedindexvalue_boolArray_T_14, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_3 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[0] <= _parsedindexvalue_boolArray_T_13 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[1] <= _parsedindexvalue_boolArray_T_15 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_3 : UInt
          parsedindexvalue_second_stage_3 <= parsedindexvalue_first_stage_3
          node parsedindexvalue_calculation_6 = rem(parsedindexvalue_second_stage_3, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_234 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_235 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_236 = and(_parsedindexvalue_nextIndex_T_234, _parsedindexvalue_nextIndex_T_235) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_237 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_238 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_239 = and(_parsedindexvalue_nextIndex_T_237, _parsedindexvalue_nextIndex_T_238) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_240 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_241 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_242 = and(_parsedindexvalue_nextIndex_T_240, _parsedindexvalue_nextIndex_T_241) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_243 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_244 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_245 = and(_parsedindexvalue_nextIndex_T_243, _parsedindexvalue_nextIndex_T_244) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_246 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_247 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_248 = and(_parsedindexvalue_nextIndex_T_246, _parsedindexvalue_nextIndex_T_247) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_249 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_250 = tail(_parsedindexvalue_nextIndex_T_249, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_251 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_252 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_253 = and(_parsedindexvalue_nextIndex_T_251, _parsedindexvalue_nextIndex_T_252) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_254 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_255 = tail(_parsedindexvalue_nextIndex_T_254, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_256 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_257 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_258 = and(_parsedindexvalue_nextIndex_T_256, _parsedindexvalue_nextIndex_T_257) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_259 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_260 = tail(_parsedindexvalue_nextIndex_T_259, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_261 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_262 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_263 = and(_parsedindexvalue_nextIndex_T_261, _parsedindexvalue_nextIndex_T_262) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_264 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_265 = tail(_parsedindexvalue_nextIndex_T_264, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_266 = mux(_parsedindexvalue_nextIndex_T_263, _parsedindexvalue_nextIndex_T_265, parsedindexvalue_second_stage_3) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_267 = mux(_parsedindexvalue_nextIndex_T_258, _parsedindexvalue_nextIndex_T_260, _parsedindexvalue_nextIndex_T_266) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_268 = mux(_parsedindexvalue_nextIndex_T_253, _parsedindexvalue_nextIndex_T_255, _parsedindexvalue_nextIndex_T_267) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_269 = mux(_parsedindexvalue_nextIndex_T_248, _parsedindexvalue_nextIndex_T_250, _parsedindexvalue_nextIndex_T_268) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_270 = mux(_parsedindexvalue_nextIndex_T_245, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_269) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_271 = mux(_parsedindexvalue_nextIndex_T_242, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_270) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_272 = mux(_parsedindexvalue_nextIndex_T_239, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_271) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_6 = mux(_parsedindexvalue_nextIndex_T_236, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_272) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_7 = rem(parsedindexvalue_nextIndex_6, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_273 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_274 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_275 = and(_parsedindexvalue_nextIndex_T_273, _parsedindexvalue_nextIndex_T_274) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_276 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_277 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_278 = and(_parsedindexvalue_nextIndex_T_276, _parsedindexvalue_nextIndex_T_277) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_279 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_280 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_281 = and(_parsedindexvalue_nextIndex_T_279, _parsedindexvalue_nextIndex_T_280) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_282 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_283 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_284 = and(_parsedindexvalue_nextIndex_T_282, _parsedindexvalue_nextIndex_T_283) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_285 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_286 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_287 = and(_parsedindexvalue_nextIndex_T_285, _parsedindexvalue_nextIndex_T_286) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_288 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_289 = tail(_parsedindexvalue_nextIndex_T_288, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_290 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_291 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_292 = and(_parsedindexvalue_nextIndex_T_290, _parsedindexvalue_nextIndex_T_291) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_293 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_294 = tail(_parsedindexvalue_nextIndex_T_293, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_295 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_296 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_297 = and(_parsedindexvalue_nextIndex_T_295, _parsedindexvalue_nextIndex_T_296) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_298 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_299 = tail(_parsedindexvalue_nextIndex_T_298, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_300 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_301 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_302 = and(_parsedindexvalue_nextIndex_T_300, _parsedindexvalue_nextIndex_T_301) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_303 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_304 = tail(_parsedindexvalue_nextIndex_T_303, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_305 = mux(_parsedindexvalue_nextIndex_T_302, _parsedindexvalue_nextIndex_T_304, parsedindexvalue_nextIndex_6) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_306 = mux(_parsedindexvalue_nextIndex_T_297, _parsedindexvalue_nextIndex_T_299, _parsedindexvalue_nextIndex_T_305) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_307 = mux(_parsedindexvalue_nextIndex_T_292, _parsedindexvalue_nextIndex_T_294, _parsedindexvalue_nextIndex_T_306) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_308 = mux(_parsedindexvalue_nextIndex_T_287, _parsedindexvalue_nextIndex_T_289, _parsedindexvalue_nextIndex_T_307) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_309 = mux(_parsedindexvalue_nextIndex_T_284, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_308) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_310 = mux(_parsedindexvalue_nextIndex_T_281, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_309) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_311 = mux(_parsedindexvalue_nextIndex_T_278, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_310) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_7 = mux(_parsedindexvalue_nextIndex_T_275, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_311) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_24 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_25 = rem(parsedindexvalue_nextIndex_7, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_26 = eq(_parsedindexvalue_third_stage_T_25, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_27 = add(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_28 = tail(_parsedindexvalue_third_stage_T_27, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_29 = sub(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_30 = tail(_parsedindexvalue_third_stage_T_29, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_31 = mux(_parsedindexvalue_third_stage_T_26, _parsedindexvalue_third_stage_T_28, _parsedindexvalue_third_stage_T_30) @[Benes.scala 48:47]
          node parsedindexvalue_3 = mux(_parsedindexvalue_third_stage_T_24, _parsedindexvalue_third_stage_T_31, parsedindexvalue_nextIndex_7) @[Benes.scala 48:24]
          node _T_13 = or(parsedindexvalue_3, UInt<3>("h0"))
          node _T_14 = bits(_T_13, 2, 0)
          parse_array[_T_14] <= io.i_data_bus2[2] @[Benes.scala 67:47]
      else :
        node _T_15 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 72:35]
        when _T_15 : @[Benes.scala 72:60]
          parse_array[2] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[2] <= io.i_data_bus2[2] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_16 = neq(io.i_data_bus2[3], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_16 : @[Benes.scala 56:39]
      node _T_17 = orr(io.i_mux_bus[3]) @[Benes.scala 58:31]
      when _T_17 : @[Benes.scala 58:35]
        node _T_18 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 60:36]
        when _T_18 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_8 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_9 = tail(_parsedindexvalue_T_8, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_32 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_33 = rem(_parsedindexvalue_T_9, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_34 = eq(_parsedindexvalue_first_stage_T_33, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_35 = add(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_36 = tail(_parsedindexvalue_first_stage_T_35, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_37 = sub(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_38 = tail(_parsedindexvalue_first_stage_T_37, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_39 = mux(_parsedindexvalue_first_stage_T_34, _parsedindexvalue_first_stage_T_36, _parsedindexvalue_first_stage_T_38) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_4 = mux(_parsedindexvalue_first_stage_T_32, _parsedindexvalue_first_stage_T_39, _parsedindexvalue_T_9) @[Benes.scala 24:26]
          node _parsedindexvalue_T_10 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_16 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_17 = bits(_parsedindexvalue_boolArray_T_16, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_18 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_19 = bits(_parsedindexvalue_boolArray_T_18, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_4 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[0] <= _parsedindexvalue_boolArray_T_17 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[1] <= _parsedindexvalue_boolArray_T_19 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_4 : UInt
          parsedindexvalue_second_stage_4 <= parsedindexvalue_first_stage_4
          node parsedindexvalue_calculation_8 = rem(parsedindexvalue_second_stage_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_312 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_313 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_314 = and(_parsedindexvalue_nextIndex_T_312, _parsedindexvalue_nextIndex_T_313) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_315 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_316 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_317 = and(_parsedindexvalue_nextIndex_T_315, _parsedindexvalue_nextIndex_T_316) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_318 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_319 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_320 = and(_parsedindexvalue_nextIndex_T_318, _parsedindexvalue_nextIndex_T_319) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_321 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_322 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_323 = and(_parsedindexvalue_nextIndex_T_321, _parsedindexvalue_nextIndex_T_322) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_324 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_325 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_326 = and(_parsedindexvalue_nextIndex_T_324, _parsedindexvalue_nextIndex_T_325) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_327 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_328 = tail(_parsedindexvalue_nextIndex_T_327, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_329 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_330 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_331 = and(_parsedindexvalue_nextIndex_T_329, _parsedindexvalue_nextIndex_T_330) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_332 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_333 = tail(_parsedindexvalue_nextIndex_T_332, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_334 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_335 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_336 = and(_parsedindexvalue_nextIndex_T_334, _parsedindexvalue_nextIndex_T_335) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_337 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_338 = tail(_parsedindexvalue_nextIndex_T_337, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_339 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_340 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_341 = and(_parsedindexvalue_nextIndex_T_339, _parsedindexvalue_nextIndex_T_340) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_342 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_343 = tail(_parsedindexvalue_nextIndex_T_342, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_344 = mux(_parsedindexvalue_nextIndex_T_341, _parsedindexvalue_nextIndex_T_343, parsedindexvalue_second_stage_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_345 = mux(_parsedindexvalue_nextIndex_T_336, _parsedindexvalue_nextIndex_T_338, _parsedindexvalue_nextIndex_T_344) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_346 = mux(_parsedindexvalue_nextIndex_T_331, _parsedindexvalue_nextIndex_T_333, _parsedindexvalue_nextIndex_T_345) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_347 = mux(_parsedindexvalue_nextIndex_T_326, _parsedindexvalue_nextIndex_T_328, _parsedindexvalue_nextIndex_T_346) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_348 = mux(_parsedindexvalue_nextIndex_T_323, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_347) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_349 = mux(_parsedindexvalue_nextIndex_T_320, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_348) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_350 = mux(_parsedindexvalue_nextIndex_T_317, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_349) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_8 = mux(_parsedindexvalue_nextIndex_T_314, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_350) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_9 = rem(parsedindexvalue_nextIndex_8, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_351 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_352 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_353 = and(_parsedindexvalue_nextIndex_T_351, _parsedindexvalue_nextIndex_T_352) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_354 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_355 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_356 = and(_parsedindexvalue_nextIndex_T_354, _parsedindexvalue_nextIndex_T_355) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_357 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_358 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_359 = and(_parsedindexvalue_nextIndex_T_357, _parsedindexvalue_nextIndex_T_358) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_360 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_361 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_362 = and(_parsedindexvalue_nextIndex_T_360, _parsedindexvalue_nextIndex_T_361) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_363 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_364 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_365 = and(_parsedindexvalue_nextIndex_T_363, _parsedindexvalue_nextIndex_T_364) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_366 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_367 = tail(_parsedindexvalue_nextIndex_T_366, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_368 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_369 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_370 = and(_parsedindexvalue_nextIndex_T_368, _parsedindexvalue_nextIndex_T_369) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_371 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_372 = tail(_parsedindexvalue_nextIndex_T_371, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_373 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_374 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_375 = and(_parsedindexvalue_nextIndex_T_373, _parsedindexvalue_nextIndex_T_374) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_376 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_377 = tail(_parsedindexvalue_nextIndex_T_376, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_378 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_379 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_380 = and(_parsedindexvalue_nextIndex_T_378, _parsedindexvalue_nextIndex_T_379) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_381 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_382 = tail(_parsedindexvalue_nextIndex_T_381, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_383 = mux(_parsedindexvalue_nextIndex_T_380, _parsedindexvalue_nextIndex_T_382, parsedindexvalue_nextIndex_8) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_384 = mux(_parsedindexvalue_nextIndex_T_375, _parsedindexvalue_nextIndex_T_377, _parsedindexvalue_nextIndex_T_383) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_385 = mux(_parsedindexvalue_nextIndex_T_370, _parsedindexvalue_nextIndex_T_372, _parsedindexvalue_nextIndex_T_384) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_386 = mux(_parsedindexvalue_nextIndex_T_365, _parsedindexvalue_nextIndex_T_367, _parsedindexvalue_nextIndex_T_385) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_387 = mux(_parsedindexvalue_nextIndex_T_362, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_386) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_388 = mux(_parsedindexvalue_nextIndex_T_359, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_387) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_389 = mux(_parsedindexvalue_nextIndex_T_356, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_388) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_9 = mux(_parsedindexvalue_nextIndex_T_353, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_389) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_32 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_33 = rem(parsedindexvalue_nextIndex_9, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_34 = eq(_parsedindexvalue_third_stage_T_33, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_35 = add(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_36 = tail(_parsedindexvalue_third_stage_T_35, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_37 = sub(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_38 = tail(_parsedindexvalue_third_stage_T_37, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_39 = mux(_parsedindexvalue_third_stage_T_34, _parsedindexvalue_third_stage_T_36, _parsedindexvalue_third_stage_T_38) @[Benes.scala 48:47]
          node parsedindexvalue_4 = mux(_parsedindexvalue_third_stage_T_32, _parsedindexvalue_third_stage_T_39, parsedindexvalue_nextIndex_9) @[Benes.scala 48:24]
          node _T_19 = or(parsedindexvalue_4, UInt<3>("h0"))
          node _T_20 = bits(_T_19, 2, 0)
          parse_array[_T_20] <= io.i_data_bus2[3] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_40 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_41 = rem(UInt<2>("h3"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_42 = eq(_parsedindexvalue_first_stage_T_41, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_43 = add(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_44 = tail(_parsedindexvalue_first_stage_T_43, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_45 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_46 = tail(_parsedindexvalue_first_stage_T_45, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_47 = mux(_parsedindexvalue_first_stage_T_42, _parsedindexvalue_first_stage_T_44, _parsedindexvalue_first_stage_T_46) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_5 = mux(_parsedindexvalue_first_stage_T_40, _parsedindexvalue_first_stage_T_47, UInt<2>("h3")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_11 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_20 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_21 = bits(_parsedindexvalue_boolArray_T_20, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_22 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_23 = bits(_parsedindexvalue_boolArray_T_22, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_5 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[0] <= _parsedindexvalue_boolArray_T_21 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[1] <= _parsedindexvalue_boolArray_T_23 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_5 : UInt
          parsedindexvalue_second_stage_5 <= parsedindexvalue_first_stage_5
          node parsedindexvalue_calculation_10 = rem(parsedindexvalue_second_stage_5, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_390 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_391 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_392 = and(_parsedindexvalue_nextIndex_T_390, _parsedindexvalue_nextIndex_T_391) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_393 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_394 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_395 = and(_parsedindexvalue_nextIndex_T_393, _parsedindexvalue_nextIndex_T_394) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_396 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_397 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_398 = and(_parsedindexvalue_nextIndex_T_396, _parsedindexvalue_nextIndex_T_397) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_399 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_400 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_401 = and(_parsedindexvalue_nextIndex_T_399, _parsedindexvalue_nextIndex_T_400) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_402 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_403 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_404 = and(_parsedindexvalue_nextIndex_T_402, _parsedindexvalue_nextIndex_T_403) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_405 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_406 = tail(_parsedindexvalue_nextIndex_T_405, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_407 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_408 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_409 = and(_parsedindexvalue_nextIndex_T_407, _parsedindexvalue_nextIndex_T_408) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_410 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_411 = tail(_parsedindexvalue_nextIndex_T_410, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_412 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_413 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_414 = and(_parsedindexvalue_nextIndex_T_412, _parsedindexvalue_nextIndex_T_413) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_415 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_416 = tail(_parsedindexvalue_nextIndex_T_415, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_417 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_418 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_419 = and(_parsedindexvalue_nextIndex_T_417, _parsedindexvalue_nextIndex_T_418) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_420 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_421 = tail(_parsedindexvalue_nextIndex_T_420, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_422 = mux(_parsedindexvalue_nextIndex_T_419, _parsedindexvalue_nextIndex_T_421, parsedindexvalue_second_stage_5) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_423 = mux(_parsedindexvalue_nextIndex_T_414, _parsedindexvalue_nextIndex_T_416, _parsedindexvalue_nextIndex_T_422) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_424 = mux(_parsedindexvalue_nextIndex_T_409, _parsedindexvalue_nextIndex_T_411, _parsedindexvalue_nextIndex_T_423) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_425 = mux(_parsedindexvalue_nextIndex_T_404, _parsedindexvalue_nextIndex_T_406, _parsedindexvalue_nextIndex_T_424) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_426 = mux(_parsedindexvalue_nextIndex_T_401, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_425) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_427 = mux(_parsedindexvalue_nextIndex_T_398, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_426) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_428 = mux(_parsedindexvalue_nextIndex_T_395, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_427) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_10 = mux(_parsedindexvalue_nextIndex_T_392, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_428) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_11 = rem(parsedindexvalue_nextIndex_10, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_429 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_430 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_431 = and(_parsedindexvalue_nextIndex_T_429, _parsedindexvalue_nextIndex_T_430) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_432 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_433 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_434 = and(_parsedindexvalue_nextIndex_T_432, _parsedindexvalue_nextIndex_T_433) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_435 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_436 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_437 = and(_parsedindexvalue_nextIndex_T_435, _parsedindexvalue_nextIndex_T_436) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_438 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_439 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_440 = and(_parsedindexvalue_nextIndex_T_438, _parsedindexvalue_nextIndex_T_439) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_441 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_442 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_443 = and(_parsedindexvalue_nextIndex_T_441, _parsedindexvalue_nextIndex_T_442) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_444 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_445 = tail(_parsedindexvalue_nextIndex_T_444, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_446 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_447 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_448 = and(_parsedindexvalue_nextIndex_T_446, _parsedindexvalue_nextIndex_T_447) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_449 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_450 = tail(_parsedindexvalue_nextIndex_T_449, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_451 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_452 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_453 = and(_parsedindexvalue_nextIndex_T_451, _parsedindexvalue_nextIndex_T_452) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_454 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_455 = tail(_parsedindexvalue_nextIndex_T_454, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_456 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_457 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_458 = and(_parsedindexvalue_nextIndex_T_456, _parsedindexvalue_nextIndex_T_457) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_459 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_460 = tail(_parsedindexvalue_nextIndex_T_459, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_461 = mux(_parsedindexvalue_nextIndex_T_458, _parsedindexvalue_nextIndex_T_460, parsedindexvalue_nextIndex_10) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_462 = mux(_parsedindexvalue_nextIndex_T_453, _parsedindexvalue_nextIndex_T_455, _parsedindexvalue_nextIndex_T_461) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_463 = mux(_parsedindexvalue_nextIndex_T_448, _parsedindexvalue_nextIndex_T_450, _parsedindexvalue_nextIndex_T_462) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_464 = mux(_parsedindexvalue_nextIndex_T_443, _parsedindexvalue_nextIndex_T_445, _parsedindexvalue_nextIndex_T_463) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_465 = mux(_parsedindexvalue_nextIndex_T_440, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_464) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_466 = mux(_parsedindexvalue_nextIndex_T_437, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_465) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_467 = mux(_parsedindexvalue_nextIndex_T_434, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_466) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_11 = mux(_parsedindexvalue_nextIndex_T_431, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_467) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_40 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_41 = rem(parsedindexvalue_nextIndex_11, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_42 = eq(_parsedindexvalue_third_stage_T_41, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_43 = add(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_44 = tail(_parsedindexvalue_third_stage_T_43, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_45 = sub(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_46 = tail(_parsedindexvalue_third_stage_T_45, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_47 = mux(_parsedindexvalue_third_stage_T_42, _parsedindexvalue_third_stage_T_44, _parsedindexvalue_third_stage_T_46) @[Benes.scala 48:47]
          node parsedindexvalue_5 = mux(_parsedindexvalue_third_stage_T_40, _parsedindexvalue_third_stage_T_47, parsedindexvalue_nextIndex_11) @[Benes.scala 48:24]
          node _T_21 = or(parsedindexvalue_5, UInt<3>("h0"))
          node _T_22 = bits(_T_21, 2, 0)
          parse_array[_T_22] <= io.i_data_bus2[3] @[Benes.scala 67:47]
      else :
        node _T_23 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 72:35]
        when _T_23 : @[Benes.scala 72:60]
          parse_array[3] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[3] <= io.i_data_bus2[3] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_24 = neq(io.i_data_bus2[0], UInt<1>("h0")) @[Benes.scala 91:27]
    when _T_24 : @[Benes.scala 91:35]
      node _parsedindexvalue_first_stage_T_48 = bits(io.i_mux_bus[0], 0, 0) @[Benes.scala 24:32]
      node _parsedindexvalue_first_stage_T_49 = rem(UInt<1>("h0"), UInt<2>("h2")) @[Benes.scala 24:52]
      node _parsedindexvalue_first_stage_T_50 = eq(_parsedindexvalue_first_stage_T_49, UInt<1>("h0")) @[Benes.scala 24:58]
      node _parsedindexvalue_first_stage_T_51 = add(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_52 = tail(_parsedindexvalue_first_stage_T_51, 1) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_53 = sub(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_54 = tail(_parsedindexvalue_first_stage_T_53, 1) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_55 = mux(_parsedindexvalue_first_stage_T_50, _parsedindexvalue_first_stage_T_52, _parsedindexvalue_first_stage_T_54) @[Benes.scala 24:40]
      node parsedindexvalue_first_stage_6 = mux(_parsedindexvalue_first_stage_T_48, _parsedindexvalue_first_stage_T_55, UInt<1>("h0")) @[Benes.scala 24:26]
      node _parsedindexvalue_T_12 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 27:31]
      node _parsedindexvalue_boolArray_T_24 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_25 = bits(_parsedindexvalue_boolArray_T_24, 0, 0) @[Benes.scala 28:92]
      node _parsedindexvalue_boolArray_T_26 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_27 = bits(_parsedindexvalue_boolArray_T_26, 1, 1) @[Benes.scala 28:92]
      wire parsedindexvalue_boolArray_6 : UInt<1>[2] @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[0] <= _parsedindexvalue_boolArray_T_25 @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[1] <= _parsedindexvalue_boolArray_T_27 @[Benes.scala 28:28]
      wire parsedindexvalue_second_stage_6 : UInt
      parsedindexvalue_second_stage_6 <= parsedindexvalue_first_stage_6
      node parsedindexvalue_calculation_12 = rem(parsedindexvalue_second_stage_6, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_468 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_469 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_470 = and(_parsedindexvalue_nextIndex_T_468, _parsedindexvalue_nextIndex_T_469) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_471 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_472 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_473 = and(_parsedindexvalue_nextIndex_T_471, _parsedindexvalue_nextIndex_T_472) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_474 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_475 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_476 = and(_parsedindexvalue_nextIndex_T_474, _parsedindexvalue_nextIndex_T_475) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_477 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_478 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_479 = and(_parsedindexvalue_nextIndex_T_477, _parsedindexvalue_nextIndex_T_478) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_480 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_481 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_482 = and(_parsedindexvalue_nextIndex_T_480, _parsedindexvalue_nextIndex_T_481) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_483 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_484 = tail(_parsedindexvalue_nextIndex_T_483, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_485 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_486 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_487 = and(_parsedindexvalue_nextIndex_T_485, _parsedindexvalue_nextIndex_T_486) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_488 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_489 = tail(_parsedindexvalue_nextIndex_T_488, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_490 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_491 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_492 = and(_parsedindexvalue_nextIndex_T_490, _parsedindexvalue_nextIndex_T_491) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_493 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_494 = tail(_parsedindexvalue_nextIndex_T_493, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_495 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_496 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_497 = and(_parsedindexvalue_nextIndex_T_495, _parsedindexvalue_nextIndex_T_496) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_498 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_499 = tail(_parsedindexvalue_nextIndex_T_498, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_500 = mux(_parsedindexvalue_nextIndex_T_497, _parsedindexvalue_nextIndex_T_499, parsedindexvalue_second_stage_6) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_501 = mux(_parsedindexvalue_nextIndex_T_492, _parsedindexvalue_nextIndex_T_494, _parsedindexvalue_nextIndex_T_500) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_502 = mux(_parsedindexvalue_nextIndex_T_487, _parsedindexvalue_nextIndex_T_489, _parsedindexvalue_nextIndex_T_501) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_503 = mux(_parsedindexvalue_nextIndex_T_482, _parsedindexvalue_nextIndex_T_484, _parsedindexvalue_nextIndex_T_502) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_504 = mux(_parsedindexvalue_nextIndex_T_479, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_503) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_505 = mux(_parsedindexvalue_nextIndex_T_476, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_504) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_506 = mux(_parsedindexvalue_nextIndex_T_473, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_505) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_12 = mux(_parsedindexvalue_nextIndex_T_470, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_506) @[Mux.scala 101:16]
      node parsedindexvalue_calculation_13 = rem(parsedindexvalue_nextIndex_12, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_507 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_508 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_509 = and(_parsedindexvalue_nextIndex_T_507, _parsedindexvalue_nextIndex_T_508) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_510 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_511 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_512 = and(_parsedindexvalue_nextIndex_T_510, _parsedindexvalue_nextIndex_T_511) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_513 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_514 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_515 = and(_parsedindexvalue_nextIndex_T_513, _parsedindexvalue_nextIndex_T_514) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_516 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_517 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_518 = and(_parsedindexvalue_nextIndex_T_516, _parsedindexvalue_nextIndex_T_517) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_519 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_520 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_521 = and(_parsedindexvalue_nextIndex_T_519, _parsedindexvalue_nextIndex_T_520) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_522 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_523 = tail(_parsedindexvalue_nextIndex_T_522, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_524 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_525 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_526 = and(_parsedindexvalue_nextIndex_T_524, _parsedindexvalue_nextIndex_T_525) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_527 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_528 = tail(_parsedindexvalue_nextIndex_T_527, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_529 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_530 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_531 = and(_parsedindexvalue_nextIndex_T_529, _parsedindexvalue_nextIndex_T_530) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_532 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_533 = tail(_parsedindexvalue_nextIndex_T_532, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_534 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_535 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_536 = and(_parsedindexvalue_nextIndex_T_534, _parsedindexvalue_nextIndex_T_535) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_537 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_538 = tail(_parsedindexvalue_nextIndex_T_537, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_539 = mux(_parsedindexvalue_nextIndex_T_536, _parsedindexvalue_nextIndex_T_538, parsedindexvalue_nextIndex_12) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_540 = mux(_parsedindexvalue_nextIndex_T_531, _parsedindexvalue_nextIndex_T_533, _parsedindexvalue_nextIndex_T_539) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_541 = mux(_parsedindexvalue_nextIndex_T_526, _parsedindexvalue_nextIndex_T_528, _parsedindexvalue_nextIndex_T_540) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_542 = mux(_parsedindexvalue_nextIndex_T_521, _parsedindexvalue_nextIndex_T_523, _parsedindexvalue_nextIndex_T_541) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_543 = mux(_parsedindexvalue_nextIndex_T_518, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_542) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_544 = mux(_parsedindexvalue_nextIndex_T_515, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_543) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_545 = mux(_parsedindexvalue_nextIndex_T_512, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_544) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_13 = mux(_parsedindexvalue_nextIndex_T_509, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_545) @[Mux.scala 101:16]
      node _parsedindexvalue_third_stage_T_48 = bits(io.i_mux_bus[0], 3, 3) @[Benes.scala 48:30]
      node _parsedindexvalue_third_stage_T_49 = rem(parsedindexvalue_nextIndex_13, UInt<2>("h2")) @[Benes.scala 48:61]
      node _parsedindexvalue_third_stage_T_50 = eq(_parsedindexvalue_third_stage_T_49, UInt<1>("h0")) @[Benes.scala 48:67]
      node _parsedindexvalue_third_stage_T_51 = add(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_52 = tail(_parsedindexvalue_third_stage_T_51, 1) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_53 = sub(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_54 = tail(_parsedindexvalue_third_stage_T_53, 1) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_55 = mux(_parsedindexvalue_third_stage_T_50, _parsedindexvalue_third_stage_T_52, _parsedindexvalue_third_stage_T_54) @[Benes.scala 48:47]
      node parsedindexvalue_6 = mux(_parsedindexvalue_third_stage_T_48, _parsedindexvalue_third_stage_T_55, parsedindexvalue_nextIndex_13) @[Benes.scala 48:24]
      node _T_25 = or(parsedindexvalue_6, UInt<3>("h0"))
      node _T_26 = bits(_T_25, 2, 0)
      parse_array[_T_26] <= io.i_data_bus2[0] @[Benes.scala 94:35]
    else :
      parse_array[4] <= UInt<1>("h0") @[Benes.scala 98:33]
    io.o_dist_bus2[0] <= parse_array[0] @[Benes.scala 103:27]
    io.o_dist_bus2[1] <= parse_array[1] @[Benes.scala 103:27]
    io.o_dist_bus2[2] <= parse_array[2] @[Benes.scala 103:27]
    io.o_dist_bus2[3] <= parse_array[3] @[Benes.scala 103:27]

  module buffer_multiplication_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip buffer1 : UInt<16>[4], flip buffer2 : UInt<16>[4], out : UInt<16>[4]}

    node elementMul = mul(io.buffer1[0], io.buffer2[0]) @[buffer_multiplication.scala 17:42]
    node result_elementMul = mul(io.buffer1[1], io.buffer2[1]) @[buffer_multiplication.scala 17:42]
    node result_result_elementMul = mul(io.buffer1[2], io.buffer2[2]) @[buffer_multiplication.scala 17:42]
    node result_result_result_elementMul = mul(io.buffer1[3], io.buffer2[3]) @[buffer_multiplication.scala 17:42]
    wire result : UInt<16>[4] @[buffer_multiplication.scala 15:20]
    result[0] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[1] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[2] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= result_result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[2] <= result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[1] <= result_elementMul @[buffer_multiplication.scala 19:27]
    result[0] <= elementMul @[buffer_multiplication.scala 19:27]
    io.out <= result @[buffer_multiplication.scala 24:10]

  module ReductionMux_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_3 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_3 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_4 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_4 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_5 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_5 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module Fan4_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<32>[4], flip i_add_en_bus : UInt<1>[3], flip i_cmd_bus : UInt<3>[3], o_valid : UInt<1>[4], o_data_bus : UInt<32>[4], o_adder : UInt<32>[3]}

    wire _w_fan_lvl_0_WIRE : UInt<64>[2] @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[0] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[1] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    wire w_fan_lvl_0 : UInt<64>[2]
    w_fan_lvl_0 <= _w_fan_lvl_0_WIRE
    wire _w_fan_lvl_1_WIRE : UInt<32>[1] @[FanNetwork.scala 21:39]
    _w_fan_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 21:39]
    wire w_fan_lvl_1 : UInt<32>[1]
    w_fan_lvl_1 <= _w_fan_lvl_1_WIRE
    wire _w_vn_lvl_0_WIRE : UInt<32>[4] @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    wire w_vn_lvl_0 : UInt<32>[4]
    w_vn_lvl_0 <= _w_vn_lvl_0_WIRE
    wire _w_vn_lvl_0_valid_WIRE : UInt<1>[4] @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    wire w_vn_lvl_0_valid : UInt<1>[4]
    w_vn_lvl_0_valid <= _w_vn_lvl_0_valid_WIRE
    wire _w_vn_lvl_1_WIRE : UInt<32>[2] @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    wire w_vn_lvl_1 : UInt<32>[2]
    w_vn_lvl_1 <= _w_vn_lvl_1_WIRE
    wire _w_vn_lvl_1_valid_WIRE : UInt<1>[2] @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    wire w_vn_lvl_1_valid : UInt<1>[2]
    w_vn_lvl_1_valid <= _w_vn_lvl_1_valid_WIRE
    wire _r_lvl_output_ff_WIRE : UInt<32>[8] @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[4] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[5] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[6] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[7] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    reg r_lvl_output_ff : UInt<32>[8], clock with :
      reset => (reset, _r_lvl_output_ff_WIRE) @[FanNetwork.scala 28:34]
    wire _r_lvl_output_ff_valid_WIRE : UInt<1>[8] @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[4] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[5] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[6] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[7] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    reg r_lvl_output_ff_valid : UInt<1>[8], clock with :
      reset => (reset, _r_lvl_output_ff_valid_WIRE) @[FanNetwork.scala 29:40]
    wire _r_valid_WIRE : UInt<1>[3] @[FanNetwork.scala 30:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    reg r_valid : UInt<1>[3], clock with :
      reset => (reset, _r_valid_WIRE) @[FanNetwork.scala 30:26]
    reg r_final_sum : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FanNetwork.scala 32:30]
    reg r_final_add : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 33:30]
    reg r_final_add2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 34:31]
    node _T = bits(w_vn_lvl_0_valid[1], 0, 0) @[FanNetwork.scala 38:30]
    node _T_1 = eq(_T, UInt<1>("h1")) @[FanNetwork.scala 38:34]
    node _T_2 = bits(w_vn_lvl_0_valid[0], 0, 0) @[FanNetwork.scala 38:64]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[FanNetwork.scala 38:68]
    node _T_4 = and(_T_1, _T_3) @[FanNetwork.scala 38:42]
    when _T_4 : @[FanNetwork.scala 38:77]
      r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 39:28]
      r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 40:28]
      r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 41:34]
      r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 42:34]
    else :
      node _T_5 = eq(w_vn_lvl_0_valid[1], UInt<1>("h1")) @[FanNetwork.scala 43:37]
      node _T_6 = eq(w_vn_lvl_0_valid[0], UInt<1>("h0")) @[FanNetwork.scala 43:68]
      node _T_7 = and(_T_5, _T_6) @[FanNetwork.scala 43:45]
      when _T_7 : @[FanNetwork.scala 43:77]
        r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 44:28]
        r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 45:28]
        r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 46:34]
        r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 47:34]
      else :
        node _T_8 = eq(w_vn_lvl_0_valid[1], UInt<1>("h0")) @[FanNetwork.scala 48:37]
        node _T_9 = eq(w_vn_lvl_0_valid[0], UInt<1>("h1")) @[FanNetwork.scala 48:68]
        node _T_10 = and(_T_8, _T_9) @[FanNetwork.scala 48:45]
        when _T_10 : @[FanNetwork.scala 48:77]
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 49:28]
          r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 50:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 51:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 52:34]
        else :
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 54:28]
          r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 55:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 56:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 57:34]
    node _T_11 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 59:30]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[FanNetwork.scala 59:34]
    node _T_13 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 59:64]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[FanNetwork.scala 59:68]
    node _T_15 = and(_T_12, _T_14) @[FanNetwork.scala 59:42]
    when _T_15 : @[FanNetwork.scala 59:77]
      r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 60:28]
      r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 61:28]
      r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 62:34]
      r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 63:34]
    else :
      node _T_16 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 64:36]
      node _T_17 = eq(_T_16, UInt<1>("h1")) @[FanNetwork.scala 64:40]
      node _T_18 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 64:70]
      node _T_19 = eq(_T_18, UInt<1>("h0")) @[FanNetwork.scala 64:74]
      node _T_20 = and(_T_17, _T_19) @[FanNetwork.scala 64:48]
      when _T_20 : @[FanNetwork.scala 64:83]
        r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 65:28]
        r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 66:28]
        r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 67:34]
        r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 68:34]
      else :
        node _T_21 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 69:36]
        node _T_22 = eq(_T_21, UInt<1>("h0")) @[FanNetwork.scala 69:40]
        node _T_23 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 69:70]
        node _T_24 = eq(_T_23, UInt<1>("h1")) @[FanNetwork.scala 69:74]
        node _T_25 = and(_T_22, _T_24) @[FanNetwork.scala 69:48]
        when _T_25 : @[FanNetwork.scala 69:83]
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 70:28]
          r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 71:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 72:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 73:34]
        else :
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 75:28]
          r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 76:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 77:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 78:34]
    r_lvl_output_ff[4] <= r_lvl_output_ff[0] @[FanNetwork.scala 81:24]
    r_lvl_output_ff_valid[4] <= r_lvl_output_ff_valid[0] @[FanNetwork.scala 82:30]
    node _T_26 = bits(w_vn_lvl_1_valid[0], 0, 0) @[FanNetwork.scala 84:29]
    when _T_26 : @[FanNetwork.scala 84:34]
      r_lvl_output_ff[5] <= w_vn_lvl_1[0] @[FanNetwork.scala 85:28]
      r_lvl_output_ff_valid[5] <= UInt<1>("h1") @[FanNetwork.scala 86:34]
    else :
      r_lvl_output_ff[5] <= r_lvl_output_ff[1] @[FanNetwork.scala 88:28]
      r_lvl_output_ff_valid[5] <= r_lvl_output_ff_valid[1] @[FanNetwork.scala 89:34]
    node _T_27 = bits(w_vn_lvl_1_valid[1], 0, 0) @[FanNetwork.scala 91:29]
    when _T_27 : @[FanNetwork.scala 91:34]
      r_lvl_output_ff[6] <= w_vn_lvl_1[1] @[FanNetwork.scala 92:28]
      r_lvl_output_ff_valid[6] <= UInt<1>("h1") @[FanNetwork.scala 93:34]
    else :
      r_lvl_output_ff[6] <= r_lvl_output_ff[2] @[FanNetwork.scala 95:28]
      r_lvl_output_ff_valid[6] <= r_lvl_output_ff_valid[2] @[FanNetwork.scala 96:34]
    r_lvl_output_ff[7] <= r_lvl_output_ff[3] @[FanNetwork.scala 99:24]
    r_lvl_output_ff_valid[7] <= r_lvl_output_ff_valid[3] @[FanNetwork.scala 100:30]
    node _T_28 = eq(io.i_valid, UInt<1>("h1")) @[FanNetwork.scala 104:22]
    when _T_28 : @[FanNetwork.scala 104:31]
      r_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 105:16]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 107:20]
    r_valid[1] <= r_valid[0] @[FanNetwork.scala 114:24]
    r_valid[2] <= r_valid[1] @[FanNetwork.scala 114:24]
    inst my_adder_0 of EdgeAdderSwitch_3 @[FanNetwork.scala 119:28]
    my_adder_0.clock <= clock
    my_adder_0.reset <= reset
    my_adder_0.io.i_valid <= r_valid[0] @[FanNetwork.scala 121:27]
    wire _WIRE : UInt<32>[2] @[FanNetwork.scala 122:40]
    _WIRE[0] <= io.i_data_bus[1] @[FanNetwork.scala 122:40]
    _WIRE[1] <= io.i_data_bus[0] @[FanNetwork.scala 122:40]
    my_adder_0.io.i_data_bus[0] <= _WIRE[0] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_data_bus[1] <= _WIRE[1] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_add_en <= io.i_add_en_bus[0] @[FanNetwork.scala 123:28]
    my_adder_0.io.i_cmd <= io.i_cmd_bus[0] @[FanNetwork.scala 124:25]
    my_adder_0.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 125:25]
    node _w_vn_lvl_0_0_T = bits(my_adder_0.io.o_vn, 31, 0) @[FanNetwork.scala 126:40]
    w_vn_lvl_0[0] <= _w_vn_lvl_0_0_T @[FanNetwork.scala 126:19]
    node _w_vn_lvl_0_1_T = bits(my_adder_0.io.o_vn, 63, 32) @[FanNetwork.scala 127:40]
    w_vn_lvl_0[1] <= _w_vn_lvl_0_1_T @[FanNetwork.scala 127:19]
    node _w_vn_lvl_0_valid_0_T = bits(my_adder_0.io.o_vn_valid, 0, 0) @[FanNetwork.scala 128:52]
    w_vn_lvl_0_valid[0] <= _w_vn_lvl_0_valid_0_T @[FanNetwork.scala 128:25]
    node _w_vn_lvl_0_valid_1_T = bits(my_adder_0.io.o_vn_valid, 1, 1) @[FanNetwork.scala 129:52]
    w_vn_lvl_0_valid[1] <= _w_vn_lvl_0_valid_1_T @[FanNetwork.scala 129:25]
    w_fan_lvl_0[0] <= my_adder_0.io.o_adder @[FanNetwork.scala 130:20]
    inst my_adder_1 of EdgeAdderSwitch_4 @[FanNetwork.scala 132:28]
    my_adder_1.clock <= clock
    my_adder_1.reset <= reset
    my_adder_1.io.i_valid <= r_valid[1] @[FanNetwork.scala 134:27]
    wire _WIRE_1 : UInt<64>[2] @[FanNetwork.scala 135:40]
    _WIRE_1[0] <= w_fan_lvl_0[1] @[FanNetwork.scala 135:40]
    _WIRE_1[1] <= w_fan_lvl_0[0] @[FanNetwork.scala 135:40]
    my_adder_1.io.i_data_bus[0] <= _WIRE_1[0] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_data_bus[1] <= _WIRE_1[1] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_add_en <= io.i_add_en_bus[2] @[FanNetwork.scala 136:28]
    my_adder_1.io.i_cmd <= io.i_cmd_bus[2] @[FanNetwork.scala 137:26]
    my_adder_1.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 138:25]
    node _w_vn_lvl_1_0_T = bits(my_adder_1.io.o_vn, 31, 0) @[FanNetwork.scala 139:40]
    w_vn_lvl_1[0] <= _w_vn_lvl_1_0_T @[FanNetwork.scala 139:19]
    node _w_vn_lvl_1_1_T = bits(my_adder_1.io.o_vn, 63, 32) @[FanNetwork.scala 140:40]
    w_vn_lvl_1[1] <= _w_vn_lvl_1_1_T @[FanNetwork.scala 140:19]
    node _w_vn_lvl_1_valid_0_T = bits(my_adder_1.io.o_vn_valid, 0, 0) @[FanNetwork.scala 141:52]
    w_vn_lvl_1_valid[0] <= _w_vn_lvl_1_valid_0_T @[FanNetwork.scala 141:25]
    node _w_vn_lvl_1_valid_1_T = bits(my_adder_1.io.o_vn_valid, 1, 1) @[FanNetwork.scala 142:52]
    w_vn_lvl_1_valid[1] <= _w_vn_lvl_1_valid_1_T @[FanNetwork.scala 142:25]
    w_fan_lvl_1[0] <= my_adder_1.io.o_adder @[FanNetwork.scala 143:20]
    inst my_adder_2 of EdgeAdderSwitch_5 @[FanNetwork.scala 145:28]
    my_adder_2.clock <= clock
    my_adder_2.reset <= reset
    my_adder_2.io.i_valid <= r_valid[0] @[FanNetwork.scala 147:27]
    wire _WIRE_2 : UInt<32>[2] @[FanNetwork.scala 148:40]
    _WIRE_2[0] <= io.i_data_bus[3] @[FanNetwork.scala 148:40]
    _WIRE_2[1] <= io.i_data_bus[2] @[FanNetwork.scala 148:40]
    my_adder_2.io.i_data_bus[0] <= _WIRE_2[0] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_data_bus[1] <= _WIRE_2[1] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_add_en <= io.i_add_en_bus[1] @[FanNetwork.scala 149:28]
    my_adder_2.io.i_cmd <= io.i_cmd_bus[1] @[FanNetwork.scala 150:25]
    my_adder_2.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 151:25]
    node _w_vn_lvl_0_2_T = bits(my_adder_2.io.o_vn, 31, 0) @[FanNetwork.scala 153:40]
    w_vn_lvl_0[2] <= _w_vn_lvl_0_2_T @[FanNetwork.scala 153:19]
    node _w_vn_lvl_0_3_T = bits(my_adder_2.io.o_vn, 63, 32) @[FanNetwork.scala 154:40]
    w_vn_lvl_0[3] <= _w_vn_lvl_0_3_T @[FanNetwork.scala 154:19]
    node _w_vn_lvl_0_valid_2_T = bits(my_adder_2.io.o_vn_valid, 0, 0) @[FanNetwork.scala 156:52]
    w_vn_lvl_0_valid[2] <= _w_vn_lvl_0_valid_2_T @[FanNetwork.scala 156:25]
    node _w_vn_lvl_0_valid_3_T = bits(my_adder_2.io.o_vn_valid, 1, 1) @[FanNetwork.scala 157:52]
    w_vn_lvl_0_valid[3] <= _w_vn_lvl_0_valid_3_T @[FanNetwork.scala 157:25]
    w_fan_lvl_0[1] <= my_adder_2.io.o_adder @[FanNetwork.scala 159:20]
    r_final_add <= UInt<1>("h0") @[FanNetwork.scala 163:17]
    r_final_add2 <= UInt<1>("h0") @[FanNetwork.scala 164:18]
    r_final_sum <= UInt<1>("h0") @[FanNetwork.scala 165:17]
    r_final_add <= io.i_add_en_bus[2] @[FanNetwork.scala 167:17]
    r_final_add2 <= r_final_add @[FanNetwork.scala 168:18]
    r_final_sum <= w_fan_lvl_1[0] @[FanNetwork.scala 169:17]
    io.o_data_bus[0] <= UInt<1>("h0") @[FanNetwork.scala 172:22]
    io.o_data_bus[1] <= UInt<1>("h0") @[FanNetwork.scala 173:22]
    io.o_data_bus[2] <= UInt<1>("h0") @[FanNetwork.scala 174:22]
    io.o_data_bus[3] <= UInt<1>("h0") @[FanNetwork.scala 175:22]
    io.o_data_bus[0] <= r_lvl_output_ff[4] @[FanNetwork.scala 177:22]
    node _T_29 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 178:24]
    when _T_29 : @[FanNetwork.scala 178:33]
      io.o_data_bus[1] <= r_final_sum @[FanNetwork.scala 179:26]
    else :
      io.o_data_bus[1] <= r_lvl_output_ff[5] @[FanNetwork.scala 181:26]
    io.o_data_bus[2] <= r_lvl_output_ff[6] @[FanNetwork.scala 183:22]
    io.o_data_bus[3] <= r_lvl_output_ff[7] @[FanNetwork.scala 184:22]
    io.o_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 187:19]
    io.o_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 188:19]
    io.o_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 189:19]
    io.o_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 190:19]
    io.o_valid[0] <= r_lvl_output_ff_valid[4] @[FanNetwork.scala 192:19]
    node _T_30 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 193:24]
    when _T_30 : @[FanNetwork.scala 193:33]
      io.o_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 194:23]
    else :
      io.o_valid[1] <= r_lvl_output_ff_valid[5] @[FanNetwork.scala 196:23]
    io.o_valid[2] <= r_lvl_output_ff_valid[6] @[FanNetwork.scala 198:19]
    io.o_valid[3] <= r_lvl_output_ff_valid[7] @[FanNetwork.scala 199:19]
    io.o_adder[0] <= UInt<1>("h0") @[FanNetwork.scala 203:19]
    io.o_adder[1] <= UInt<1>("h0") @[FanNetwork.scala 204:19]
    io.o_adder[2] <= UInt<1>("h0") @[FanNetwork.scala 205:19]
    io.o_adder[0] <= w_fan_lvl_0[0] @[FanNetwork.scala 207:19]
    io.o_adder[1] <= w_fan_lvl_1[0] @[FanNetwork.scala 208:19]
    io.o_adder[2] <= w_fan_lvl_0[1] @[FanNetwork.scala 209:19]

  module flexdpecom4_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[4][4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4]}

    wire _r_mult_WIRE : UInt<15>[4] @[FlexDPE.scala 32:34]
    _r_mult_WIRE[0] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[1] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[2] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[3] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    reg r_mult : UInt<15>[4], clock with :
      reset => (reset, _r_mult_WIRE) @[FlexDPE.scala 32:26]
    reg matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), matrix) @[FlexDPE.scala 33:21]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPE.scala 36:26]
    reg r_stationary_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff) @[FlexDPE.scala 40:30]
    reg r_stationary_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff2) @[FlexDPE.scala 41:31]
    reg r_data_valid_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff) @[FlexDPE.scala 43:30]
    reg r_data_valid_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff2) @[FlexDPE.scala 44:31]
    r_stationary_ff <= io.i_stationary @[FlexDPE.scala 46:21]
    r_stationary_ff2 <= r_stationary_ff @[FlexDPE.scala 47:22]
    r_data_valid_ff <= io.i_data_valid @[FlexDPE.scala 49:21]
    r_data_valid_ff2 <= r_data_valid_ff @[FlexDPE.scala 50:22]
    inst my_ivn of ivncontrol4_1 @[FlexDPE.scala 53:23]
    my_ivn.clock <= clock
    my_ivn.reset <= reset
    my_ivn.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPE.scala 54:33]
    inst my_controller of fancontrol4_1 @[FlexDPE.scala 57:31]
    my_controller.clock <= clock
    my_controller.reset <= reset
    my_controller.io.i_vn[0] <= my_ivn.io.o_vn[0] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[1] <= my_ivn.io.o_vn[1] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[2] <= my_ivn.io.o_vn[2] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[3] <= my_ivn.io.o_vn[3] @[FlexDPE.scala 59:27]
    my_controller.io.i_stationary <= UInt<1>("h0") @[FlexDPE.scala 60:35]
    my_controller.io.i_data_valid <= io.i_data_valid @[FlexDPE.scala 61:35]
    inst my_Benes of Benes_1 @[FlexDPE.scala 66:26]
    my_Benes.clock <= clock
    my_Benes.reset <= reset
    my_Benes.io.i_data_bus1[0] <= io.i_data_bus[0] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[1] <= io.i_data_bus[1] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[2] <= io.i_data_bus[2] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[3] <= io.i_data_bus[3] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus2[0] <= io.i_data_bus2[0] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[1] <= io.i_data_bus2[1] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[2] <= io.i_data_bus2[2] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[3] <= io.i_data_bus2[3] @[FlexDPE.scala 69:29]
    my_Benes.io.i_mux_bus[0] <= io.i_mux_bus[0] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[1] <= io.i_mux_bus[1] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[2] <= io.i_mux_bus[2] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[3] <= io.i_mux_bus[3] @[FlexDPE.scala 70:27]
    inst buffer_mult of buffer_multiplication_1 @[FlexDPE.scala 77:30]
    buffer_mult.clock <= clock
    buffer_mult.reset <= reset
    buffer_mult.io.buffer1[0] <= my_Benes.io.o_dist_bus1[0] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[1] <= my_Benes.io.o_dist_bus1[1] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[2] <= my_Benes.io.o_dist_bus1[2] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[3] <= my_Benes.io.o_dist_bus1[3] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer2[0] <= my_Benes.io.o_dist_bus2[0] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[1] <= my_Benes.io.o_dist_bus2[1] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[2] <= my_Benes.io.o_dist_bus2[2] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[3] <= my_Benes.io.o_dist_bus2[3] @[FlexDPE.scala 81:30]
    r_mult <= buffer_mult.io.out @[FlexDPE.scala 83:14]
    inst my_fan_network of Fan4_1 @[FlexDPE.scala 89:32]
    my_fan_network.clock <= clock
    my_fan_network.reset <= reset
    my_fan_network.io.i_valid <= my_controller.io.o_reduction_valid @[FlexDPE.scala 91:31]
    my_fan_network.io.i_data_bus[0] <= r_mult[0] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[1] <= r_mult[1] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[2] <= r_mult[2] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[3] <= r_mult[3] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_add_en_bus[0] <= my_controller.io.o_reduction_add[0] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[1] <= my_controller.io.o_reduction_add[1] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[2] <= my_controller.io.o_reduction_add[2] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_cmd_bus[0] <= my_controller.io.o_reduction_cmd[0] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[1] <= my_controller.io.o_reduction_cmd[1] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[2] <= my_controller.io.o_reduction_cmd[2] @[FlexDPE.scala 94:33]
    io.o_valid <= my_fan_network.io.o_valid @[FlexDPE.scala 96:16]
    io.o_data_bus <= my_fan_network.io.o_data_bus @[FlexDPE.scala 97:19]
    io.o_adder <= my_fan_network.io.o_adder @[FlexDPE.scala 98:16]

  module ivncontrol4_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], o_vn : UInt<5>[4]}

    wire _i_vn_WIRE : UInt<5>[4] @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[0] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[1] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[2] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[3] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    reg i_vn : UInt<5>[4], clock with :
      reset => (reset, _i_vn_WIRE) @[ivncontrol(4).scala 15:23]
    wire _rowcount_WIRE : UInt<32>[4] @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[0] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[1] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[2] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[3] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    reg rowcount : UInt<32>[4], clock with :
      reset => (reset, _rowcount_WIRE) @[ivncontrol(4).scala 19:27]
    wire valid : UInt<1>
    valid <= UInt<1>("h0")
    wire valid1 : UInt<1>
    valid1 <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 31:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 32:20]
    reg mat : UInt<32>[4][4], clock with :
      reset => (UInt<1>("h0"), mat) @[ivncontrol(4).scala 35:18]
    reg count : UInt<32>[4], clock with :
      reset => (UInt<1>("h0"), count) @[ivncontrol(4).scala 39:20]
    node _T = bits(i, 1, 0)
    node _T_1 = bits(j, 1, 0)
    node _mat_T = bits(i, 1, 0)
    node _mat_T_1 = bits(j, 1, 0)
    mat[_T][_T_1] <= io.Stationary_matrix[_mat_T][_mat_T_1] @[ivncontrol(4).scala 44:15]
    node _T_2 = eq(valid1, UInt<1>("h0")) @[ivncontrol(4).scala 45:16]
    when _T_2 : @[ivncontrol(4).scala 45:28]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = neq(io.Stationary_matrix[_T_3][_T_4], UInt<1>("h0")) @[ivncontrol(4).scala 46:43]
      when _T_5 : @[ivncontrol(4).scala 46:51]
        node _T_6 = bits(i, 1, 0)
        node _count_T = bits(i, 1, 0)
        node _count_T_1 = add(count[_count_T], UInt<1>("h1")) @[ivncontrol(4).scala 47:33]
        node _count_T_2 = tail(_count_T_1, 1) @[ivncontrol(4).scala 47:33]
        count[_T_6] <= _count_T_2 @[ivncontrol(4).scala 47:22]
    node _T_7 = geq(count[1], UInt<3>("h4")) @[ivncontrol(4).scala 53:20]
    when _T_7 : @[ivncontrol(4).scala 53:28]
      valid1 <= UInt<1>("h1") @[ivncontrol(4).scala 54:16]
    node _T_8 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 59:14]
    node _T_9 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 59:47]
    node _T_10 = and(_T_8, _T_9) @[ivncontrol(4).scala 59:41]
    when _T_10 : @[ivncontrol(4).scala 59:75]
      rowcount[0] <= count[0] @[ivncontrol(4).scala 66:21]
      node _T_11 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_11 : @[ivncontrol(4).scala 67:49]
        node _T_12 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_13 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_14 = and(_T_12, _T_13) @[ivncontrol(4).scala 71:54]
        node _T_15 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_16 = and(_T_14, _T_15) @[ivncontrol(4).scala 71:92]
        node _T_17 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_18 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_19 = and(_T_17, _T_18) @[ivncontrol(4).scala 71:170]
        node _T_20 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_21 = and(_T_19, _T_20) @[ivncontrol(4).scala 71:208]
        node _T_22 = or(_T_16, _T_21) @[ivncontrol(4).scala 71:131]
        node _T_23 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_24 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_25 = and(_T_23, _T_24) @[ivncontrol(4).scala 71:284]
        node _T_26 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_27 = and(_T_25, _T_26) @[ivncontrol(4).scala 71:322]
        node _T_28 = or(_T_22, _T_27) @[ivncontrol(4).scala 71:246]
        when _T_28 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_1 = tail(_rowcount_1_T, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_1 @[ivncontrol(4).scala 72:29]
        else :
          node _T_29 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_30 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_31 = and(_T_29, _T_30) @[ivncontrol(4).scala 73:60]
          node _T_32 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_33 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_34 = and(_T_32, _T_33) @[ivncontrol(4).scala 73:138]
          node _T_35 = or(_T_31, _T_34) @[ivncontrol(4).scala 73:99]
          node _T_36 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_37 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_38 = and(_T_36, _T_37) @[ivncontrol(4).scala 73:217]
          node _T_39 = or(_T_35, _T_38) @[ivncontrol(4).scala 73:178]
          when _T_39 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_2 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_3 = tail(_rowcount_1_T_2, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_3 @[ivncontrol(4).scala 74:29]
          else :
            node _T_40 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_41 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_42 = and(_T_40, _T_41) @[ivncontrol(4).scala 75:60]
            node _T_43 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_44 = and(_T_42, _T_43) @[ivncontrol(4).scala 75:98]
            node _T_45 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_46 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_47 = and(_T_45, _T_46) @[ivncontrol(4).scala 75:175]
            node _T_48 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_49 = and(_T_47, _T_48) @[ivncontrol(4).scala 75:213]
            node _T_50 = or(_T_44, _T_49) @[ivncontrol(4).scala 75:136]
            node _T_51 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_52 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_53 = and(_T_51, _T_52) @[ivncontrol(4).scala 75:293]
            node _T_54 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_55 = and(_T_53, _T_54) @[ivncontrol(4).scala 75:331]
            node _T_56 = or(_T_50, _T_55) @[ivncontrol(4).scala 75:253]
            when _T_56 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_4 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_5 = tail(_rowcount_1_T_4, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_5 @[ivncontrol(4).scala 76:29]
      rowcount[1] <= count[1] @[ivncontrol(4).scala 66:21]
      node _T_57 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_57 : @[ivncontrol(4).scala 67:49]
        node _T_58 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_59 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_60 = and(_T_58, _T_59) @[ivncontrol(4).scala 71:54]
        node _T_61 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_62 = and(_T_60, _T_61) @[ivncontrol(4).scala 71:92]
        node _T_63 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_64 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_65 = and(_T_63, _T_64) @[ivncontrol(4).scala 71:170]
        node _T_66 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_67 = and(_T_65, _T_66) @[ivncontrol(4).scala 71:208]
        node _T_68 = or(_T_62, _T_67) @[ivncontrol(4).scala 71:131]
        node _T_69 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_70 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_71 = and(_T_69, _T_70) @[ivncontrol(4).scala 71:284]
        node _T_72 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_73 = and(_T_71, _T_72) @[ivncontrol(4).scala 71:322]
        node _T_74 = or(_T_68, _T_73) @[ivncontrol(4).scala 71:246]
        when _T_74 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T_6 = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_7 = tail(_rowcount_1_T_6, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_7 @[ivncontrol(4).scala 72:29]
        else :
          node _T_75 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_76 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_77 = and(_T_75, _T_76) @[ivncontrol(4).scala 73:60]
          node _T_78 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_79 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_80 = and(_T_78, _T_79) @[ivncontrol(4).scala 73:138]
          node _T_81 = or(_T_77, _T_80) @[ivncontrol(4).scala 73:99]
          node _T_82 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_83 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_84 = and(_T_82, _T_83) @[ivncontrol(4).scala 73:217]
          node _T_85 = or(_T_81, _T_84) @[ivncontrol(4).scala 73:178]
          when _T_85 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_8 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_9 = tail(_rowcount_1_T_8, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_9 @[ivncontrol(4).scala 74:29]
          else :
            node _T_86 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_87 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_88 = and(_T_86, _T_87) @[ivncontrol(4).scala 75:60]
            node _T_89 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_90 = and(_T_88, _T_89) @[ivncontrol(4).scala 75:98]
            node _T_91 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_92 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_93 = and(_T_91, _T_92) @[ivncontrol(4).scala 75:175]
            node _T_94 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_95 = and(_T_93, _T_94) @[ivncontrol(4).scala 75:213]
            node _T_96 = or(_T_90, _T_95) @[ivncontrol(4).scala 75:136]
            node _T_97 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_98 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_99 = and(_T_97, _T_98) @[ivncontrol(4).scala 75:293]
            node _T_100 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_101 = and(_T_99, _T_100) @[ivncontrol(4).scala 75:331]
            node _T_102 = or(_T_96, _T_101) @[ivncontrol(4).scala 75:253]
            when _T_102 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_10 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_11 = tail(_rowcount_1_T_10, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_11 @[ivncontrol(4).scala 76:29]
    node _T_103 = lt(i, UInt<2>("h3")) @[ivncontrol(4).scala 87:14]
    node _T_104 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 87:46]
    node _T_105 = and(_T_103, _T_104) @[ivncontrol(4).scala 87:40]
    when _T_105 : @[ivncontrol(4).scala 87:74]
      node _i_T = add(i, UInt<1>("h1")) @[ivncontrol(4).scala 88:16]
      node _i_T_1 = tail(_i_T, 1) @[ivncontrol(4).scala 88:16]
      i <= _i_T_1 @[ivncontrol(4).scala 88:11]
    node _T_106 = lt(j, UInt<2>("h3")) @[ivncontrol(4).scala 91:14]
    node _T_107 = leq(i, UInt<2>("h3")) @[ivncontrol(4).scala 91:44]
    node _T_108 = and(_T_106, _T_107) @[ivncontrol(4).scala 91:39]
    when _T_108 : @[ivncontrol(4).scala 91:71]
      node _j_T = add(j, UInt<1>("h1")) @[ivncontrol(4).scala 92:16]
      node _j_T_1 = tail(_j_T, 1) @[ivncontrol(4).scala 92:16]
      j <= _j_T_1 @[ivncontrol(4).scala 92:11]
    else :
      node _T_109 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 94:19]
      node _T_110 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 94:53]
      node _T_111 = and(_T_109, _T_110) @[ivncontrol(4).scala 94:47]
      when _T_111 : @[ivncontrol(4).scala 94:81]
        j <= j @[ivncontrol(4).scala 95:11]
      else :
        j <= UInt<1>("h0") @[ivncontrol(4).scala 98:11]
    io.o_vn <= i_vn @[ivncontrol(4).scala 105:13]
    i_vn[0] <= UInt<5>("h1a") @[ivncontrol(4).scala 108:17]
    i_vn[1] <= UInt<5>("h4") @[ivncontrol(4).scala 108:17]
    i_vn[2] <= UInt<5>("h19") @[ivncontrol(4).scala 108:17]
    i_vn[3] <= UInt<5>("h12") @[ivncontrol(4).scala 108:17]
    node _T_112 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 118:14]
    node _T_113 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 118:47]
    node _T_114 = and(_T_112, _T_113) @[ivncontrol(4).scala 118:41]
    when _T_114 : @[ivncontrol(4).scala 118:75]
      valid <= UInt<1>("h1") @[ivncontrol(4).scala 119:14]
    else :
      valid <= UInt<1>("h0") @[ivncontrol(4).scala 121:14]
    node _T_115 = eq(valid, UInt<1>("h1")) @[ivncontrol(4).scala 129:17]
    when _T_115 : @[ivncontrol(4).scala 129:28]
      node _T_116 = geq(UInt<3>("h4"), UInt<2>("h2")) @[ivncontrol(4).scala 130:25]
      when _T_116 : @[ivncontrol(4).scala 130:32]
        node _T_117 = eq(rowcount[0], UInt<2>("h2")) @[ivncontrol(4).scala 131:29]
        when _T_117 : @[ivncontrol(4).scala 131:38]
          i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 132:25]
          i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 133:25]
          node _T_118 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 134:34]
          when _T_118 : @[ivncontrol(4).scala 134:42]
            i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 135:29]
            i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 136:29]
          else :
            node _T_119 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 137:39]
            when _T_119 : @[ivncontrol(4).scala 137:46]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 138:29]
            else :
              node _T_120 = gt(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 139:40]
              when _T_120 : @[ivncontrol(4).scala 139:46]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 140:29]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 141:29]
        else :
          node _T_121 = eq(rowcount[0], UInt<1>("h1")) @[ivncontrol(4).scala 145:35]
          when _T_121 : @[ivncontrol(4).scala 145:43]
            i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 146:25]
            node _T_122 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 147:33]
            when _T_122 : @[ivncontrol(4).scala 147:40]
              i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 148:29]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 149:29]
              i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 150:29]
            else :
              node _T_123 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 151:39]
              when _T_123 : @[ivncontrol(4).scala 151:46]
                i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 152:29]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 153:29]
              else :
                node _T_124 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 155:39]
                when _T_124 : @[ivncontrol(4).scala 155:46]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 156:31]
                else :
                  node _T_125 = gt(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 158:39]
                  when _T_125 : @[ivncontrol(4).scala 158:44]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 159:30]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 160:29]
                    i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 161:29]
          else :
            node _T_126 = eq(rowcount[0], UInt<2>("h3")) @[ivncontrol(4).scala 167:35]
            when _T_126 : @[ivncontrol(4).scala 167:43]
              i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 168:25]
              i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 169:25]
              i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 170:25]
              node _T_127 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 171:34]
              when _T_127 : @[ivncontrol(4).scala 171:42]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 172:29]
            else :
              node _T_128 = eq(rowcount[0], UInt<1>("h0")) @[ivncontrol(4).scala 175:35]
              when _T_128 : @[ivncontrol(4).scala 175:43]
                node _T_129 = eq(rowcount[1], UInt<3>("h4")) @[ivncontrol(4).scala 176:33]
                when _T_129 : @[ivncontrol(4).scala 176:41]
                  i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 177:29]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 178:29]
                  i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 179:29]
                  i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 180:29]
                else :
                  node _T_130 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 181:39]
                  when _T_130 : @[ivncontrol(4).scala 181:46]
                    i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 182:29]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 183:29]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 184:29]
                  else :
                    node _T_131 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 185:39]
                    when _T_131 : @[ivncontrol(4).scala 185:46]
                      i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 186:29]
                      i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 187:29]
                    else :
                      node _T_132 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 188:39]
                      when _T_132 : @[ivncontrol(4).scala 188:46]
                        i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 189:29]
              else :
                node _T_133 = eq(rowcount[0], UInt<3>("h4")) @[ivncontrol(4).scala 191:35]
                when _T_133 : @[ivncontrol(4).scala 191:42]
                  i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 192:25]
                  i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 193:25]
                  i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 194:25]
                  i_vn[3] <= UInt<1>("h0") @[ivncontrol(4).scala 195:25]

  module fancontrol4_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, o_reduction_add : UInt[3], o_reduction_cmd : UInt<3>[3], o_reduction_valid : UInt<1>}

    wire _r_reduction_add_WIRE : UInt<1>[3] @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    reg r_reduction_add : UInt<1>[3], clock with :
      reset => (reset, _r_reduction_add_WIRE) @[FanCtrl.scala 19:34]
    wire _r_reduction_cmd_WIRE : UInt<3>[3] @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    reg r_reduction_cmd : UInt<3>[3], clock with :
      reset => (reset, _r_reduction_cmd_WIRE) @[FanCtrl.scala 20:34]
    wire _r_add_lvl_0Reg_WIRE : UInt<1>[8] @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[5] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[6] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[7] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    reg r_add_lvl_0Reg : UInt<1>[8], clock with :
      reset => (reset, _r_add_lvl_0Reg_WIRE) @[FanCtrl.scala 23:33]
    wire _r_add_lvl_1Reg_WIRE : UInt<1>[5] @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    reg r_add_lvl_1Reg : UInt<1>[5], clock with :
      reset => (reset, _r_add_lvl_1Reg_WIRE) @[FanCtrl.scala 24:33]
    wire _r_cmd_lvl_0Reg_WIRE : UInt<3>[8] @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[5] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[6] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[7] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    reg r_cmd_lvl_0Reg : UInt<3>[8], clock with :
      reset => (reset, _r_cmd_lvl_0Reg_WIRE) @[FanCtrl.scala 27:33]
    wire _r_cmd_lvl_1Reg_WIRE : UInt<3>[5] @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    reg r_cmd_lvl_1Reg : UInt<3>[5], clock with :
      reset => (reset, _r_cmd_lvl_1Reg_WIRE) @[FanCtrl.scala 28:33]
    wire _w_vn_WIRE : UInt<5>[4] @[FanCtrl.scala 34:31]
    _w_vn_WIRE[0] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[1] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[2] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[3] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    reg w_vn : UInt<5>[4], clock with :
      reset => (reset, _w_vn_WIRE) @[FanCtrl.scala 34:23]
    wire _r_valid_WIRE : UInt<1>[5] @[FanCtrl.scala 35:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    reg r_valid : UInt<1>[5], clock with :
      reset => (reset, _r_valid_WIRE) @[FanCtrl.scala 35:26]
    w_vn <= io.i_vn @[FanCtrl.scala 37:10]
    node _T = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T : @[FanCtrl.scala 40:25]
      node _T_1 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_1 : @[FanCtrl.scala 41:34]
        node _T_2 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:25]
        node _T_3 = add(_T_2, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_4 = tail(_T_3, 1) @[FanCtrl.scala 42:31]
        node _T_5 = bits(_T_4, 1, 0)
        node _T_6 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:52]
        node _T_7 = add(_T_6, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_8 = tail(_T_7, 1) @[FanCtrl.scala 42:58]
        node _T_9 = bits(_T_8, 1, 0)
        node _T_10 = eq(w_vn[_T_5], w_vn[_T_9]) @[FanCtrl.scala 42:39]
        when _T_10 : @[FanCtrl.scala 42:66]
          node _T_11 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 43:34]
          node _T_12 = tail(_T_11, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_12] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_13 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 45:32]
          node _T_14 = tail(_T_13, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_14] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_15 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 48:28]
        node _T_16 = add(_T_15, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_17 = tail(_T_16, 1) @[FanCtrl.scala 48:34]
        node _T_18 = bits(_T_17, 1, 0)
        node _T_19 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 49:26]
        node _T_20 = add(_T_19, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_21 = tail(_T_20, 1) @[FanCtrl.scala 49:32]
        node _T_22 = bits(_T_21, 1, 0)
        node _T_23 = neq(w_vn[_T_18], w_vn[_T_22]) @[FanCtrl.scala 48:41]
        node _T_24 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 50:27]
        node _T_25 = add(_T_24, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_26 = tail(_T_25, 1) @[FanCtrl.scala 50:33]
        node _T_27 = bits(_T_26, 1, 0)
        node _T_28 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 51:26]
        node _T_29 = add(_T_28, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_30 = tail(_T_29, 1) @[FanCtrl.scala 51:32]
        node _T_31 = bits(_T_30, 1, 0)
        node _T_32 = neq(w_vn[_T_27], w_vn[_T_31]) @[FanCtrl.scala 50:41]
        node _T_33 = and(_T_23, _T_32) @[FanCtrl.scala 49:41]
        when _T_33 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_34 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 55:34]
          node _T_35 = add(_T_34, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_36 = tail(_T_35, 1) @[FanCtrl.scala 55:40]
          node _T_37 = bits(_T_36, 1, 0)
          node _T_38 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 56:32]
          node _T_39 = add(_T_38, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_40 = tail(_T_39, 1) @[FanCtrl.scala 56:38]
          node _T_41 = bits(_T_40, 1, 0)
          node _T_42 = eq(w_vn[_T_37], w_vn[_T_41]) @[FanCtrl.scala 55:48]
          node _T_43 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 57:33]
          node _T_44 = add(_T_43, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_45 = tail(_T_44, 1) @[FanCtrl.scala 57:39]
          node _T_46 = bits(_T_45, 1, 0)
          node _T_47 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 58:32]
          node _T_48 = add(_T_47, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_49 = tail(_T_48, 1) @[FanCtrl.scala 58:38]
          node _T_50 = bits(_T_49, 1, 0)
          node _T_51 = neq(w_vn[_T_46], w_vn[_T_50]) @[FanCtrl.scala 57:46]
          node _T_52 = and(_T_42, _T_51) @[FanCtrl.scala 56:46]
          when _T_52 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_53 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 67:32]
        node _T_54 = tail(_T_53, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_54] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_55 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 77:29]
      node _T_56 = tail(_T_55, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_56] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_57 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_57 : @[FanCtrl.scala 81:34]
        node _T_58 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:25]
        node _T_59 = add(_T_58, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_60 = tail(_T_59, 1) @[FanCtrl.scala 82:31]
        node _T_61 = bits(_T_60, 1, 0)
        node _T_62 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:52]
        node _T_63 = add(_T_62, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_64 = tail(_T_63, 1) @[FanCtrl.scala 82:58]
        node _T_65 = bits(_T_64, 1, 0)
        node _T_66 = eq(w_vn[_T_61], w_vn[_T_65]) @[FanCtrl.scala 82:39]
        when _T_66 : @[FanCtrl.scala 82:66]
          node _T_67 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 83:33]
          node _T_68 = tail(_T_67, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_68] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_69 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 85:33]
          node _T_70 = tail(_T_69, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_70] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_71 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:26]
        node _T_72 = add(_T_71, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_73 = tail(_T_72, 1) @[FanCtrl.scala 88:32]
        node _T_74 = bits(_T_73, 1, 0)
        node _T_75 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:52]
        node _T_76 = sub(_T_75, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_77 = tail(_T_76, 1) @[FanCtrl.scala 88:58]
        node _T_78 = bits(_T_77, 1, 0)
        node _T_79 = neq(w_vn[_T_74], w_vn[_T_78]) @[FanCtrl.scala 88:39]
        node _T_80 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:23]
        node _T_81 = add(_T_80, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_82 = tail(_T_81, 1) @[FanCtrl.scala 89:29]
        node _T_83 = bits(_T_82, 1, 0)
        node _T_84 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:50]
        node _T_85 = add(_T_84, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_86 = tail(_T_85, 1) @[FanCtrl.scala 89:56]
        node _T_87 = bits(_T_86, 1, 0)
        node _T_88 = neq(w_vn[_T_83], w_vn[_T_87]) @[FanCtrl.scala 89:37]
        node _T_89 = and(_T_79, _T_88) @[FanCtrl.scala 88:67]
        when _T_89 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_90 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:32]
          node _T_91 = add(_T_90, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_92 = tail(_T_91, 1) @[FanCtrl.scala 93:38]
          node _T_93 = bits(_T_92, 1, 0)
          node _T_94 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:59]
          node _T_95 = sub(_T_94, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_96 = tail(_T_95, 1) @[FanCtrl.scala 93:65]
          node _T_97 = bits(_T_96, 1, 0)
          node _T_98 = eq(w_vn[_T_93], w_vn[_T_97]) @[FanCtrl.scala 93:46]
          node _T_99 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:23]
          node _T_100 = add(_T_99, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_101 = tail(_T_100, 1) @[FanCtrl.scala 94:29]
          node _T_102 = bits(_T_101, 1, 0)
          node _T_103 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:50]
          node _T_104 = add(_T_103, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_105 = tail(_T_104, 1) @[FanCtrl.scala 94:56]
          node _T_106 = bits(_T_105, 1, 0)
          node _T_107 = neq(w_vn[_T_102], w_vn[_T_106]) @[FanCtrl.scala 94:37]
          node _T_108 = and(_T_98, _T_107) @[FanCtrl.scala 93:73]
          when _T_108 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_109 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 102:31]
        node _T_110 = tail(_T_109, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_110] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_111 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T_111 : @[FanCtrl.scala 40:25]
      node _T_112 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_112 : @[FanCtrl.scala 41:34]
        node _T_113 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:25]
        node _T_114 = add(_T_113, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_115 = tail(_T_114, 1) @[FanCtrl.scala 42:31]
        node _T_116 = bits(_T_115, 1, 0)
        node _T_117 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:52]
        node _T_118 = add(_T_117, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_119 = tail(_T_118, 1) @[FanCtrl.scala 42:58]
        node _T_120 = bits(_T_119, 1, 0)
        node _T_121 = eq(w_vn[_T_116], w_vn[_T_120]) @[FanCtrl.scala 42:39]
        when _T_121 : @[FanCtrl.scala 42:66]
          node _T_122 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 43:34]
          node _T_123 = tail(_T_122, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_123] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_124 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 45:32]
          node _T_125 = tail(_T_124, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_125] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_126 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 48:28]
        node _T_127 = add(_T_126, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_128 = tail(_T_127, 1) @[FanCtrl.scala 48:34]
        node _T_129 = bits(_T_128, 1, 0)
        node _T_130 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 49:26]
        node _T_131 = add(_T_130, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_132 = tail(_T_131, 1) @[FanCtrl.scala 49:32]
        node _T_133 = bits(_T_132, 1, 0)
        node _T_134 = neq(w_vn[_T_129], w_vn[_T_133]) @[FanCtrl.scala 48:41]
        node _T_135 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 50:27]
        node _T_136 = add(_T_135, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_137 = tail(_T_136, 1) @[FanCtrl.scala 50:33]
        node _T_138 = bits(_T_137, 1, 0)
        node _T_139 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 51:26]
        node _T_140 = add(_T_139, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_141 = tail(_T_140, 1) @[FanCtrl.scala 51:32]
        node _T_142 = bits(_T_141, 1, 0)
        node _T_143 = neq(w_vn[_T_138], w_vn[_T_142]) @[FanCtrl.scala 50:41]
        node _T_144 = and(_T_134, _T_143) @[FanCtrl.scala 49:41]
        when _T_144 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_145 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 55:34]
          node _T_146 = add(_T_145, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_147 = tail(_T_146, 1) @[FanCtrl.scala 55:40]
          node _T_148 = bits(_T_147, 1, 0)
          node _T_149 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 56:32]
          node _T_150 = add(_T_149, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_151 = tail(_T_150, 1) @[FanCtrl.scala 56:38]
          node _T_152 = bits(_T_151, 1, 0)
          node _T_153 = eq(w_vn[_T_148], w_vn[_T_152]) @[FanCtrl.scala 55:48]
          node _T_154 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 57:33]
          node _T_155 = add(_T_154, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_156 = tail(_T_155, 1) @[FanCtrl.scala 57:39]
          node _T_157 = bits(_T_156, 1, 0)
          node _T_158 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 58:32]
          node _T_159 = add(_T_158, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_160 = tail(_T_159, 1) @[FanCtrl.scala 58:38]
          node _T_161 = bits(_T_160, 1, 0)
          node _T_162 = neq(w_vn[_T_157], w_vn[_T_161]) @[FanCtrl.scala 57:46]
          node _T_163 = and(_T_153, _T_162) @[FanCtrl.scala 56:46]
          when _T_163 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_164 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 67:32]
        node _T_165 = tail(_T_164, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_165] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_166 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 77:29]
      node _T_167 = tail(_T_166, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_167] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_168 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_168 : @[FanCtrl.scala 81:34]
        node _T_169 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:25]
        node _T_170 = add(_T_169, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_171 = tail(_T_170, 1) @[FanCtrl.scala 82:31]
        node _T_172 = bits(_T_171, 1, 0)
        node _T_173 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:52]
        node _T_174 = add(_T_173, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_175 = tail(_T_174, 1) @[FanCtrl.scala 82:58]
        node _T_176 = bits(_T_175, 1, 0)
        node _T_177 = eq(w_vn[_T_172], w_vn[_T_176]) @[FanCtrl.scala 82:39]
        when _T_177 : @[FanCtrl.scala 82:66]
          node _T_178 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 83:33]
          node _T_179 = tail(_T_178, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_179] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_180 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 85:33]
          node _T_181 = tail(_T_180, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_181] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_182 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:26]
        node _T_183 = add(_T_182, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_184 = tail(_T_183, 1) @[FanCtrl.scala 88:32]
        node _T_185 = bits(_T_184, 1, 0)
        node _T_186 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:52]
        node _T_187 = sub(_T_186, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_188 = tail(_T_187, 1) @[FanCtrl.scala 88:58]
        node _T_189 = bits(_T_188, 1, 0)
        node _T_190 = neq(w_vn[_T_185], w_vn[_T_189]) @[FanCtrl.scala 88:39]
        node _T_191 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:23]
        node _T_192 = add(_T_191, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_193 = tail(_T_192, 1) @[FanCtrl.scala 89:29]
        node _T_194 = bits(_T_193, 1, 0)
        node _T_195 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:50]
        node _T_196 = add(_T_195, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_197 = tail(_T_196, 1) @[FanCtrl.scala 89:56]
        node _T_198 = bits(_T_197, 1, 0)
        node _T_199 = neq(w_vn[_T_194], w_vn[_T_198]) @[FanCtrl.scala 89:37]
        node _T_200 = and(_T_190, _T_199) @[FanCtrl.scala 88:67]
        when _T_200 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_201 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:32]
          node _T_202 = add(_T_201, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_203 = tail(_T_202, 1) @[FanCtrl.scala 93:38]
          node _T_204 = bits(_T_203, 1, 0)
          node _T_205 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:59]
          node _T_206 = sub(_T_205, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_207 = tail(_T_206, 1) @[FanCtrl.scala 93:65]
          node _T_208 = bits(_T_207, 1, 0)
          node _T_209 = eq(w_vn[_T_204], w_vn[_T_208]) @[FanCtrl.scala 93:46]
          node _T_210 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:23]
          node _T_211 = add(_T_210, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_212 = tail(_T_211, 1) @[FanCtrl.scala 94:29]
          node _T_213 = bits(_T_212, 1, 0)
          node _T_214 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:50]
          node _T_215 = add(_T_214, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_216 = tail(_T_215, 1) @[FanCtrl.scala 94:56]
          node _T_217 = bits(_T_216, 1, 0)
          node _T_218 = neq(w_vn[_T_213], w_vn[_T_217]) @[FanCtrl.scala 94:37]
          node _T_219 = and(_T_209, _T_218) @[FanCtrl.scala 93:73]
          when _T_219 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_220 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 102:31]
        node _T_221 = tail(_T_220, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_221] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_222 = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 112:14]
    when _T_222 : @[FanCtrl.scala 112:23]
      node _T_223 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 113:27]
      node _T_224 = tail(_T_223, 1) @[FanCtrl.scala 113:27]
      r_reduction_add[_T_224] <= UInt<1>("h0") @[FanCtrl.scala 113:34]
      node _T_225 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 114:28]
      node _T_226 = tail(_T_225, 1) @[FanCtrl.scala 114:28]
      r_reduction_cmd[_T_226] <= UInt<1>("h0") @[FanCtrl.scala 114:35]
      node _T_227 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 116:23]
      when _T_227 : @[FanCtrl.scala 116:32]
        node _T_228 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:23]
        node _T_229 = add(_T_228, UInt<1>("h1")) @[FanCtrl.scala 117:29]
        node _T_230 = tail(_T_229, 1) @[FanCtrl.scala 117:29]
        node _T_231 = bits(_T_230, 1, 0)
        node _T_232 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:50]
        node _T_233 = add(_T_232, UInt<2>("h2")) @[FanCtrl.scala 117:56]
        node _T_234 = tail(_T_233, 1) @[FanCtrl.scala 117:56]
        node _T_235 = bits(_T_234, 1, 0)
        node _T_236 = eq(w_vn[_T_231], w_vn[_T_235]) @[FanCtrl.scala 117:37]
        when _T_236 : @[FanCtrl.scala 117:65]
          node _T_237 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 118:31]
          node _T_238 = tail(_T_237, 1) @[FanCtrl.scala 118:31]
          r_reduction_add[_T_238] <= UInt<1>("h1") @[FanCtrl.scala 118:38]
        else :
          node _T_239 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 120:31]
          node _T_240 = tail(_T_239, 1) @[FanCtrl.scala 120:31]
          r_reduction_add[_T_240] <= UInt<1>("h0") @[FanCtrl.scala 120:38]
        node _T_241 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:24]
        node _T_242 = add(_T_241, UInt<1>("h0")) @[FanCtrl.scala 123:30]
        node _T_243 = tail(_T_242, 1) @[FanCtrl.scala 123:30]
        node _T_244 = bits(_T_243, 1, 0)
        node _T_245 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:51]
        node _T_246 = add(_T_245, UInt<1>("h1")) @[FanCtrl.scala 123:57]
        node _T_247 = tail(_T_246, 1) @[FanCtrl.scala 123:57]
        node _T_248 = bits(_T_247, 1, 0)
        node _T_249 = eq(w_vn[_T_244], w_vn[_T_248]) @[FanCtrl.scala 123:38]
        node _T_250 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:23]
        node _T_251 = add(_T_250, UInt<2>("h2")) @[FanCtrl.scala 124:29]
        node _T_252 = tail(_T_251, 1) @[FanCtrl.scala 124:29]
        node _T_253 = bits(_T_252, 1, 0)
        node _T_254 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:49]
        node _T_255 = add(_T_254, UInt<2>("h3")) @[FanCtrl.scala 124:55]
        node _T_256 = tail(_T_255, 1) @[FanCtrl.scala 124:55]
        node _T_257 = bits(_T_256, 1, 0)
        node _T_258 = eq(w_vn[_T_253], w_vn[_T_257]) @[FanCtrl.scala 124:36]
        node _T_259 = and(_T_249, _T_258) @[FanCtrl.scala 123:65]
        node _T_260 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:23]
        node _T_261 = add(_T_260, UInt<3>("h4")) @[FanCtrl.scala 125:29]
        node _T_262 = tail(_T_261, 1) @[FanCtrl.scala 125:29]
        node _T_263 = bits(_T_262, 1, 0)
        node _T_264 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:50]
        node _T_265 = add(_T_264, UInt<2>("h3")) @[FanCtrl.scala 125:56]
        node _T_266 = tail(_T_265, 1) @[FanCtrl.scala 125:56]
        node _T_267 = bits(_T_266, 1, 0)
        node _T_268 = neq(w_vn[_T_263], w_vn[_T_267]) @[FanCtrl.scala 125:37]
        node _T_269 = and(_T_259, _T_268) @[FanCtrl.scala 124:64]
        node _T_270 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:23]
        node _T_271 = add(_T_270, UInt<1>("h1")) @[FanCtrl.scala 126:29]
        node _T_272 = tail(_T_271, 1) @[FanCtrl.scala 126:29]
        node _T_273 = bits(_T_272, 1, 0)
        node _T_274 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:51]
        node _T_275 = add(_T_274, UInt<2>("h2")) @[FanCtrl.scala 126:57]
        node _T_276 = tail(_T_275, 1) @[FanCtrl.scala 126:57]
        node _T_277 = bits(_T_276, 1, 0)
        node _T_278 = neq(w_vn[_T_273], w_vn[_T_277]) @[FanCtrl.scala 126:37]
        node _T_279 = and(_T_269, _T_278) @[FanCtrl.scala 125:64]
        when _T_279 : @[FanCtrl.scala 126:66]
          node _T_280 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 128:31]
          node _T_281 = tail(_T_280, 1) @[FanCtrl.scala 128:31]
          r_reduction_cmd[_T_281] <= UInt<3>("h5") @[FanCtrl.scala 128:39]
        else :
          node _T_282 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:30]
          node _T_283 = add(_T_282, UInt<2>("h2")) @[FanCtrl.scala 130:36]
          node _T_284 = tail(_T_283, 1) @[FanCtrl.scala 130:36]
          node _T_285 = bits(_T_284, 1, 0)
          node _T_286 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:57]
          node _T_287 = add(_T_286, UInt<2>("h3")) @[FanCtrl.scala 130:63]
          node _T_288 = tail(_T_287, 1) @[FanCtrl.scala 130:63]
          node _T_289 = bits(_T_288, 1, 0)
          node _T_290 = eq(w_vn[_T_285], w_vn[_T_289]) @[FanCtrl.scala 130:44]
          node _T_291 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:29]
          node _T_292 = add(_T_291, UInt<3>("h4")) @[FanCtrl.scala 131:35]
          node _T_293 = tail(_T_292, 1) @[FanCtrl.scala 131:35]
          node _T_294 = bits(_T_293, 1, 0)
          node _T_295 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:57]
          node _T_296 = add(_T_295, UInt<2>("h3")) @[FanCtrl.scala 131:63]
          node _T_297 = tail(_T_296, 1) @[FanCtrl.scala 131:63]
          node _T_298 = bits(_T_297, 1, 0)
          node _T_299 = neq(w_vn[_T_294], w_vn[_T_298]) @[FanCtrl.scala 131:43]
          node _T_300 = and(_T_290, _T_299) @[FanCtrl.scala 130:71]
          node _T_301 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:29]
          node _T_302 = add(_T_301, UInt<1>("h1")) @[FanCtrl.scala 132:35]
          node _T_303 = tail(_T_302, 1) @[FanCtrl.scala 132:35]
          node _T_304 = bits(_T_303, 1, 0)
          node _T_305 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:57]
          node _T_306 = add(_T_305, UInt<2>("h2")) @[FanCtrl.scala 132:63]
          node _T_307 = tail(_T_306, 1) @[FanCtrl.scala 132:63]
          node _T_308 = bits(_T_307, 1, 0)
          node _T_309 = neq(w_vn[_T_304], w_vn[_T_308]) @[FanCtrl.scala 132:43]
          node _T_310 = and(_T_300, _T_309) @[FanCtrl.scala 131:71]
          when _T_310 : @[FanCtrl.scala 132:72]
            node _T_311 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 134:31]
            node _T_312 = tail(_T_311, 1) @[FanCtrl.scala 134:31]
            r_reduction_cmd[_T_312] <= UInt<3>("h4") @[FanCtrl.scala 134:38]
          else :
            node _T_313 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:30]
            node _T_314 = add(_T_313, UInt<1>("h0")) @[FanCtrl.scala 136:36]
            node _T_315 = tail(_T_314, 1) @[FanCtrl.scala 136:36]
            node _T_316 = bits(_T_315, 1, 0)
            node _T_317 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:56]
            node _T_318 = add(_T_317, UInt<1>("h1")) @[FanCtrl.scala 136:62]
            node _T_319 = tail(_T_318, 1) @[FanCtrl.scala 136:62]
            node _T_320 = bits(_T_319, 1, 0)
            node _T_321 = eq(w_vn[_T_316], w_vn[_T_320]) @[FanCtrl.scala 136:43]
            node _T_322 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:29]
            node _T_323 = add(_T_322, UInt<1>("h1")) @[FanCtrl.scala 137:35]
            node _T_324 = tail(_T_323, 1) @[FanCtrl.scala 137:35]
            node _T_325 = bits(_T_324, 1, 0)
            node _T_326 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:57]
            node _T_327 = add(_T_326, UInt<2>("h2")) @[FanCtrl.scala 137:63]
            node _T_328 = tail(_T_327, 1) @[FanCtrl.scala 137:63]
            node _T_329 = bits(_T_328, 1, 0)
            node _T_330 = neq(w_vn[_T_325], w_vn[_T_329]) @[FanCtrl.scala 137:43]
            node _T_331 = and(_T_321, _T_330) @[FanCtrl.scala 136:71]
            when _T_331 : @[FanCtrl.scala 137:72]
              node _T_332 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 139:31]
              node _T_333 = tail(_T_332, 1) @[FanCtrl.scala 139:31]
              r_reduction_cmd[_T_333] <= UInt<2>("h3") @[FanCtrl.scala 139:38]
            else :
              node _T_334 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 141:30]
              node _T_335 = tail(_T_334, 1) @[FanCtrl.scala 141:30]
              r_reduction_cmd[_T_335] <= UInt<1>("h0") @[FanCtrl.scala 141:36]
      else :
        node _T_336 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 144:29]
        node _T_337 = tail(_T_336, 1) @[FanCtrl.scala 144:29]
        r_reduction_add[_T_337] <= UInt<1>("h0") @[FanCtrl.scala 144:36]
        node _T_338 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 145:30]
        node _T_339 = tail(_T_338, 1) @[FanCtrl.scala 145:30]
        r_reduction_cmd[_T_339] <= UInt<1>("h0") @[FanCtrl.scala 145:37]
    wire _WIRE : UInt<1>[8] @[FanCtrl.scala 157:30]
    _WIRE[0] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[1] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[2] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[3] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[4] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[5] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[6] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[7] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    r_add_lvl_0Reg <= _WIRE @[FanCtrl.scala 157:20]
    wire _WIRE_1 : UInt<1>[5] @[FanCtrl.scala 168:30]
    _WIRE_1[0] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[1] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[2] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[3] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[4] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    r_add_lvl_1Reg <= _WIRE_1 @[FanCtrl.scala 168:20]
    wire _WIRE_2 : UInt<3>[8] @[FanCtrl.scala 185:30]
    _WIRE_2[0] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[1] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[2] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[3] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[4] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[5] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[6] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[7] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    r_cmd_lvl_0Reg <= _WIRE_2 @[FanCtrl.scala 185:20]
    wire _WIRE_3 : UInt<3>[5] @[FanCtrl.scala 199:30]
    _WIRE_3[0] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[1] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[2] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[3] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[4] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    r_cmd_lvl_1Reg <= _WIRE_3 @[FanCtrl.scala 199:20]
    node _T_340 = eq(io.i_stationary, UInt<1>("h0")) @[FanCtrl.scala 213:26]
    node _T_341 = eq(io.i_data_valid, UInt<1>("h1")) @[FanCtrl.scala 213:53]
    node _T_342 = and(_T_340, _T_341) @[FanCtrl.scala 213:34]
    when _T_342 : @[FanCtrl.scala 213:62]
      r_valid[0] <= UInt<1>("h1") @[FanCtrl.scala 214:18]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanCtrl.scala 216:18]
    r_valid[1] <= r_valid[0] @[FanCtrl.scala 222:24]
    r_valid[2] <= r_valid[1] @[FanCtrl.scala 222:24]
    r_valid[3] <= r_valid[2] @[FanCtrl.scala 222:24]
    r_valid[4] <= r_valid[3] @[FanCtrl.scala 222:24]
    io.o_reduction_valid <= r_valid[3] @[FanCtrl.scala 226:26]
    wire _WIRE_4 : UInt<1>[3] @[FanCtrl.scala 227:35]
    _WIRE_4[0] <= r_add_lvl_0Reg[6] @[FanCtrl.scala 227:35]
    _WIRE_4[1] <= r_add_lvl_0Reg[7] @[FanCtrl.scala 227:35]
    _WIRE_4[2] <= r_add_lvl_1Reg[4] @[FanCtrl.scala 227:35]
    io.o_reduction_add <= _WIRE_4 @[FanCtrl.scala 227:24]
    wire _WIRE_5 : UInt<3>[3] @[FanCtrl.scala 236:34]
    _WIRE_5[0] <= r_cmd_lvl_0Reg[6] @[FanCtrl.scala 236:34]
    _WIRE_5[1] <= r_cmd_lvl_0Reg[7] @[FanCtrl.scala 236:34]
    _WIRE_5[2] <= r_cmd_lvl_1Reg[4] @[FanCtrl.scala 236:34]
    io.o_reduction_cmd <= _WIRE_5 @[FanCtrl.scala 236:24]

  module Benes_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data_bus2 : UInt<16>[4], flip i_data_bus1 : UInt<16>[4], flip i_mux_bus : UInt<4>[4], o_dist_bus1 : UInt<16>[4], o_dist_bus2 : UInt<16>[4]}

    io.o_dist_bus1 <= io.i_data_bus1 @[Benes.scala 16:18]
    wire _parse_array_WIRE : UInt<16>[5] @[Benes.scala 19:37]
    _parse_array_WIRE[0] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[1] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[2] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[3] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[4] <= UInt<16>("h0") @[Benes.scala 19:37]
    wire parse_array : UInt<16>[5]
    parse_array <= _parse_array_WIRE
    node _T = neq(io.i_data_bus2[1], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T : @[Benes.scala 56:39]
      node _T_1 = orr(io.i_mux_bus[1]) @[Benes.scala 58:31]
      when _T_1 : @[Benes.scala 58:35]
        node _T_2 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 60:36]
        when _T_2 : @[Benes.scala 60:61]
          node _parsedindexvalue_T = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_1 = tail(_parsedindexvalue_T, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_1 = rem(_parsedindexvalue_T_1, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_2 = eq(_parsedindexvalue_first_stage_T_1, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_3 = add(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_4 = tail(_parsedindexvalue_first_stage_T_3, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_5 = sub(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_6 = tail(_parsedindexvalue_first_stage_T_5, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_7 = mux(_parsedindexvalue_first_stage_T_2, _parsedindexvalue_first_stage_T_4, _parsedindexvalue_first_stage_T_6) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage = mux(_parsedindexvalue_first_stage_T, _parsedindexvalue_first_stage_T_7, _parsedindexvalue_T_1) @[Benes.scala 24:26]
          node _parsedindexvalue_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_1 = bits(_parsedindexvalue_boolArray_T, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_3 = bits(_parsedindexvalue_boolArray_T_2, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray[0] <= _parsedindexvalue_boolArray_T_1 @[Benes.scala 28:28]
          parsedindexvalue_boolArray[1] <= _parsedindexvalue_boolArray_T_3 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage : UInt
          parsedindexvalue_second_stage <= parsedindexvalue_first_stage
          node parsedindexvalue_calculation = rem(parsedindexvalue_second_stage, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_1 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_2 = and(_parsedindexvalue_nextIndex_T, _parsedindexvalue_nextIndex_T_1) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_3 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_4 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_5 = and(_parsedindexvalue_nextIndex_T_3, _parsedindexvalue_nextIndex_T_4) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_6 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_7 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_8 = and(_parsedindexvalue_nextIndex_T_6, _parsedindexvalue_nextIndex_T_7) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_9 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_10 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_11 = and(_parsedindexvalue_nextIndex_T_9, _parsedindexvalue_nextIndex_T_10) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_12 = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_13 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_14 = and(_parsedindexvalue_nextIndex_T_12, _parsedindexvalue_nextIndex_T_13) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_15 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_16 = tail(_parsedindexvalue_nextIndex_T_15, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_17 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_18 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_19 = and(_parsedindexvalue_nextIndex_T_17, _parsedindexvalue_nextIndex_T_18) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_20 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_21 = tail(_parsedindexvalue_nextIndex_T_20, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_22 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_23 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_24 = and(_parsedindexvalue_nextIndex_T_22, _parsedindexvalue_nextIndex_T_23) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_25 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_26 = tail(_parsedindexvalue_nextIndex_T_25, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_27 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_28 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_29 = and(_parsedindexvalue_nextIndex_T_27, _parsedindexvalue_nextIndex_T_28) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_30 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_31 = tail(_parsedindexvalue_nextIndex_T_30, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_32 = mux(_parsedindexvalue_nextIndex_T_29, _parsedindexvalue_nextIndex_T_31, parsedindexvalue_second_stage) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_33 = mux(_parsedindexvalue_nextIndex_T_24, _parsedindexvalue_nextIndex_T_26, _parsedindexvalue_nextIndex_T_32) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_34 = mux(_parsedindexvalue_nextIndex_T_19, _parsedindexvalue_nextIndex_T_21, _parsedindexvalue_nextIndex_T_33) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_35 = mux(_parsedindexvalue_nextIndex_T_14, _parsedindexvalue_nextIndex_T_16, _parsedindexvalue_nextIndex_T_34) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_36 = mux(_parsedindexvalue_nextIndex_T_11, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_35) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_37 = mux(_parsedindexvalue_nextIndex_T_8, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_36) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_38 = mux(_parsedindexvalue_nextIndex_T_5, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_37) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex = mux(_parsedindexvalue_nextIndex_T_2, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_38) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_1 = rem(parsedindexvalue_nextIndex, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_39 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_40 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_41 = and(_parsedindexvalue_nextIndex_T_39, _parsedindexvalue_nextIndex_T_40) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_42 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_43 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_44 = and(_parsedindexvalue_nextIndex_T_42, _parsedindexvalue_nextIndex_T_43) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_45 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_46 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_47 = and(_parsedindexvalue_nextIndex_T_45, _parsedindexvalue_nextIndex_T_46) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_48 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_49 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_50 = and(_parsedindexvalue_nextIndex_T_48, _parsedindexvalue_nextIndex_T_49) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_51 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_52 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_53 = and(_parsedindexvalue_nextIndex_T_51, _parsedindexvalue_nextIndex_T_52) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_54 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_55 = tail(_parsedindexvalue_nextIndex_T_54, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_56 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_57 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_58 = and(_parsedindexvalue_nextIndex_T_56, _parsedindexvalue_nextIndex_T_57) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_59 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_60 = tail(_parsedindexvalue_nextIndex_T_59, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_61 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_62 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_63 = and(_parsedindexvalue_nextIndex_T_61, _parsedindexvalue_nextIndex_T_62) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_64 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_65 = tail(_parsedindexvalue_nextIndex_T_64, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_66 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_67 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_68 = and(_parsedindexvalue_nextIndex_T_66, _parsedindexvalue_nextIndex_T_67) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_69 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_70 = tail(_parsedindexvalue_nextIndex_T_69, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_71 = mux(_parsedindexvalue_nextIndex_T_68, _parsedindexvalue_nextIndex_T_70, parsedindexvalue_nextIndex) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_72 = mux(_parsedindexvalue_nextIndex_T_63, _parsedindexvalue_nextIndex_T_65, _parsedindexvalue_nextIndex_T_71) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_73 = mux(_parsedindexvalue_nextIndex_T_58, _parsedindexvalue_nextIndex_T_60, _parsedindexvalue_nextIndex_T_72) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_74 = mux(_parsedindexvalue_nextIndex_T_53, _parsedindexvalue_nextIndex_T_55, _parsedindexvalue_nextIndex_T_73) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_75 = mux(_parsedindexvalue_nextIndex_T_50, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_74) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_76 = mux(_parsedindexvalue_nextIndex_T_47, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_75) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_77 = mux(_parsedindexvalue_nextIndex_T_44, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_76) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_1 = mux(_parsedindexvalue_nextIndex_T_41, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_77) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_1 = rem(parsedindexvalue_nextIndex_1, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_2 = eq(_parsedindexvalue_third_stage_T_1, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_3 = add(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_4 = tail(_parsedindexvalue_third_stage_T_3, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_5 = sub(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_6 = tail(_parsedindexvalue_third_stage_T_5, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_7 = mux(_parsedindexvalue_third_stage_T_2, _parsedindexvalue_third_stage_T_4, _parsedindexvalue_third_stage_T_6) @[Benes.scala 48:47]
          node parsedindexvalue = mux(_parsedindexvalue_third_stage_T, _parsedindexvalue_third_stage_T_7, parsedindexvalue_nextIndex_1) @[Benes.scala 48:24]
          node _T_3 = or(parsedindexvalue, UInt<3>("h0"))
          node _T_4 = bits(_T_3, 2, 0)
          parse_array[_T_4] <= io.i_data_bus2[1] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_8 = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_9 = rem(UInt<1>("h1"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_10 = eq(_parsedindexvalue_first_stage_T_9, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_11 = add(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_12 = tail(_parsedindexvalue_first_stage_T_11, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_13 = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_14 = tail(_parsedindexvalue_first_stage_T_13, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_15 = mux(_parsedindexvalue_first_stage_T_10, _parsedindexvalue_first_stage_T_12, _parsedindexvalue_first_stage_T_14) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_1 = mux(_parsedindexvalue_first_stage_T_8, _parsedindexvalue_first_stage_T_15, UInt<1>("h1")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_3 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_4 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_5 = bits(_parsedindexvalue_boolArray_T_4, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_6 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_7 = bits(_parsedindexvalue_boolArray_T_6, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_1 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[0] <= _parsedindexvalue_boolArray_T_5 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[1] <= _parsedindexvalue_boolArray_T_7 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_1 : UInt
          parsedindexvalue_second_stage_1 <= parsedindexvalue_first_stage_1
          node parsedindexvalue_calculation_2 = rem(parsedindexvalue_second_stage_1, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_78 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_79 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_80 = and(_parsedindexvalue_nextIndex_T_78, _parsedindexvalue_nextIndex_T_79) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_81 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_82 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_83 = and(_parsedindexvalue_nextIndex_T_81, _parsedindexvalue_nextIndex_T_82) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_84 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_85 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_86 = and(_parsedindexvalue_nextIndex_T_84, _parsedindexvalue_nextIndex_T_85) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_87 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_88 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_89 = and(_parsedindexvalue_nextIndex_T_87, _parsedindexvalue_nextIndex_T_88) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_90 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_91 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_92 = and(_parsedindexvalue_nextIndex_T_90, _parsedindexvalue_nextIndex_T_91) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_93 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_94 = tail(_parsedindexvalue_nextIndex_T_93, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_95 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_96 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_97 = and(_parsedindexvalue_nextIndex_T_95, _parsedindexvalue_nextIndex_T_96) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_98 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_99 = tail(_parsedindexvalue_nextIndex_T_98, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_100 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_101 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_102 = and(_parsedindexvalue_nextIndex_T_100, _parsedindexvalue_nextIndex_T_101) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_103 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_104 = tail(_parsedindexvalue_nextIndex_T_103, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_105 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_106 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_107 = and(_parsedindexvalue_nextIndex_T_105, _parsedindexvalue_nextIndex_T_106) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_108 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_109 = tail(_parsedindexvalue_nextIndex_T_108, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_110 = mux(_parsedindexvalue_nextIndex_T_107, _parsedindexvalue_nextIndex_T_109, parsedindexvalue_second_stage_1) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_111 = mux(_parsedindexvalue_nextIndex_T_102, _parsedindexvalue_nextIndex_T_104, _parsedindexvalue_nextIndex_T_110) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_112 = mux(_parsedindexvalue_nextIndex_T_97, _parsedindexvalue_nextIndex_T_99, _parsedindexvalue_nextIndex_T_111) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_113 = mux(_parsedindexvalue_nextIndex_T_92, _parsedindexvalue_nextIndex_T_94, _parsedindexvalue_nextIndex_T_112) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_114 = mux(_parsedindexvalue_nextIndex_T_89, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_113) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_115 = mux(_parsedindexvalue_nextIndex_T_86, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_114) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_116 = mux(_parsedindexvalue_nextIndex_T_83, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_115) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_2 = mux(_parsedindexvalue_nextIndex_T_80, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_116) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_3 = rem(parsedindexvalue_nextIndex_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_117 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_118 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_119 = and(_parsedindexvalue_nextIndex_T_117, _parsedindexvalue_nextIndex_T_118) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_120 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_121 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_122 = and(_parsedindexvalue_nextIndex_T_120, _parsedindexvalue_nextIndex_T_121) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_123 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_124 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_125 = and(_parsedindexvalue_nextIndex_T_123, _parsedindexvalue_nextIndex_T_124) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_126 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_127 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_128 = and(_parsedindexvalue_nextIndex_T_126, _parsedindexvalue_nextIndex_T_127) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_129 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_130 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_131 = and(_parsedindexvalue_nextIndex_T_129, _parsedindexvalue_nextIndex_T_130) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_132 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_133 = tail(_parsedindexvalue_nextIndex_T_132, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_134 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_135 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_136 = and(_parsedindexvalue_nextIndex_T_134, _parsedindexvalue_nextIndex_T_135) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_137 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_138 = tail(_parsedindexvalue_nextIndex_T_137, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_139 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_140 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_141 = and(_parsedindexvalue_nextIndex_T_139, _parsedindexvalue_nextIndex_T_140) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_142 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_143 = tail(_parsedindexvalue_nextIndex_T_142, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_144 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_145 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_146 = and(_parsedindexvalue_nextIndex_T_144, _parsedindexvalue_nextIndex_T_145) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_147 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_148 = tail(_parsedindexvalue_nextIndex_T_147, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_149 = mux(_parsedindexvalue_nextIndex_T_146, _parsedindexvalue_nextIndex_T_148, parsedindexvalue_nextIndex_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_150 = mux(_parsedindexvalue_nextIndex_T_141, _parsedindexvalue_nextIndex_T_143, _parsedindexvalue_nextIndex_T_149) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_151 = mux(_parsedindexvalue_nextIndex_T_136, _parsedindexvalue_nextIndex_T_138, _parsedindexvalue_nextIndex_T_150) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_152 = mux(_parsedindexvalue_nextIndex_T_131, _parsedindexvalue_nextIndex_T_133, _parsedindexvalue_nextIndex_T_151) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_153 = mux(_parsedindexvalue_nextIndex_T_128, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_152) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_154 = mux(_parsedindexvalue_nextIndex_T_125, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_153) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_155 = mux(_parsedindexvalue_nextIndex_T_122, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_154) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_3 = mux(_parsedindexvalue_nextIndex_T_119, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_155) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_8 = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_9 = rem(parsedindexvalue_nextIndex_3, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_10 = eq(_parsedindexvalue_third_stage_T_9, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_11 = add(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_12 = tail(_parsedindexvalue_third_stage_T_11, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_13 = sub(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_14 = tail(_parsedindexvalue_third_stage_T_13, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_15 = mux(_parsedindexvalue_third_stage_T_10, _parsedindexvalue_third_stage_T_12, _parsedindexvalue_third_stage_T_14) @[Benes.scala 48:47]
          node parsedindexvalue_1 = mux(_parsedindexvalue_third_stage_T_8, _parsedindexvalue_third_stage_T_15, parsedindexvalue_nextIndex_3) @[Benes.scala 48:24]
          node _T_5 = or(parsedindexvalue_1, UInt<3>("h0"))
          node _T_6 = bits(_T_5, 2, 0)
          parse_array[_T_6] <= io.i_data_bus2[1] @[Benes.scala 67:47]
      else :
        node _T_7 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 72:35]
        when _T_7 : @[Benes.scala 72:60]
          parse_array[1] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[1] <= io.i_data_bus2[1] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_8 = neq(io.i_data_bus2[2], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_8 : @[Benes.scala 56:39]
      node _T_9 = orr(io.i_mux_bus[2]) @[Benes.scala 58:31]
      when _T_9 : @[Benes.scala 58:35]
        node _T_10 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 60:36]
        when _T_10 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_4 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_5 = tail(_parsedindexvalue_T_4, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_16 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_17 = rem(_parsedindexvalue_T_5, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_18 = eq(_parsedindexvalue_first_stage_T_17, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_19 = add(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_20 = tail(_parsedindexvalue_first_stage_T_19, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_21 = sub(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_22 = tail(_parsedindexvalue_first_stage_T_21, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_23 = mux(_parsedindexvalue_first_stage_T_18, _parsedindexvalue_first_stage_T_20, _parsedindexvalue_first_stage_T_22) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_2 = mux(_parsedindexvalue_first_stage_T_16, _parsedindexvalue_first_stage_T_23, _parsedindexvalue_T_5) @[Benes.scala 24:26]
          node _parsedindexvalue_T_6 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_8 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_9 = bits(_parsedindexvalue_boolArray_T_8, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_10 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_11 = bits(_parsedindexvalue_boolArray_T_10, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_2 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[0] <= _parsedindexvalue_boolArray_T_9 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[1] <= _parsedindexvalue_boolArray_T_11 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_2 : UInt
          parsedindexvalue_second_stage_2 <= parsedindexvalue_first_stage_2
          node parsedindexvalue_calculation_4 = rem(parsedindexvalue_second_stage_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_156 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_157 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_158 = and(_parsedindexvalue_nextIndex_T_156, _parsedindexvalue_nextIndex_T_157) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_159 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_160 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_161 = and(_parsedindexvalue_nextIndex_T_159, _parsedindexvalue_nextIndex_T_160) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_162 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_163 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_164 = and(_parsedindexvalue_nextIndex_T_162, _parsedindexvalue_nextIndex_T_163) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_165 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_166 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_167 = and(_parsedindexvalue_nextIndex_T_165, _parsedindexvalue_nextIndex_T_166) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_168 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_169 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_170 = and(_parsedindexvalue_nextIndex_T_168, _parsedindexvalue_nextIndex_T_169) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_171 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_172 = tail(_parsedindexvalue_nextIndex_T_171, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_173 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_174 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_175 = and(_parsedindexvalue_nextIndex_T_173, _parsedindexvalue_nextIndex_T_174) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_176 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_177 = tail(_parsedindexvalue_nextIndex_T_176, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_178 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_179 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_180 = and(_parsedindexvalue_nextIndex_T_178, _parsedindexvalue_nextIndex_T_179) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_181 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_182 = tail(_parsedindexvalue_nextIndex_T_181, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_183 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_184 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_185 = and(_parsedindexvalue_nextIndex_T_183, _parsedindexvalue_nextIndex_T_184) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_186 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_187 = tail(_parsedindexvalue_nextIndex_T_186, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_188 = mux(_parsedindexvalue_nextIndex_T_185, _parsedindexvalue_nextIndex_T_187, parsedindexvalue_second_stage_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_189 = mux(_parsedindexvalue_nextIndex_T_180, _parsedindexvalue_nextIndex_T_182, _parsedindexvalue_nextIndex_T_188) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_190 = mux(_parsedindexvalue_nextIndex_T_175, _parsedindexvalue_nextIndex_T_177, _parsedindexvalue_nextIndex_T_189) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_191 = mux(_parsedindexvalue_nextIndex_T_170, _parsedindexvalue_nextIndex_T_172, _parsedindexvalue_nextIndex_T_190) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_192 = mux(_parsedindexvalue_nextIndex_T_167, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_191) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_193 = mux(_parsedindexvalue_nextIndex_T_164, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_192) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_194 = mux(_parsedindexvalue_nextIndex_T_161, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_193) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_4 = mux(_parsedindexvalue_nextIndex_T_158, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_194) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_5 = rem(parsedindexvalue_nextIndex_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_195 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_196 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_197 = and(_parsedindexvalue_nextIndex_T_195, _parsedindexvalue_nextIndex_T_196) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_198 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_199 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_200 = and(_parsedindexvalue_nextIndex_T_198, _parsedindexvalue_nextIndex_T_199) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_201 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_202 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_203 = and(_parsedindexvalue_nextIndex_T_201, _parsedindexvalue_nextIndex_T_202) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_204 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_205 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_206 = and(_parsedindexvalue_nextIndex_T_204, _parsedindexvalue_nextIndex_T_205) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_207 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_208 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_209 = and(_parsedindexvalue_nextIndex_T_207, _parsedindexvalue_nextIndex_T_208) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_210 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_211 = tail(_parsedindexvalue_nextIndex_T_210, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_212 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_213 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_214 = and(_parsedindexvalue_nextIndex_T_212, _parsedindexvalue_nextIndex_T_213) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_215 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_216 = tail(_parsedindexvalue_nextIndex_T_215, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_217 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_218 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_219 = and(_parsedindexvalue_nextIndex_T_217, _parsedindexvalue_nextIndex_T_218) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_220 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_221 = tail(_parsedindexvalue_nextIndex_T_220, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_222 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_223 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_224 = and(_parsedindexvalue_nextIndex_T_222, _parsedindexvalue_nextIndex_T_223) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_225 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_226 = tail(_parsedindexvalue_nextIndex_T_225, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_227 = mux(_parsedindexvalue_nextIndex_T_224, _parsedindexvalue_nextIndex_T_226, parsedindexvalue_nextIndex_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_228 = mux(_parsedindexvalue_nextIndex_T_219, _parsedindexvalue_nextIndex_T_221, _parsedindexvalue_nextIndex_T_227) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_229 = mux(_parsedindexvalue_nextIndex_T_214, _parsedindexvalue_nextIndex_T_216, _parsedindexvalue_nextIndex_T_228) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_230 = mux(_parsedindexvalue_nextIndex_T_209, _parsedindexvalue_nextIndex_T_211, _parsedindexvalue_nextIndex_T_229) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_231 = mux(_parsedindexvalue_nextIndex_T_206, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_230) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_232 = mux(_parsedindexvalue_nextIndex_T_203, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_231) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_233 = mux(_parsedindexvalue_nextIndex_T_200, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_232) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_5 = mux(_parsedindexvalue_nextIndex_T_197, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_233) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_16 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_17 = rem(parsedindexvalue_nextIndex_5, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_18 = eq(_parsedindexvalue_third_stage_T_17, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_19 = add(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_20 = tail(_parsedindexvalue_third_stage_T_19, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_21 = sub(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_22 = tail(_parsedindexvalue_third_stage_T_21, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_23 = mux(_parsedindexvalue_third_stage_T_18, _parsedindexvalue_third_stage_T_20, _parsedindexvalue_third_stage_T_22) @[Benes.scala 48:47]
          node parsedindexvalue_2 = mux(_parsedindexvalue_third_stage_T_16, _parsedindexvalue_third_stage_T_23, parsedindexvalue_nextIndex_5) @[Benes.scala 48:24]
          node _T_11 = or(parsedindexvalue_2, UInt<3>("h0"))
          node _T_12 = bits(_T_11, 2, 0)
          parse_array[_T_12] <= io.i_data_bus2[2] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_24 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_25 = rem(UInt<2>("h2"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_26 = eq(_parsedindexvalue_first_stage_T_25, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_27 = add(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_28 = tail(_parsedindexvalue_first_stage_T_27, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_29 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_30 = tail(_parsedindexvalue_first_stage_T_29, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_31 = mux(_parsedindexvalue_first_stage_T_26, _parsedindexvalue_first_stage_T_28, _parsedindexvalue_first_stage_T_30) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_3 = mux(_parsedindexvalue_first_stage_T_24, _parsedindexvalue_first_stage_T_31, UInt<2>("h2")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_7 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_12 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_13 = bits(_parsedindexvalue_boolArray_T_12, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_14 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_15 = bits(_parsedindexvalue_boolArray_T_14, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_3 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[0] <= _parsedindexvalue_boolArray_T_13 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[1] <= _parsedindexvalue_boolArray_T_15 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_3 : UInt
          parsedindexvalue_second_stage_3 <= parsedindexvalue_first_stage_3
          node parsedindexvalue_calculation_6 = rem(parsedindexvalue_second_stage_3, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_234 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_235 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_236 = and(_parsedindexvalue_nextIndex_T_234, _parsedindexvalue_nextIndex_T_235) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_237 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_238 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_239 = and(_parsedindexvalue_nextIndex_T_237, _parsedindexvalue_nextIndex_T_238) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_240 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_241 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_242 = and(_parsedindexvalue_nextIndex_T_240, _parsedindexvalue_nextIndex_T_241) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_243 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_244 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_245 = and(_parsedindexvalue_nextIndex_T_243, _parsedindexvalue_nextIndex_T_244) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_246 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_247 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_248 = and(_parsedindexvalue_nextIndex_T_246, _parsedindexvalue_nextIndex_T_247) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_249 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_250 = tail(_parsedindexvalue_nextIndex_T_249, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_251 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_252 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_253 = and(_parsedindexvalue_nextIndex_T_251, _parsedindexvalue_nextIndex_T_252) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_254 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_255 = tail(_parsedindexvalue_nextIndex_T_254, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_256 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_257 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_258 = and(_parsedindexvalue_nextIndex_T_256, _parsedindexvalue_nextIndex_T_257) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_259 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_260 = tail(_parsedindexvalue_nextIndex_T_259, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_261 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_262 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_263 = and(_parsedindexvalue_nextIndex_T_261, _parsedindexvalue_nextIndex_T_262) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_264 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_265 = tail(_parsedindexvalue_nextIndex_T_264, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_266 = mux(_parsedindexvalue_nextIndex_T_263, _parsedindexvalue_nextIndex_T_265, parsedindexvalue_second_stage_3) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_267 = mux(_parsedindexvalue_nextIndex_T_258, _parsedindexvalue_nextIndex_T_260, _parsedindexvalue_nextIndex_T_266) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_268 = mux(_parsedindexvalue_nextIndex_T_253, _parsedindexvalue_nextIndex_T_255, _parsedindexvalue_nextIndex_T_267) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_269 = mux(_parsedindexvalue_nextIndex_T_248, _parsedindexvalue_nextIndex_T_250, _parsedindexvalue_nextIndex_T_268) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_270 = mux(_parsedindexvalue_nextIndex_T_245, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_269) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_271 = mux(_parsedindexvalue_nextIndex_T_242, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_270) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_272 = mux(_parsedindexvalue_nextIndex_T_239, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_271) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_6 = mux(_parsedindexvalue_nextIndex_T_236, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_272) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_7 = rem(parsedindexvalue_nextIndex_6, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_273 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_274 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_275 = and(_parsedindexvalue_nextIndex_T_273, _parsedindexvalue_nextIndex_T_274) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_276 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_277 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_278 = and(_parsedindexvalue_nextIndex_T_276, _parsedindexvalue_nextIndex_T_277) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_279 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_280 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_281 = and(_parsedindexvalue_nextIndex_T_279, _parsedindexvalue_nextIndex_T_280) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_282 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_283 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_284 = and(_parsedindexvalue_nextIndex_T_282, _parsedindexvalue_nextIndex_T_283) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_285 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_286 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_287 = and(_parsedindexvalue_nextIndex_T_285, _parsedindexvalue_nextIndex_T_286) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_288 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_289 = tail(_parsedindexvalue_nextIndex_T_288, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_290 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_291 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_292 = and(_parsedindexvalue_nextIndex_T_290, _parsedindexvalue_nextIndex_T_291) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_293 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_294 = tail(_parsedindexvalue_nextIndex_T_293, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_295 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_296 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_297 = and(_parsedindexvalue_nextIndex_T_295, _parsedindexvalue_nextIndex_T_296) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_298 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_299 = tail(_parsedindexvalue_nextIndex_T_298, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_300 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_301 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_302 = and(_parsedindexvalue_nextIndex_T_300, _parsedindexvalue_nextIndex_T_301) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_303 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_304 = tail(_parsedindexvalue_nextIndex_T_303, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_305 = mux(_parsedindexvalue_nextIndex_T_302, _parsedindexvalue_nextIndex_T_304, parsedindexvalue_nextIndex_6) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_306 = mux(_parsedindexvalue_nextIndex_T_297, _parsedindexvalue_nextIndex_T_299, _parsedindexvalue_nextIndex_T_305) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_307 = mux(_parsedindexvalue_nextIndex_T_292, _parsedindexvalue_nextIndex_T_294, _parsedindexvalue_nextIndex_T_306) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_308 = mux(_parsedindexvalue_nextIndex_T_287, _parsedindexvalue_nextIndex_T_289, _parsedindexvalue_nextIndex_T_307) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_309 = mux(_parsedindexvalue_nextIndex_T_284, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_308) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_310 = mux(_parsedindexvalue_nextIndex_T_281, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_309) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_311 = mux(_parsedindexvalue_nextIndex_T_278, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_310) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_7 = mux(_parsedindexvalue_nextIndex_T_275, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_311) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_24 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_25 = rem(parsedindexvalue_nextIndex_7, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_26 = eq(_parsedindexvalue_third_stage_T_25, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_27 = add(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_28 = tail(_parsedindexvalue_third_stage_T_27, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_29 = sub(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_30 = tail(_parsedindexvalue_third_stage_T_29, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_31 = mux(_parsedindexvalue_third_stage_T_26, _parsedindexvalue_third_stage_T_28, _parsedindexvalue_third_stage_T_30) @[Benes.scala 48:47]
          node parsedindexvalue_3 = mux(_parsedindexvalue_third_stage_T_24, _parsedindexvalue_third_stage_T_31, parsedindexvalue_nextIndex_7) @[Benes.scala 48:24]
          node _T_13 = or(parsedindexvalue_3, UInt<3>("h0"))
          node _T_14 = bits(_T_13, 2, 0)
          parse_array[_T_14] <= io.i_data_bus2[2] @[Benes.scala 67:47]
      else :
        node _T_15 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 72:35]
        when _T_15 : @[Benes.scala 72:60]
          parse_array[2] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[2] <= io.i_data_bus2[2] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_16 = neq(io.i_data_bus2[3], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_16 : @[Benes.scala 56:39]
      node _T_17 = orr(io.i_mux_bus[3]) @[Benes.scala 58:31]
      when _T_17 : @[Benes.scala 58:35]
        node _T_18 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 60:36]
        when _T_18 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_8 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_9 = tail(_parsedindexvalue_T_8, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_32 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_33 = rem(_parsedindexvalue_T_9, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_34 = eq(_parsedindexvalue_first_stage_T_33, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_35 = add(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_36 = tail(_parsedindexvalue_first_stage_T_35, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_37 = sub(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_38 = tail(_parsedindexvalue_first_stage_T_37, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_39 = mux(_parsedindexvalue_first_stage_T_34, _parsedindexvalue_first_stage_T_36, _parsedindexvalue_first_stage_T_38) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_4 = mux(_parsedindexvalue_first_stage_T_32, _parsedindexvalue_first_stage_T_39, _parsedindexvalue_T_9) @[Benes.scala 24:26]
          node _parsedindexvalue_T_10 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_16 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_17 = bits(_parsedindexvalue_boolArray_T_16, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_18 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_19 = bits(_parsedindexvalue_boolArray_T_18, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_4 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[0] <= _parsedindexvalue_boolArray_T_17 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[1] <= _parsedindexvalue_boolArray_T_19 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_4 : UInt
          parsedindexvalue_second_stage_4 <= parsedindexvalue_first_stage_4
          node parsedindexvalue_calculation_8 = rem(parsedindexvalue_second_stage_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_312 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_313 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_314 = and(_parsedindexvalue_nextIndex_T_312, _parsedindexvalue_nextIndex_T_313) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_315 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_316 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_317 = and(_parsedindexvalue_nextIndex_T_315, _parsedindexvalue_nextIndex_T_316) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_318 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_319 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_320 = and(_parsedindexvalue_nextIndex_T_318, _parsedindexvalue_nextIndex_T_319) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_321 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_322 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_323 = and(_parsedindexvalue_nextIndex_T_321, _parsedindexvalue_nextIndex_T_322) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_324 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_325 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_326 = and(_parsedindexvalue_nextIndex_T_324, _parsedindexvalue_nextIndex_T_325) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_327 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_328 = tail(_parsedindexvalue_nextIndex_T_327, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_329 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_330 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_331 = and(_parsedindexvalue_nextIndex_T_329, _parsedindexvalue_nextIndex_T_330) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_332 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_333 = tail(_parsedindexvalue_nextIndex_T_332, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_334 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_335 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_336 = and(_parsedindexvalue_nextIndex_T_334, _parsedindexvalue_nextIndex_T_335) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_337 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_338 = tail(_parsedindexvalue_nextIndex_T_337, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_339 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_340 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_341 = and(_parsedindexvalue_nextIndex_T_339, _parsedindexvalue_nextIndex_T_340) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_342 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_343 = tail(_parsedindexvalue_nextIndex_T_342, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_344 = mux(_parsedindexvalue_nextIndex_T_341, _parsedindexvalue_nextIndex_T_343, parsedindexvalue_second_stage_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_345 = mux(_parsedindexvalue_nextIndex_T_336, _parsedindexvalue_nextIndex_T_338, _parsedindexvalue_nextIndex_T_344) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_346 = mux(_parsedindexvalue_nextIndex_T_331, _parsedindexvalue_nextIndex_T_333, _parsedindexvalue_nextIndex_T_345) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_347 = mux(_parsedindexvalue_nextIndex_T_326, _parsedindexvalue_nextIndex_T_328, _parsedindexvalue_nextIndex_T_346) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_348 = mux(_parsedindexvalue_nextIndex_T_323, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_347) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_349 = mux(_parsedindexvalue_nextIndex_T_320, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_348) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_350 = mux(_parsedindexvalue_nextIndex_T_317, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_349) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_8 = mux(_parsedindexvalue_nextIndex_T_314, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_350) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_9 = rem(parsedindexvalue_nextIndex_8, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_351 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_352 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_353 = and(_parsedindexvalue_nextIndex_T_351, _parsedindexvalue_nextIndex_T_352) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_354 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_355 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_356 = and(_parsedindexvalue_nextIndex_T_354, _parsedindexvalue_nextIndex_T_355) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_357 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_358 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_359 = and(_parsedindexvalue_nextIndex_T_357, _parsedindexvalue_nextIndex_T_358) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_360 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_361 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_362 = and(_parsedindexvalue_nextIndex_T_360, _parsedindexvalue_nextIndex_T_361) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_363 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_364 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_365 = and(_parsedindexvalue_nextIndex_T_363, _parsedindexvalue_nextIndex_T_364) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_366 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_367 = tail(_parsedindexvalue_nextIndex_T_366, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_368 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_369 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_370 = and(_parsedindexvalue_nextIndex_T_368, _parsedindexvalue_nextIndex_T_369) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_371 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_372 = tail(_parsedindexvalue_nextIndex_T_371, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_373 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_374 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_375 = and(_parsedindexvalue_nextIndex_T_373, _parsedindexvalue_nextIndex_T_374) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_376 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_377 = tail(_parsedindexvalue_nextIndex_T_376, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_378 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_379 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_380 = and(_parsedindexvalue_nextIndex_T_378, _parsedindexvalue_nextIndex_T_379) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_381 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_382 = tail(_parsedindexvalue_nextIndex_T_381, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_383 = mux(_parsedindexvalue_nextIndex_T_380, _parsedindexvalue_nextIndex_T_382, parsedindexvalue_nextIndex_8) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_384 = mux(_parsedindexvalue_nextIndex_T_375, _parsedindexvalue_nextIndex_T_377, _parsedindexvalue_nextIndex_T_383) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_385 = mux(_parsedindexvalue_nextIndex_T_370, _parsedindexvalue_nextIndex_T_372, _parsedindexvalue_nextIndex_T_384) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_386 = mux(_parsedindexvalue_nextIndex_T_365, _parsedindexvalue_nextIndex_T_367, _parsedindexvalue_nextIndex_T_385) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_387 = mux(_parsedindexvalue_nextIndex_T_362, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_386) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_388 = mux(_parsedindexvalue_nextIndex_T_359, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_387) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_389 = mux(_parsedindexvalue_nextIndex_T_356, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_388) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_9 = mux(_parsedindexvalue_nextIndex_T_353, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_389) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_32 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_33 = rem(parsedindexvalue_nextIndex_9, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_34 = eq(_parsedindexvalue_third_stage_T_33, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_35 = add(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_36 = tail(_parsedindexvalue_third_stage_T_35, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_37 = sub(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_38 = tail(_parsedindexvalue_third_stage_T_37, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_39 = mux(_parsedindexvalue_third_stage_T_34, _parsedindexvalue_third_stage_T_36, _parsedindexvalue_third_stage_T_38) @[Benes.scala 48:47]
          node parsedindexvalue_4 = mux(_parsedindexvalue_third_stage_T_32, _parsedindexvalue_third_stage_T_39, parsedindexvalue_nextIndex_9) @[Benes.scala 48:24]
          node _T_19 = or(parsedindexvalue_4, UInt<3>("h0"))
          node _T_20 = bits(_T_19, 2, 0)
          parse_array[_T_20] <= io.i_data_bus2[3] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_40 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_41 = rem(UInt<2>("h3"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_42 = eq(_parsedindexvalue_first_stage_T_41, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_43 = add(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_44 = tail(_parsedindexvalue_first_stage_T_43, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_45 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_46 = tail(_parsedindexvalue_first_stage_T_45, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_47 = mux(_parsedindexvalue_first_stage_T_42, _parsedindexvalue_first_stage_T_44, _parsedindexvalue_first_stage_T_46) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_5 = mux(_parsedindexvalue_first_stage_T_40, _parsedindexvalue_first_stage_T_47, UInt<2>("h3")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_11 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_20 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_21 = bits(_parsedindexvalue_boolArray_T_20, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_22 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_23 = bits(_parsedindexvalue_boolArray_T_22, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_5 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[0] <= _parsedindexvalue_boolArray_T_21 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[1] <= _parsedindexvalue_boolArray_T_23 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_5 : UInt
          parsedindexvalue_second_stage_5 <= parsedindexvalue_first_stage_5
          node parsedindexvalue_calculation_10 = rem(parsedindexvalue_second_stage_5, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_390 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_391 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_392 = and(_parsedindexvalue_nextIndex_T_390, _parsedindexvalue_nextIndex_T_391) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_393 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_394 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_395 = and(_parsedindexvalue_nextIndex_T_393, _parsedindexvalue_nextIndex_T_394) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_396 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_397 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_398 = and(_parsedindexvalue_nextIndex_T_396, _parsedindexvalue_nextIndex_T_397) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_399 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_400 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_401 = and(_parsedindexvalue_nextIndex_T_399, _parsedindexvalue_nextIndex_T_400) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_402 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_403 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_404 = and(_parsedindexvalue_nextIndex_T_402, _parsedindexvalue_nextIndex_T_403) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_405 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_406 = tail(_parsedindexvalue_nextIndex_T_405, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_407 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_408 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_409 = and(_parsedindexvalue_nextIndex_T_407, _parsedindexvalue_nextIndex_T_408) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_410 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_411 = tail(_parsedindexvalue_nextIndex_T_410, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_412 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_413 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_414 = and(_parsedindexvalue_nextIndex_T_412, _parsedindexvalue_nextIndex_T_413) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_415 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_416 = tail(_parsedindexvalue_nextIndex_T_415, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_417 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_418 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_419 = and(_parsedindexvalue_nextIndex_T_417, _parsedindexvalue_nextIndex_T_418) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_420 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_421 = tail(_parsedindexvalue_nextIndex_T_420, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_422 = mux(_parsedindexvalue_nextIndex_T_419, _parsedindexvalue_nextIndex_T_421, parsedindexvalue_second_stage_5) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_423 = mux(_parsedindexvalue_nextIndex_T_414, _parsedindexvalue_nextIndex_T_416, _parsedindexvalue_nextIndex_T_422) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_424 = mux(_parsedindexvalue_nextIndex_T_409, _parsedindexvalue_nextIndex_T_411, _parsedindexvalue_nextIndex_T_423) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_425 = mux(_parsedindexvalue_nextIndex_T_404, _parsedindexvalue_nextIndex_T_406, _parsedindexvalue_nextIndex_T_424) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_426 = mux(_parsedindexvalue_nextIndex_T_401, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_425) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_427 = mux(_parsedindexvalue_nextIndex_T_398, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_426) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_428 = mux(_parsedindexvalue_nextIndex_T_395, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_427) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_10 = mux(_parsedindexvalue_nextIndex_T_392, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_428) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_11 = rem(parsedindexvalue_nextIndex_10, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_429 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_430 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_431 = and(_parsedindexvalue_nextIndex_T_429, _parsedindexvalue_nextIndex_T_430) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_432 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_433 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_434 = and(_parsedindexvalue_nextIndex_T_432, _parsedindexvalue_nextIndex_T_433) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_435 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_436 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_437 = and(_parsedindexvalue_nextIndex_T_435, _parsedindexvalue_nextIndex_T_436) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_438 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_439 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_440 = and(_parsedindexvalue_nextIndex_T_438, _parsedindexvalue_nextIndex_T_439) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_441 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_442 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_443 = and(_parsedindexvalue_nextIndex_T_441, _parsedindexvalue_nextIndex_T_442) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_444 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_445 = tail(_parsedindexvalue_nextIndex_T_444, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_446 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_447 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_448 = and(_parsedindexvalue_nextIndex_T_446, _parsedindexvalue_nextIndex_T_447) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_449 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_450 = tail(_parsedindexvalue_nextIndex_T_449, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_451 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_452 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_453 = and(_parsedindexvalue_nextIndex_T_451, _parsedindexvalue_nextIndex_T_452) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_454 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_455 = tail(_parsedindexvalue_nextIndex_T_454, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_456 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_457 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_458 = and(_parsedindexvalue_nextIndex_T_456, _parsedindexvalue_nextIndex_T_457) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_459 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_460 = tail(_parsedindexvalue_nextIndex_T_459, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_461 = mux(_parsedindexvalue_nextIndex_T_458, _parsedindexvalue_nextIndex_T_460, parsedindexvalue_nextIndex_10) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_462 = mux(_parsedindexvalue_nextIndex_T_453, _parsedindexvalue_nextIndex_T_455, _parsedindexvalue_nextIndex_T_461) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_463 = mux(_parsedindexvalue_nextIndex_T_448, _parsedindexvalue_nextIndex_T_450, _parsedindexvalue_nextIndex_T_462) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_464 = mux(_parsedindexvalue_nextIndex_T_443, _parsedindexvalue_nextIndex_T_445, _parsedindexvalue_nextIndex_T_463) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_465 = mux(_parsedindexvalue_nextIndex_T_440, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_464) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_466 = mux(_parsedindexvalue_nextIndex_T_437, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_465) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_467 = mux(_parsedindexvalue_nextIndex_T_434, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_466) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_11 = mux(_parsedindexvalue_nextIndex_T_431, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_467) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_40 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_41 = rem(parsedindexvalue_nextIndex_11, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_42 = eq(_parsedindexvalue_third_stage_T_41, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_43 = add(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_44 = tail(_parsedindexvalue_third_stage_T_43, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_45 = sub(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_46 = tail(_parsedindexvalue_third_stage_T_45, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_47 = mux(_parsedindexvalue_third_stage_T_42, _parsedindexvalue_third_stage_T_44, _parsedindexvalue_third_stage_T_46) @[Benes.scala 48:47]
          node parsedindexvalue_5 = mux(_parsedindexvalue_third_stage_T_40, _parsedindexvalue_third_stage_T_47, parsedindexvalue_nextIndex_11) @[Benes.scala 48:24]
          node _T_21 = or(parsedindexvalue_5, UInt<3>("h0"))
          node _T_22 = bits(_T_21, 2, 0)
          parse_array[_T_22] <= io.i_data_bus2[3] @[Benes.scala 67:47]
      else :
        node _T_23 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 72:35]
        when _T_23 : @[Benes.scala 72:60]
          parse_array[3] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[3] <= io.i_data_bus2[3] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_24 = neq(io.i_data_bus2[0], UInt<1>("h0")) @[Benes.scala 91:27]
    when _T_24 : @[Benes.scala 91:35]
      node _parsedindexvalue_first_stage_T_48 = bits(io.i_mux_bus[0], 0, 0) @[Benes.scala 24:32]
      node _parsedindexvalue_first_stage_T_49 = rem(UInt<1>("h0"), UInt<2>("h2")) @[Benes.scala 24:52]
      node _parsedindexvalue_first_stage_T_50 = eq(_parsedindexvalue_first_stage_T_49, UInt<1>("h0")) @[Benes.scala 24:58]
      node _parsedindexvalue_first_stage_T_51 = add(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_52 = tail(_parsedindexvalue_first_stage_T_51, 1) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_53 = sub(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_54 = tail(_parsedindexvalue_first_stage_T_53, 1) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_55 = mux(_parsedindexvalue_first_stage_T_50, _parsedindexvalue_first_stage_T_52, _parsedindexvalue_first_stage_T_54) @[Benes.scala 24:40]
      node parsedindexvalue_first_stage_6 = mux(_parsedindexvalue_first_stage_T_48, _parsedindexvalue_first_stage_T_55, UInt<1>("h0")) @[Benes.scala 24:26]
      node _parsedindexvalue_T_12 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 27:31]
      node _parsedindexvalue_boolArray_T_24 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_25 = bits(_parsedindexvalue_boolArray_T_24, 0, 0) @[Benes.scala 28:92]
      node _parsedindexvalue_boolArray_T_26 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_27 = bits(_parsedindexvalue_boolArray_T_26, 1, 1) @[Benes.scala 28:92]
      wire parsedindexvalue_boolArray_6 : UInt<1>[2] @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[0] <= _parsedindexvalue_boolArray_T_25 @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[1] <= _parsedindexvalue_boolArray_T_27 @[Benes.scala 28:28]
      wire parsedindexvalue_second_stage_6 : UInt
      parsedindexvalue_second_stage_6 <= parsedindexvalue_first_stage_6
      node parsedindexvalue_calculation_12 = rem(parsedindexvalue_second_stage_6, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_468 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_469 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_470 = and(_parsedindexvalue_nextIndex_T_468, _parsedindexvalue_nextIndex_T_469) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_471 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_472 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_473 = and(_parsedindexvalue_nextIndex_T_471, _parsedindexvalue_nextIndex_T_472) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_474 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_475 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_476 = and(_parsedindexvalue_nextIndex_T_474, _parsedindexvalue_nextIndex_T_475) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_477 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_478 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_479 = and(_parsedindexvalue_nextIndex_T_477, _parsedindexvalue_nextIndex_T_478) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_480 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_481 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_482 = and(_parsedindexvalue_nextIndex_T_480, _parsedindexvalue_nextIndex_T_481) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_483 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_484 = tail(_parsedindexvalue_nextIndex_T_483, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_485 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_486 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_487 = and(_parsedindexvalue_nextIndex_T_485, _parsedindexvalue_nextIndex_T_486) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_488 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_489 = tail(_parsedindexvalue_nextIndex_T_488, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_490 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_491 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_492 = and(_parsedindexvalue_nextIndex_T_490, _parsedindexvalue_nextIndex_T_491) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_493 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_494 = tail(_parsedindexvalue_nextIndex_T_493, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_495 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_496 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_497 = and(_parsedindexvalue_nextIndex_T_495, _parsedindexvalue_nextIndex_T_496) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_498 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_499 = tail(_parsedindexvalue_nextIndex_T_498, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_500 = mux(_parsedindexvalue_nextIndex_T_497, _parsedindexvalue_nextIndex_T_499, parsedindexvalue_second_stage_6) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_501 = mux(_parsedindexvalue_nextIndex_T_492, _parsedindexvalue_nextIndex_T_494, _parsedindexvalue_nextIndex_T_500) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_502 = mux(_parsedindexvalue_nextIndex_T_487, _parsedindexvalue_nextIndex_T_489, _parsedindexvalue_nextIndex_T_501) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_503 = mux(_parsedindexvalue_nextIndex_T_482, _parsedindexvalue_nextIndex_T_484, _parsedindexvalue_nextIndex_T_502) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_504 = mux(_parsedindexvalue_nextIndex_T_479, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_503) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_505 = mux(_parsedindexvalue_nextIndex_T_476, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_504) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_506 = mux(_parsedindexvalue_nextIndex_T_473, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_505) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_12 = mux(_parsedindexvalue_nextIndex_T_470, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_506) @[Mux.scala 101:16]
      node parsedindexvalue_calculation_13 = rem(parsedindexvalue_nextIndex_12, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_507 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_508 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_509 = and(_parsedindexvalue_nextIndex_T_507, _parsedindexvalue_nextIndex_T_508) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_510 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_511 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_512 = and(_parsedindexvalue_nextIndex_T_510, _parsedindexvalue_nextIndex_T_511) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_513 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_514 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_515 = and(_parsedindexvalue_nextIndex_T_513, _parsedindexvalue_nextIndex_T_514) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_516 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_517 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_518 = and(_parsedindexvalue_nextIndex_T_516, _parsedindexvalue_nextIndex_T_517) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_519 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_520 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_521 = and(_parsedindexvalue_nextIndex_T_519, _parsedindexvalue_nextIndex_T_520) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_522 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_523 = tail(_parsedindexvalue_nextIndex_T_522, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_524 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_525 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_526 = and(_parsedindexvalue_nextIndex_T_524, _parsedindexvalue_nextIndex_T_525) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_527 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_528 = tail(_parsedindexvalue_nextIndex_T_527, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_529 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_530 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_531 = and(_parsedindexvalue_nextIndex_T_529, _parsedindexvalue_nextIndex_T_530) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_532 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_533 = tail(_parsedindexvalue_nextIndex_T_532, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_534 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_535 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_536 = and(_parsedindexvalue_nextIndex_T_534, _parsedindexvalue_nextIndex_T_535) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_537 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_538 = tail(_parsedindexvalue_nextIndex_T_537, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_539 = mux(_parsedindexvalue_nextIndex_T_536, _parsedindexvalue_nextIndex_T_538, parsedindexvalue_nextIndex_12) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_540 = mux(_parsedindexvalue_nextIndex_T_531, _parsedindexvalue_nextIndex_T_533, _parsedindexvalue_nextIndex_T_539) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_541 = mux(_parsedindexvalue_nextIndex_T_526, _parsedindexvalue_nextIndex_T_528, _parsedindexvalue_nextIndex_T_540) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_542 = mux(_parsedindexvalue_nextIndex_T_521, _parsedindexvalue_nextIndex_T_523, _parsedindexvalue_nextIndex_T_541) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_543 = mux(_parsedindexvalue_nextIndex_T_518, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_542) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_544 = mux(_parsedindexvalue_nextIndex_T_515, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_543) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_545 = mux(_parsedindexvalue_nextIndex_T_512, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_544) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_13 = mux(_parsedindexvalue_nextIndex_T_509, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_545) @[Mux.scala 101:16]
      node _parsedindexvalue_third_stage_T_48 = bits(io.i_mux_bus[0], 3, 3) @[Benes.scala 48:30]
      node _parsedindexvalue_third_stage_T_49 = rem(parsedindexvalue_nextIndex_13, UInt<2>("h2")) @[Benes.scala 48:61]
      node _parsedindexvalue_third_stage_T_50 = eq(_parsedindexvalue_third_stage_T_49, UInt<1>("h0")) @[Benes.scala 48:67]
      node _parsedindexvalue_third_stage_T_51 = add(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_52 = tail(_parsedindexvalue_third_stage_T_51, 1) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_53 = sub(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_54 = tail(_parsedindexvalue_third_stage_T_53, 1) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_55 = mux(_parsedindexvalue_third_stage_T_50, _parsedindexvalue_third_stage_T_52, _parsedindexvalue_third_stage_T_54) @[Benes.scala 48:47]
      node parsedindexvalue_6 = mux(_parsedindexvalue_third_stage_T_48, _parsedindexvalue_third_stage_T_55, parsedindexvalue_nextIndex_13) @[Benes.scala 48:24]
      node _T_25 = or(parsedindexvalue_6, UInt<3>("h0"))
      node _T_26 = bits(_T_25, 2, 0)
      parse_array[_T_26] <= io.i_data_bus2[0] @[Benes.scala 94:35]
    else :
      parse_array[4] <= UInt<1>("h0") @[Benes.scala 98:33]
    io.o_dist_bus2[0] <= parse_array[0] @[Benes.scala 103:27]
    io.o_dist_bus2[1] <= parse_array[1] @[Benes.scala 103:27]
    io.o_dist_bus2[2] <= parse_array[2] @[Benes.scala 103:27]
    io.o_dist_bus2[3] <= parse_array[3] @[Benes.scala 103:27]

  module buffer_multiplication_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip buffer1 : UInt<16>[4], flip buffer2 : UInt<16>[4], out : UInt<16>[4]}

    node elementMul = mul(io.buffer1[0], io.buffer2[0]) @[buffer_multiplication.scala 17:42]
    node result_elementMul = mul(io.buffer1[1], io.buffer2[1]) @[buffer_multiplication.scala 17:42]
    node result_result_elementMul = mul(io.buffer1[2], io.buffer2[2]) @[buffer_multiplication.scala 17:42]
    node result_result_result_elementMul = mul(io.buffer1[3], io.buffer2[3]) @[buffer_multiplication.scala 17:42]
    wire result : UInt<16>[4] @[buffer_multiplication.scala 15:20]
    result[0] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[1] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[2] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= result_result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[2] <= result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[1] <= result_elementMul @[buffer_multiplication.scala 19:27]
    result[0] <= elementMul @[buffer_multiplication.scala 19:27]
    io.out <= result @[buffer_multiplication.scala 24:10]

  module ReductionMux_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_6 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_6 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_7 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_7 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_8 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_8 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module Fan4_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<32>[4], flip i_add_en_bus : UInt<1>[3], flip i_cmd_bus : UInt<3>[3], o_valid : UInt<1>[4], o_data_bus : UInt<32>[4], o_adder : UInt<32>[3]}

    wire _w_fan_lvl_0_WIRE : UInt<64>[2] @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[0] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[1] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    wire w_fan_lvl_0 : UInt<64>[2]
    w_fan_lvl_0 <= _w_fan_lvl_0_WIRE
    wire _w_fan_lvl_1_WIRE : UInt<32>[1] @[FanNetwork.scala 21:39]
    _w_fan_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 21:39]
    wire w_fan_lvl_1 : UInt<32>[1]
    w_fan_lvl_1 <= _w_fan_lvl_1_WIRE
    wire _w_vn_lvl_0_WIRE : UInt<32>[4] @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    wire w_vn_lvl_0 : UInt<32>[4]
    w_vn_lvl_0 <= _w_vn_lvl_0_WIRE
    wire _w_vn_lvl_0_valid_WIRE : UInt<1>[4] @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    wire w_vn_lvl_0_valid : UInt<1>[4]
    w_vn_lvl_0_valid <= _w_vn_lvl_0_valid_WIRE
    wire _w_vn_lvl_1_WIRE : UInt<32>[2] @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    wire w_vn_lvl_1 : UInt<32>[2]
    w_vn_lvl_1 <= _w_vn_lvl_1_WIRE
    wire _w_vn_lvl_1_valid_WIRE : UInt<1>[2] @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    wire w_vn_lvl_1_valid : UInt<1>[2]
    w_vn_lvl_1_valid <= _w_vn_lvl_1_valid_WIRE
    wire _r_lvl_output_ff_WIRE : UInt<32>[8] @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[4] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[5] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[6] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[7] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    reg r_lvl_output_ff : UInt<32>[8], clock with :
      reset => (reset, _r_lvl_output_ff_WIRE) @[FanNetwork.scala 28:34]
    wire _r_lvl_output_ff_valid_WIRE : UInt<1>[8] @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[4] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[5] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[6] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[7] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    reg r_lvl_output_ff_valid : UInt<1>[8], clock with :
      reset => (reset, _r_lvl_output_ff_valid_WIRE) @[FanNetwork.scala 29:40]
    wire _r_valid_WIRE : UInt<1>[3] @[FanNetwork.scala 30:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    reg r_valid : UInt<1>[3], clock with :
      reset => (reset, _r_valid_WIRE) @[FanNetwork.scala 30:26]
    reg r_final_sum : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FanNetwork.scala 32:30]
    reg r_final_add : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 33:30]
    reg r_final_add2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 34:31]
    node _T = bits(w_vn_lvl_0_valid[1], 0, 0) @[FanNetwork.scala 38:30]
    node _T_1 = eq(_T, UInt<1>("h1")) @[FanNetwork.scala 38:34]
    node _T_2 = bits(w_vn_lvl_0_valid[0], 0, 0) @[FanNetwork.scala 38:64]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[FanNetwork.scala 38:68]
    node _T_4 = and(_T_1, _T_3) @[FanNetwork.scala 38:42]
    when _T_4 : @[FanNetwork.scala 38:77]
      r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 39:28]
      r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 40:28]
      r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 41:34]
      r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 42:34]
    else :
      node _T_5 = eq(w_vn_lvl_0_valid[1], UInt<1>("h1")) @[FanNetwork.scala 43:37]
      node _T_6 = eq(w_vn_lvl_0_valid[0], UInt<1>("h0")) @[FanNetwork.scala 43:68]
      node _T_7 = and(_T_5, _T_6) @[FanNetwork.scala 43:45]
      when _T_7 : @[FanNetwork.scala 43:77]
        r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 44:28]
        r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 45:28]
        r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 46:34]
        r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 47:34]
      else :
        node _T_8 = eq(w_vn_lvl_0_valid[1], UInt<1>("h0")) @[FanNetwork.scala 48:37]
        node _T_9 = eq(w_vn_lvl_0_valid[0], UInt<1>("h1")) @[FanNetwork.scala 48:68]
        node _T_10 = and(_T_8, _T_9) @[FanNetwork.scala 48:45]
        when _T_10 : @[FanNetwork.scala 48:77]
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 49:28]
          r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 50:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 51:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 52:34]
        else :
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 54:28]
          r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 55:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 56:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 57:34]
    node _T_11 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 59:30]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[FanNetwork.scala 59:34]
    node _T_13 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 59:64]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[FanNetwork.scala 59:68]
    node _T_15 = and(_T_12, _T_14) @[FanNetwork.scala 59:42]
    when _T_15 : @[FanNetwork.scala 59:77]
      r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 60:28]
      r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 61:28]
      r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 62:34]
      r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 63:34]
    else :
      node _T_16 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 64:36]
      node _T_17 = eq(_T_16, UInt<1>("h1")) @[FanNetwork.scala 64:40]
      node _T_18 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 64:70]
      node _T_19 = eq(_T_18, UInt<1>("h0")) @[FanNetwork.scala 64:74]
      node _T_20 = and(_T_17, _T_19) @[FanNetwork.scala 64:48]
      when _T_20 : @[FanNetwork.scala 64:83]
        r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 65:28]
        r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 66:28]
        r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 67:34]
        r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 68:34]
      else :
        node _T_21 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 69:36]
        node _T_22 = eq(_T_21, UInt<1>("h0")) @[FanNetwork.scala 69:40]
        node _T_23 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 69:70]
        node _T_24 = eq(_T_23, UInt<1>("h1")) @[FanNetwork.scala 69:74]
        node _T_25 = and(_T_22, _T_24) @[FanNetwork.scala 69:48]
        when _T_25 : @[FanNetwork.scala 69:83]
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 70:28]
          r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 71:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 72:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 73:34]
        else :
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 75:28]
          r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 76:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 77:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 78:34]
    r_lvl_output_ff[4] <= r_lvl_output_ff[0] @[FanNetwork.scala 81:24]
    r_lvl_output_ff_valid[4] <= r_lvl_output_ff_valid[0] @[FanNetwork.scala 82:30]
    node _T_26 = bits(w_vn_lvl_1_valid[0], 0, 0) @[FanNetwork.scala 84:29]
    when _T_26 : @[FanNetwork.scala 84:34]
      r_lvl_output_ff[5] <= w_vn_lvl_1[0] @[FanNetwork.scala 85:28]
      r_lvl_output_ff_valid[5] <= UInt<1>("h1") @[FanNetwork.scala 86:34]
    else :
      r_lvl_output_ff[5] <= r_lvl_output_ff[1] @[FanNetwork.scala 88:28]
      r_lvl_output_ff_valid[5] <= r_lvl_output_ff_valid[1] @[FanNetwork.scala 89:34]
    node _T_27 = bits(w_vn_lvl_1_valid[1], 0, 0) @[FanNetwork.scala 91:29]
    when _T_27 : @[FanNetwork.scala 91:34]
      r_lvl_output_ff[6] <= w_vn_lvl_1[1] @[FanNetwork.scala 92:28]
      r_lvl_output_ff_valid[6] <= UInt<1>("h1") @[FanNetwork.scala 93:34]
    else :
      r_lvl_output_ff[6] <= r_lvl_output_ff[2] @[FanNetwork.scala 95:28]
      r_lvl_output_ff_valid[6] <= r_lvl_output_ff_valid[2] @[FanNetwork.scala 96:34]
    r_lvl_output_ff[7] <= r_lvl_output_ff[3] @[FanNetwork.scala 99:24]
    r_lvl_output_ff_valid[7] <= r_lvl_output_ff_valid[3] @[FanNetwork.scala 100:30]
    node _T_28 = eq(io.i_valid, UInt<1>("h1")) @[FanNetwork.scala 104:22]
    when _T_28 : @[FanNetwork.scala 104:31]
      r_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 105:16]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 107:20]
    r_valid[1] <= r_valid[0] @[FanNetwork.scala 114:24]
    r_valid[2] <= r_valid[1] @[FanNetwork.scala 114:24]
    inst my_adder_0 of EdgeAdderSwitch_6 @[FanNetwork.scala 119:28]
    my_adder_0.clock <= clock
    my_adder_0.reset <= reset
    my_adder_0.io.i_valid <= r_valid[0] @[FanNetwork.scala 121:27]
    wire _WIRE : UInt<32>[2] @[FanNetwork.scala 122:40]
    _WIRE[0] <= io.i_data_bus[1] @[FanNetwork.scala 122:40]
    _WIRE[1] <= io.i_data_bus[0] @[FanNetwork.scala 122:40]
    my_adder_0.io.i_data_bus[0] <= _WIRE[0] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_data_bus[1] <= _WIRE[1] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_add_en <= io.i_add_en_bus[0] @[FanNetwork.scala 123:28]
    my_adder_0.io.i_cmd <= io.i_cmd_bus[0] @[FanNetwork.scala 124:25]
    my_adder_0.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 125:25]
    node _w_vn_lvl_0_0_T = bits(my_adder_0.io.o_vn, 31, 0) @[FanNetwork.scala 126:40]
    w_vn_lvl_0[0] <= _w_vn_lvl_0_0_T @[FanNetwork.scala 126:19]
    node _w_vn_lvl_0_1_T = bits(my_adder_0.io.o_vn, 63, 32) @[FanNetwork.scala 127:40]
    w_vn_lvl_0[1] <= _w_vn_lvl_0_1_T @[FanNetwork.scala 127:19]
    node _w_vn_lvl_0_valid_0_T = bits(my_adder_0.io.o_vn_valid, 0, 0) @[FanNetwork.scala 128:52]
    w_vn_lvl_0_valid[0] <= _w_vn_lvl_0_valid_0_T @[FanNetwork.scala 128:25]
    node _w_vn_lvl_0_valid_1_T = bits(my_adder_0.io.o_vn_valid, 1, 1) @[FanNetwork.scala 129:52]
    w_vn_lvl_0_valid[1] <= _w_vn_lvl_0_valid_1_T @[FanNetwork.scala 129:25]
    w_fan_lvl_0[0] <= my_adder_0.io.o_adder @[FanNetwork.scala 130:20]
    inst my_adder_1 of EdgeAdderSwitch_7 @[FanNetwork.scala 132:28]
    my_adder_1.clock <= clock
    my_adder_1.reset <= reset
    my_adder_1.io.i_valid <= r_valid[1] @[FanNetwork.scala 134:27]
    wire _WIRE_1 : UInt<64>[2] @[FanNetwork.scala 135:40]
    _WIRE_1[0] <= w_fan_lvl_0[1] @[FanNetwork.scala 135:40]
    _WIRE_1[1] <= w_fan_lvl_0[0] @[FanNetwork.scala 135:40]
    my_adder_1.io.i_data_bus[0] <= _WIRE_1[0] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_data_bus[1] <= _WIRE_1[1] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_add_en <= io.i_add_en_bus[2] @[FanNetwork.scala 136:28]
    my_adder_1.io.i_cmd <= io.i_cmd_bus[2] @[FanNetwork.scala 137:26]
    my_adder_1.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 138:25]
    node _w_vn_lvl_1_0_T = bits(my_adder_1.io.o_vn, 31, 0) @[FanNetwork.scala 139:40]
    w_vn_lvl_1[0] <= _w_vn_lvl_1_0_T @[FanNetwork.scala 139:19]
    node _w_vn_lvl_1_1_T = bits(my_adder_1.io.o_vn, 63, 32) @[FanNetwork.scala 140:40]
    w_vn_lvl_1[1] <= _w_vn_lvl_1_1_T @[FanNetwork.scala 140:19]
    node _w_vn_lvl_1_valid_0_T = bits(my_adder_1.io.o_vn_valid, 0, 0) @[FanNetwork.scala 141:52]
    w_vn_lvl_1_valid[0] <= _w_vn_lvl_1_valid_0_T @[FanNetwork.scala 141:25]
    node _w_vn_lvl_1_valid_1_T = bits(my_adder_1.io.o_vn_valid, 1, 1) @[FanNetwork.scala 142:52]
    w_vn_lvl_1_valid[1] <= _w_vn_lvl_1_valid_1_T @[FanNetwork.scala 142:25]
    w_fan_lvl_1[0] <= my_adder_1.io.o_adder @[FanNetwork.scala 143:20]
    inst my_adder_2 of EdgeAdderSwitch_8 @[FanNetwork.scala 145:28]
    my_adder_2.clock <= clock
    my_adder_2.reset <= reset
    my_adder_2.io.i_valid <= r_valid[0] @[FanNetwork.scala 147:27]
    wire _WIRE_2 : UInt<32>[2] @[FanNetwork.scala 148:40]
    _WIRE_2[0] <= io.i_data_bus[3] @[FanNetwork.scala 148:40]
    _WIRE_2[1] <= io.i_data_bus[2] @[FanNetwork.scala 148:40]
    my_adder_2.io.i_data_bus[0] <= _WIRE_2[0] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_data_bus[1] <= _WIRE_2[1] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_add_en <= io.i_add_en_bus[1] @[FanNetwork.scala 149:28]
    my_adder_2.io.i_cmd <= io.i_cmd_bus[1] @[FanNetwork.scala 150:25]
    my_adder_2.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 151:25]
    node _w_vn_lvl_0_2_T = bits(my_adder_2.io.o_vn, 31, 0) @[FanNetwork.scala 153:40]
    w_vn_lvl_0[2] <= _w_vn_lvl_0_2_T @[FanNetwork.scala 153:19]
    node _w_vn_lvl_0_3_T = bits(my_adder_2.io.o_vn, 63, 32) @[FanNetwork.scala 154:40]
    w_vn_lvl_0[3] <= _w_vn_lvl_0_3_T @[FanNetwork.scala 154:19]
    node _w_vn_lvl_0_valid_2_T = bits(my_adder_2.io.o_vn_valid, 0, 0) @[FanNetwork.scala 156:52]
    w_vn_lvl_0_valid[2] <= _w_vn_lvl_0_valid_2_T @[FanNetwork.scala 156:25]
    node _w_vn_lvl_0_valid_3_T = bits(my_adder_2.io.o_vn_valid, 1, 1) @[FanNetwork.scala 157:52]
    w_vn_lvl_0_valid[3] <= _w_vn_lvl_0_valid_3_T @[FanNetwork.scala 157:25]
    w_fan_lvl_0[1] <= my_adder_2.io.o_adder @[FanNetwork.scala 159:20]
    r_final_add <= UInt<1>("h0") @[FanNetwork.scala 163:17]
    r_final_add2 <= UInt<1>("h0") @[FanNetwork.scala 164:18]
    r_final_sum <= UInt<1>("h0") @[FanNetwork.scala 165:17]
    r_final_add <= io.i_add_en_bus[2] @[FanNetwork.scala 167:17]
    r_final_add2 <= r_final_add @[FanNetwork.scala 168:18]
    r_final_sum <= w_fan_lvl_1[0] @[FanNetwork.scala 169:17]
    io.o_data_bus[0] <= UInt<1>("h0") @[FanNetwork.scala 172:22]
    io.o_data_bus[1] <= UInt<1>("h0") @[FanNetwork.scala 173:22]
    io.o_data_bus[2] <= UInt<1>("h0") @[FanNetwork.scala 174:22]
    io.o_data_bus[3] <= UInt<1>("h0") @[FanNetwork.scala 175:22]
    io.o_data_bus[0] <= r_lvl_output_ff[4] @[FanNetwork.scala 177:22]
    node _T_29 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 178:24]
    when _T_29 : @[FanNetwork.scala 178:33]
      io.o_data_bus[1] <= r_final_sum @[FanNetwork.scala 179:26]
    else :
      io.o_data_bus[1] <= r_lvl_output_ff[5] @[FanNetwork.scala 181:26]
    io.o_data_bus[2] <= r_lvl_output_ff[6] @[FanNetwork.scala 183:22]
    io.o_data_bus[3] <= r_lvl_output_ff[7] @[FanNetwork.scala 184:22]
    io.o_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 187:19]
    io.o_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 188:19]
    io.o_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 189:19]
    io.o_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 190:19]
    io.o_valid[0] <= r_lvl_output_ff_valid[4] @[FanNetwork.scala 192:19]
    node _T_30 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 193:24]
    when _T_30 : @[FanNetwork.scala 193:33]
      io.o_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 194:23]
    else :
      io.o_valid[1] <= r_lvl_output_ff_valid[5] @[FanNetwork.scala 196:23]
    io.o_valid[2] <= r_lvl_output_ff_valid[6] @[FanNetwork.scala 198:19]
    io.o_valid[3] <= r_lvl_output_ff_valid[7] @[FanNetwork.scala 199:19]
    io.o_adder[0] <= UInt<1>("h0") @[FanNetwork.scala 203:19]
    io.o_adder[1] <= UInt<1>("h0") @[FanNetwork.scala 204:19]
    io.o_adder[2] <= UInt<1>("h0") @[FanNetwork.scala 205:19]
    io.o_adder[0] <= w_fan_lvl_0[0] @[FanNetwork.scala 207:19]
    io.o_adder[1] <= w_fan_lvl_1[0] @[FanNetwork.scala 208:19]
    io.o_adder[2] <= w_fan_lvl_0[1] @[FanNetwork.scala 209:19]

  module flexdpecom4_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[4][4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4]}

    wire _r_mult_WIRE : UInt<15>[4] @[FlexDPE.scala 32:34]
    _r_mult_WIRE[0] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[1] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[2] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[3] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    reg r_mult : UInt<15>[4], clock with :
      reset => (reset, _r_mult_WIRE) @[FlexDPE.scala 32:26]
    reg matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), matrix) @[FlexDPE.scala 33:21]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPE.scala 36:26]
    reg r_stationary_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff) @[FlexDPE.scala 40:30]
    reg r_stationary_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff2) @[FlexDPE.scala 41:31]
    reg r_data_valid_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff) @[FlexDPE.scala 43:30]
    reg r_data_valid_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff2) @[FlexDPE.scala 44:31]
    r_stationary_ff <= io.i_stationary @[FlexDPE.scala 46:21]
    r_stationary_ff2 <= r_stationary_ff @[FlexDPE.scala 47:22]
    r_data_valid_ff <= io.i_data_valid @[FlexDPE.scala 49:21]
    r_data_valid_ff2 <= r_data_valid_ff @[FlexDPE.scala 50:22]
    inst my_ivn of ivncontrol4_2 @[FlexDPE.scala 53:23]
    my_ivn.clock <= clock
    my_ivn.reset <= reset
    my_ivn.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPE.scala 54:33]
    inst my_controller of fancontrol4_2 @[FlexDPE.scala 57:31]
    my_controller.clock <= clock
    my_controller.reset <= reset
    my_controller.io.i_vn[0] <= my_ivn.io.o_vn[0] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[1] <= my_ivn.io.o_vn[1] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[2] <= my_ivn.io.o_vn[2] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[3] <= my_ivn.io.o_vn[3] @[FlexDPE.scala 59:27]
    my_controller.io.i_stationary <= UInt<1>("h0") @[FlexDPE.scala 60:35]
    my_controller.io.i_data_valid <= io.i_data_valid @[FlexDPE.scala 61:35]
    inst my_Benes of Benes_2 @[FlexDPE.scala 66:26]
    my_Benes.clock <= clock
    my_Benes.reset <= reset
    my_Benes.io.i_data_bus1[0] <= io.i_data_bus[0] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[1] <= io.i_data_bus[1] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[2] <= io.i_data_bus[2] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[3] <= io.i_data_bus[3] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus2[0] <= io.i_data_bus2[0] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[1] <= io.i_data_bus2[1] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[2] <= io.i_data_bus2[2] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[3] <= io.i_data_bus2[3] @[FlexDPE.scala 69:29]
    my_Benes.io.i_mux_bus[0] <= io.i_mux_bus[0] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[1] <= io.i_mux_bus[1] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[2] <= io.i_mux_bus[2] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[3] <= io.i_mux_bus[3] @[FlexDPE.scala 70:27]
    inst buffer_mult of buffer_multiplication_2 @[FlexDPE.scala 77:30]
    buffer_mult.clock <= clock
    buffer_mult.reset <= reset
    buffer_mult.io.buffer1[0] <= my_Benes.io.o_dist_bus1[0] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[1] <= my_Benes.io.o_dist_bus1[1] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[2] <= my_Benes.io.o_dist_bus1[2] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[3] <= my_Benes.io.o_dist_bus1[3] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer2[0] <= my_Benes.io.o_dist_bus2[0] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[1] <= my_Benes.io.o_dist_bus2[1] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[2] <= my_Benes.io.o_dist_bus2[2] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[3] <= my_Benes.io.o_dist_bus2[3] @[FlexDPE.scala 81:30]
    r_mult <= buffer_mult.io.out @[FlexDPE.scala 83:14]
    inst my_fan_network of Fan4_2 @[FlexDPE.scala 89:32]
    my_fan_network.clock <= clock
    my_fan_network.reset <= reset
    my_fan_network.io.i_valid <= my_controller.io.o_reduction_valid @[FlexDPE.scala 91:31]
    my_fan_network.io.i_data_bus[0] <= r_mult[0] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[1] <= r_mult[1] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[2] <= r_mult[2] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[3] <= r_mult[3] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_add_en_bus[0] <= my_controller.io.o_reduction_add[0] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[1] <= my_controller.io.o_reduction_add[1] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[2] <= my_controller.io.o_reduction_add[2] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_cmd_bus[0] <= my_controller.io.o_reduction_cmd[0] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[1] <= my_controller.io.o_reduction_cmd[1] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[2] <= my_controller.io.o_reduction_cmd[2] @[FlexDPE.scala 94:33]
    io.o_valid <= my_fan_network.io.o_valid @[FlexDPE.scala 96:16]
    io.o_data_bus <= my_fan_network.io.o_data_bus @[FlexDPE.scala 97:19]
    io.o_adder <= my_fan_network.io.o_adder @[FlexDPE.scala 98:16]

  module ivncontrol4_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip Stationary_matrix : UInt<16>[4][4], o_vn : UInt<5>[4]}

    wire _i_vn_WIRE : UInt<5>[4] @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[0] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[1] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[2] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    _i_vn_WIRE[3] <= UInt<5>("h0") @[ivncontrol(4).scala 15:31]
    reg i_vn : UInt<5>[4], clock with :
      reset => (reset, _i_vn_WIRE) @[ivncontrol(4).scala 15:23]
    wire _rowcount_WIRE : UInt<32>[4] @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[0] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[1] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[2] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    _rowcount_WIRE[3] <= UInt<32>("h0") @[ivncontrol(4).scala 19:35]
    reg rowcount : UInt<32>[4], clock with :
      reset => (reset, _rowcount_WIRE) @[ivncontrol(4).scala 19:27]
    wire valid : UInt<1>
    valid <= UInt<1>("h0")
    wire valid1 : UInt<1>
    valid1 <= UInt<1>("h0")
    reg i : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 31:20]
    reg j : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ivncontrol(4).scala 32:20]
    reg mat : UInt<32>[4][4], clock with :
      reset => (UInt<1>("h0"), mat) @[ivncontrol(4).scala 35:18]
    reg count : UInt<32>[4], clock with :
      reset => (UInt<1>("h0"), count) @[ivncontrol(4).scala 39:20]
    node _T = bits(i, 1, 0)
    node _T_1 = bits(j, 1, 0)
    node _mat_T = bits(i, 1, 0)
    node _mat_T_1 = bits(j, 1, 0)
    mat[_T][_T_1] <= io.Stationary_matrix[_mat_T][_mat_T_1] @[ivncontrol(4).scala 44:15]
    node _T_2 = eq(valid1, UInt<1>("h0")) @[ivncontrol(4).scala 45:16]
    when _T_2 : @[ivncontrol(4).scala 45:28]
      node _T_3 = bits(i, 1, 0)
      node _T_4 = bits(j, 1, 0)
      node _T_5 = neq(io.Stationary_matrix[_T_3][_T_4], UInt<1>("h0")) @[ivncontrol(4).scala 46:43]
      when _T_5 : @[ivncontrol(4).scala 46:51]
        node _T_6 = bits(i, 1, 0)
        node _count_T = bits(i, 1, 0)
        node _count_T_1 = add(count[_count_T], UInt<1>("h1")) @[ivncontrol(4).scala 47:33]
        node _count_T_2 = tail(_count_T_1, 1) @[ivncontrol(4).scala 47:33]
        count[_T_6] <= _count_T_2 @[ivncontrol(4).scala 47:22]
    node _T_7 = geq(count[1], UInt<3>("h4")) @[ivncontrol(4).scala 53:20]
    when _T_7 : @[ivncontrol(4).scala 53:28]
      valid1 <= UInt<1>("h1") @[ivncontrol(4).scala 54:16]
    node _T_8 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 59:14]
    node _T_9 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 59:47]
    node _T_10 = and(_T_8, _T_9) @[ivncontrol(4).scala 59:41]
    when _T_10 : @[ivncontrol(4).scala 59:75]
      rowcount[0] <= count[0] @[ivncontrol(4).scala 66:21]
      node _T_11 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_11 : @[ivncontrol(4).scala 67:49]
        node _T_12 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_13 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_14 = and(_T_12, _T_13) @[ivncontrol(4).scala 71:54]
        node _T_15 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_16 = and(_T_14, _T_15) @[ivncontrol(4).scala 71:92]
        node _T_17 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_18 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_19 = and(_T_17, _T_18) @[ivncontrol(4).scala 71:170]
        node _T_20 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_21 = and(_T_19, _T_20) @[ivncontrol(4).scala 71:208]
        node _T_22 = or(_T_16, _T_21) @[ivncontrol(4).scala 71:131]
        node _T_23 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_24 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_25 = and(_T_23, _T_24) @[ivncontrol(4).scala 71:284]
        node _T_26 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_27 = and(_T_25, _T_26) @[ivncontrol(4).scala 71:322]
        node _T_28 = or(_T_22, _T_27) @[ivncontrol(4).scala 71:246]
        when _T_28 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_1 = tail(_rowcount_1_T, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_1 @[ivncontrol(4).scala 72:29]
        else :
          node _T_29 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_30 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_31 = and(_T_29, _T_30) @[ivncontrol(4).scala 73:60]
          node _T_32 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_33 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_34 = and(_T_32, _T_33) @[ivncontrol(4).scala 73:138]
          node _T_35 = or(_T_31, _T_34) @[ivncontrol(4).scala 73:99]
          node _T_36 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_37 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_38 = and(_T_36, _T_37) @[ivncontrol(4).scala 73:217]
          node _T_39 = or(_T_35, _T_38) @[ivncontrol(4).scala 73:178]
          when _T_39 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_2 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_3 = tail(_rowcount_1_T_2, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_3 @[ivncontrol(4).scala 74:29]
          else :
            node _T_40 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_41 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_42 = and(_T_40, _T_41) @[ivncontrol(4).scala 75:60]
            node _T_43 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_44 = and(_T_42, _T_43) @[ivncontrol(4).scala 75:98]
            node _T_45 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_46 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_47 = and(_T_45, _T_46) @[ivncontrol(4).scala 75:175]
            node _T_48 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_49 = and(_T_47, _T_48) @[ivncontrol(4).scala 75:213]
            node _T_50 = or(_T_44, _T_49) @[ivncontrol(4).scala 75:136]
            node _T_51 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_52 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_53 = and(_T_51, _T_52) @[ivncontrol(4).scala 75:293]
            node _T_54 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_55 = and(_T_53, _T_54) @[ivncontrol(4).scala 75:331]
            node _T_56 = or(_T_50, _T_55) @[ivncontrol(4).scala 75:253]
            when _T_56 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_4 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_5 = tail(_rowcount_1_T_4, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_5 @[ivncontrol(4).scala 76:29]
      rowcount[1] <= count[1] @[ivncontrol(4).scala 66:21]
      node _T_57 = neq(io.Stationary_matrix[1][3], UInt<1>("h0")) @[ivncontrol(4).scala 67:41]
      when _T_57 : @[ivncontrol(4).scala 67:49]
        node _T_58 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:46]
        node _T_59 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:84]
        node _T_60 = and(_T_58, _T_59) @[ivncontrol(4).scala 71:54]
        node _T_61 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:122]
        node _T_62 = and(_T_60, _T_61) @[ivncontrol(4).scala 71:92]
        node _T_63 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:162]
        node _T_64 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:200]
        node _T_65 = and(_T_63, _T_64) @[ivncontrol(4).scala 71:170]
        node _T_66 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:238]
        node _T_67 = and(_T_65, _T_66) @[ivncontrol(4).scala 71:208]
        node _T_68 = or(_T_62, _T_67) @[ivncontrol(4).scala 71:131]
        node _T_69 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 71:276]
        node _T_70 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 71:314]
        node _T_71 = and(_T_69, _T_70) @[ivncontrol(4).scala 71:284]
        node _T_72 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 71:352]
        node _T_73 = and(_T_71, _T_72) @[ivncontrol(4).scala 71:322]
        node _T_74 = or(_T_68, _T_73) @[ivncontrol(4).scala 71:246]
        when _T_74 : @[ivncontrol(4).scala 71:361]
          node _rowcount_1_T_6 = sub(count[1], UInt<2>("h2")) @[ivncontrol(4).scala 72:41]
          node _rowcount_1_T_7 = tail(_rowcount_1_T_6, 1) @[ivncontrol(4).scala 72:41]
          rowcount[1] <= _rowcount_1_T_7 @[ivncontrol(4).scala 72:29]
        else :
          node _T_75 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:52]
          node _T_76 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:90]
          node _T_77 = and(_T_75, _T_76) @[ivncontrol(4).scala 73:60]
          node _T_78 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 73:130]
          node _T_79 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:169]
          node _T_80 = and(_T_78, _T_79) @[ivncontrol(4).scala 73:138]
          node _T_81 = or(_T_77, _T_80) @[ivncontrol(4).scala 73:99]
          node _T_82 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 73:209]
          node _T_83 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 73:247]
          node _T_84 = and(_T_82, _T_83) @[ivncontrol(4).scala 73:217]
          node _T_85 = or(_T_81, _T_84) @[ivncontrol(4).scala 73:178]
          when _T_85 : @[ivncontrol(4).scala 73:256]
            node _rowcount_1_T_8 = sub(count[1], UInt<1>("h1")) @[ivncontrol(4).scala 74:41]
            node _rowcount_1_T_9 = tail(_rowcount_1_T_8, 1) @[ivncontrol(4).scala 74:41]
            rowcount[1] <= _rowcount_1_T_9 @[ivncontrol(4).scala 74:29]
          else :
            node _T_86 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:52]
            node _T_87 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:90]
            node _T_88 = and(_T_86, _T_87) @[ivncontrol(4).scala 75:60]
            node _T_89 = eq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:128]
            node _T_90 = and(_T_88, _T_89) @[ivncontrol(4).scala 75:98]
            node _T_91 = neq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:167]
            node _T_92 = eq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:205]
            node _T_93 = and(_T_91, _T_92) @[ivncontrol(4).scala 75:175]
            node _T_94 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:243]
            node _T_95 = and(_T_93, _T_94) @[ivncontrol(4).scala 75:213]
            node _T_96 = or(_T_90, _T_95) @[ivncontrol(4).scala 75:136]
            node _T_97 = eq(io.Stationary_matrix[1][0], UInt<1>("h0")) @[ivncontrol(4).scala 75:285]
            node _T_98 = neq(io.Stationary_matrix[1][1], UInt<1>("h0")) @[ivncontrol(4).scala 75:323]
            node _T_99 = and(_T_97, _T_98) @[ivncontrol(4).scala 75:293]
            node _T_100 = neq(io.Stationary_matrix[1][2], UInt<1>("h0")) @[ivncontrol(4).scala 75:361]
            node _T_101 = and(_T_99, _T_100) @[ivncontrol(4).scala 75:331]
            node _T_102 = or(_T_96, _T_101) @[ivncontrol(4).scala 75:253]
            when _T_102 : @[ivncontrol(4).scala 75:371]
              node _rowcount_1_T_10 = sub(count[1], UInt<2>("h3")) @[ivncontrol(4).scala 76:41]
              node _rowcount_1_T_11 = tail(_rowcount_1_T_10, 1) @[ivncontrol(4).scala 76:41]
              rowcount[1] <= _rowcount_1_T_11 @[ivncontrol(4).scala 76:29]
    node _T_103 = lt(i, UInt<2>("h3")) @[ivncontrol(4).scala 87:14]
    node _T_104 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 87:46]
    node _T_105 = and(_T_103, _T_104) @[ivncontrol(4).scala 87:40]
    when _T_105 : @[ivncontrol(4).scala 87:74]
      node _i_T = add(i, UInt<1>("h1")) @[ivncontrol(4).scala 88:16]
      node _i_T_1 = tail(_i_T, 1) @[ivncontrol(4).scala 88:16]
      i <= _i_T_1 @[ivncontrol(4).scala 88:11]
    node _T_106 = lt(j, UInt<2>("h3")) @[ivncontrol(4).scala 91:14]
    node _T_107 = leq(i, UInt<2>("h3")) @[ivncontrol(4).scala 91:44]
    node _T_108 = and(_T_106, _T_107) @[ivncontrol(4).scala 91:39]
    when _T_108 : @[ivncontrol(4).scala 91:71]
      node _j_T = add(j, UInt<1>("h1")) @[ivncontrol(4).scala 92:16]
      node _j_T_1 = tail(_j_T, 1) @[ivncontrol(4).scala 92:16]
      j <= _j_T_1 @[ivncontrol(4).scala 92:11]
    else :
      node _T_109 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 94:19]
      node _T_110 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 94:53]
      node _T_111 = and(_T_109, _T_110) @[ivncontrol(4).scala 94:47]
      when _T_111 : @[ivncontrol(4).scala 94:81]
        j <= j @[ivncontrol(4).scala 95:11]
      else :
        j <= UInt<1>("h0") @[ivncontrol(4).scala 98:11]
    io.o_vn <= i_vn @[ivncontrol(4).scala 105:13]
    i_vn[0] <= UInt<5>("h14") @[ivncontrol(4).scala 108:17]
    i_vn[1] <= UInt<5>("h1d") @[ivncontrol(4).scala 108:17]
    i_vn[2] <= UInt<5>("h9") @[ivncontrol(4).scala 108:17]
    i_vn[3] <= UInt<5>("h18") @[ivncontrol(4).scala 108:17]
    node _T_112 = eq(i, UInt<2>("h3")) @[ivncontrol(4).scala 118:14]
    node _T_113 = eq(j, UInt<2>("h3")) @[ivncontrol(4).scala 118:47]
    node _T_114 = and(_T_112, _T_113) @[ivncontrol(4).scala 118:41]
    when _T_114 : @[ivncontrol(4).scala 118:75]
      valid <= UInt<1>("h1") @[ivncontrol(4).scala 119:14]
    else :
      valid <= UInt<1>("h0") @[ivncontrol(4).scala 121:14]
    node _T_115 = eq(valid, UInt<1>("h1")) @[ivncontrol(4).scala 129:17]
    when _T_115 : @[ivncontrol(4).scala 129:28]
      node _T_116 = geq(UInt<3>("h4"), UInt<2>("h2")) @[ivncontrol(4).scala 130:25]
      when _T_116 : @[ivncontrol(4).scala 130:32]
        node _T_117 = eq(rowcount[0], UInt<2>("h2")) @[ivncontrol(4).scala 131:29]
        when _T_117 : @[ivncontrol(4).scala 131:38]
          i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 132:25]
          i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 133:25]
          node _T_118 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 134:34]
          when _T_118 : @[ivncontrol(4).scala 134:42]
            i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 135:29]
            i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 136:29]
          else :
            node _T_119 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 137:39]
            when _T_119 : @[ivncontrol(4).scala 137:46]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 138:29]
            else :
              node _T_120 = gt(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 139:40]
              when _T_120 : @[ivncontrol(4).scala 139:46]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 140:29]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 141:29]
        else :
          node _T_121 = eq(rowcount[0], UInt<1>("h1")) @[ivncontrol(4).scala 145:35]
          when _T_121 : @[ivncontrol(4).scala 145:43]
            i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 146:25]
            node _T_122 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 147:33]
            when _T_122 : @[ivncontrol(4).scala 147:40]
              i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 148:29]
              i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 149:29]
              i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 150:29]
            else :
              node _T_123 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 151:39]
              when _T_123 : @[ivncontrol(4).scala 151:46]
                i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 152:29]
                i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 153:29]
              else :
                node _T_124 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 155:39]
                when _T_124 : @[ivncontrol(4).scala 155:46]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 156:31]
                else :
                  node _T_125 = gt(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 158:39]
                  when _T_125 : @[ivncontrol(4).scala 158:44]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 159:30]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 160:29]
                    i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 161:29]
          else :
            node _T_126 = eq(rowcount[0], UInt<2>("h3")) @[ivncontrol(4).scala 167:35]
            when _T_126 : @[ivncontrol(4).scala 167:43]
              i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 168:25]
              i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 169:25]
              i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 170:25]
              node _T_127 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 171:34]
              when _T_127 : @[ivncontrol(4).scala 171:42]
                i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 172:29]
            else :
              node _T_128 = eq(rowcount[0], UInt<1>("h0")) @[ivncontrol(4).scala 175:35]
              when _T_128 : @[ivncontrol(4).scala 175:43]
                node _T_129 = eq(rowcount[1], UInt<3>("h4")) @[ivncontrol(4).scala 176:33]
                when _T_129 : @[ivncontrol(4).scala 176:41]
                  i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 177:29]
                  i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 178:29]
                  i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 179:29]
                  i_vn[3] <= UInt<1>("h1") @[ivncontrol(4).scala 180:29]
                else :
                  node _T_130 = eq(rowcount[1], UInt<2>("h3")) @[ivncontrol(4).scala 181:39]
                  when _T_130 : @[ivncontrol(4).scala 181:46]
                    i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 182:29]
                    i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 183:29]
                    i_vn[2] <= UInt<1>("h1") @[ivncontrol(4).scala 184:29]
                  else :
                    node _T_131 = eq(rowcount[1], UInt<2>("h2")) @[ivncontrol(4).scala 185:39]
                    when _T_131 : @[ivncontrol(4).scala 185:46]
                      i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 186:29]
                      i_vn[1] <= UInt<1>("h1") @[ivncontrol(4).scala 187:29]
                    else :
                      node _T_132 = eq(rowcount[1], UInt<1>("h1")) @[ivncontrol(4).scala 188:39]
                      when _T_132 : @[ivncontrol(4).scala 188:46]
                        i_vn[0] <= UInt<1>("h1") @[ivncontrol(4).scala 189:29]
              else :
                node _T_133 = eq(rowcount[0], UInt<3>("h4")) @[ivncontrol(4).scala 191:35]
                when _T_133 : @[ivncontrol(4).scala 191:42]
                  i_vn[0] <= UInt<1>("h0") @[ivncontrol(4).scala 192:25]
                  i_vn[1] <= UInt<1>("h0") @[ivncontrol(4).scala 193:25]
                  i_vn[2] <= UInt<1>("h0") @[ivncontrol(4).scala 194:25]
                  i_vn[3] <= UInt<1>("h0") @[ivncontrol(4).scala 195:25]

  module fancontrol4_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, o_reduction_add : UInt[3], o_reduction_cmd : UInt<3>[3], o_reduction_valid : UInt<1>}

    wire _r_reduction_add_WIRE : UInt<1>[3] @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    _r_reduction_add_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 19:42]
    reg r_reduction_add : UInt<1>[3], clock with :
      reset => (reset, _r_reduction_add_WIRE) @[FanCtrl.scala 19:34]
    wire _r_reduction_cmd_WIRE : UInt<3>[3] @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    _r_reduction_cmd_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 20:42]
    reg r_reduction_cmd : UInt<3>[3], clock with :
      reset => (reset, _r_reduction_cmd_WIRE) @[FanCtrl.scala 20:34]
    wire _r_add_lvl_0Reg_WIRE : UInt<1>[8] @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[5] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[6] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    _r_add_lvl_0Reg_WIRE[7] <= UInt<1>("h0") @[FanCtrl.scala 23:41]
    reg r_add_lvl_0Reg : UInt<1>[8], clock with :
      reset => (reset, _r_add_lvl_0Reg_WIRE) @[FanCtrl.scala 23:33]
    wire _r_add_lvl_1Reg_WIRE : UInt<1>[5] @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    _r_add_lvl_1Reg_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 24:41]
    reg r_add_lvl_1Reg : UInt<1>[5], clock with :
      reset => (reset, _r_add_lvl_1Reg_WIRE) @[FanCtrl.scala 24:33]
    wire _r_cmd_lvl_0Reg_WIRE : UInt<3>[8] @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[5] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[6] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    _r_cmd_lvl_0Reg_WIRE[7] <= UInt<3>("h0") @[FanCtrl.scala 27:41]
    reg r_cmd_lvl_0Reg : UInt<3>[8], clock with :
      reset => (reset, _r_cmd_lvl_0Reg_WIRE) @[FanCtrl.scala 27:33]
    wire _r_cmd_lvl_1Reg_WIRE : UInt<3>[5] @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[0] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[1] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[2] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[3] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    _r_cmd_lvl_1Reg_WIRE[4] <= UInt<3>("h0") @[FanCtrl.scala 28:41]
    reg r_cmd_lvl_1Reg : UInt<3>[5], clock with :
      reset => (reset, _r_cmd_lvl_1Reg_WIRE) @[FanCtrl.scala 28:33]
    wire _w_vn_WIRE : UInt<5>[4] @[FanCtrl.scala 34:31]
    _w_vn_WIRE[0] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[1] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[2] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    _w_vn_WIRE[3] <= UInt<5>("h0") @[FanCtrl.scala 34:31]
    reg w_vn : UInt<5>[4], clock with :
      reset => (reset, _w_vn_WIRE) @[FanCtrl.scala 34:23]
    wire _r_valid_WIRE : UInt<1>[5] @[FanCtrl.scala 35:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[3] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    _r_valid_WIRE[4] <= UInt<1>("h0") @[FanCtrl.scala 35:34]
    reg r_valid : UInt<1>[5], clock with :
      reset => (reset, _r_valid_WIRE) @[FanCtrl.scala 35:26]
    w_vn <= io.i_vn @[FanCtrl.scala 37:10]
    node _T = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T : @[FanCtrl.scala 40:25]
      node _T_1 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_1 : @[FanCtrl.scala 41:34]
        node _T_2 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:25]
        node _T_3 = add(_T_2, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_4 = tail(_T_3, 1) @[FanCtrl.scala 42:31]
        node _T_5 = bits(_T_4, 1, 0)
        node _T_6 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 42:52]
        node _T_7 = add(_T_6, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_8 = tail(_T_7, 1) @[FanCtrl.scala 42:58]
        node _T_9 = bits(_T_8, 1, 0)
        node _T_10 = eq(w_vn[_T_5], w_vn[_T_9]) @[FanCtrl.scala 42:39]
        when _T_10 : @[FanCtrl.scala 42:66]
          node _T_11 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 43:34]
          node _T_12 = tail(_T_11, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_12] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_13 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 45:32]
          node _T_14 = tail(_T_13, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_14] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_15 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 48:28]
        node _T_16 = add(_T_15, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_17 = tail(_T_16, 1) @[FanCtrl.scala 48:34]
        node _T_18 = bits(_T_17, 1, 0)
        node _T_19 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 49:26]
        node _T_20 = add(_T_19, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_21 = tail(_T_20, 1) @[FanCtrl.scala 49:32]
        node _T_22 = bits(_T_21, 1, 0)
        node _T_23 = neq(w_vn[_T_18], w_vn[_T_22]) @[FanCtrl.scala 48:41]
        node _T_24 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 50:27]
        node _T_25 = add(_T_24, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_26 = tail(_T_25, 1) @[FanCtrl.scala 50:33]
        node _T_27 = bits(_T_26, 1, 0)
        node _T_28 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 51:26]
        node _T_29 = add(_T_28, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_30 = tail(_T_29, 1) @[FanCtrl.scala 51:32]
        node _T_31 = bits(_T_30, 1, 0)
        node _T_32 = neq(w_vn[_T_27], w_vn[_T_31]) @[FanCtrl.scala 50:41]
        node _T_33 = and(_T_23, _T_32) @[FanCtrl.scala 49:41]
        when _T_33 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_34 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 55:34]
          node _T_35 = add(_T_34, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_36 = tail(_T_35, 1) @[FanCtrl.scala 55:40]
          node _T_37 = bits(_T_36, 1, 0)
          node _T_38 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 56:32]
          node _T_39 = add(_T_38, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_40 = tail(_T_39, 1) @[FanCtrl.scala 56:38]
          node _T_41 = bits(_T_40, 1, 0)
          node _T_42 = eq(w_vn[_T_37], w_vn[_T_41]) @[FanCtrl.scala 55:48]
          node _T_43 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 57:33]
          node _T_44 = add(_T_43, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_45 = tail(_T_44, 1) @[FanCtrl.scala 57:39]
          node _T_46 = bits(_T_45, 1, 0)
          node _T_47 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 58:32]
          node _T_48 = add(_T_47, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_49 = tail(_T_48, 1) @[FanCtrl.scala 58:38]
          node _T_50 = bits(_T_49, 1, 0)
          node _T_51 = neq(w_vn[_T_46], w_vn[_T_50]) @[FanCtrl.scala 57:46]
          node _T_52 = and(_T_42, _T_51) @[FanCtrl.scala 56:46]
          when _T_52 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_53 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 67:32]
        node _T_54 = tail(_T_53, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_54] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_55 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 77:29]
      node _T_56 = tail(_T_55, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_56] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_57 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_57 : @[FanCtrl.scala 81:34]
        node _T_58 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:25]
        node _T_59 = add(_T_58, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_60 = tail(_T_59, 1) @[FanCtrl.scala 82:31]
        node _T_61 = bits(_T_60, 1, 0)
        node _T_62 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 82:52]
        node _T_63 = add(_T_62, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_64 = tail(_T_63, 1) @[FanCtrl.scala 82:58]
        node _T_65 = bits(_T_64, 1, 0)
        node _T_66 = eq(w_vn[_T_61], w_vn[_T_65]) @[FanCtrl.scala 82:39]
        when _T_66 : @[FanCtrl.scala 82:66]
          node _T_67 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 83:33]
          node _T_68 = tail(_T_67, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_68] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_69 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 85:33]
          node _T_70 = tail(_T_69, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_70] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_71 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:26]
        node _T_72 = add(_T_71, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_73 = tail(_T_72, 1) @[FanCtrl.scala 88:32]
        node _T_74 = bits(_T_73, 1, 0)
        node _T_75 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 88:52]
        node _T_76 = sub(_T_75, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_77 = tail(_T_76, 1) @[FanCtrl.scala 88:58]
        node _T_78 = bits(_T_77, 1, 0)
        node _T_79 = neq(w_vn[_T_74], w_vn[_T_78]) @[FanCtrl.scala 88:39]
        node _T_80 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:23]
        node _T_81 = add(_T_80, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_82 = tail(_T_81, 1) @[FanCtrl.scala 89:29]
        node _T_83 = bits(_T_82, 1, 0)
        node _T_84 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 89:50]
        node _T_85 = add(_T_84, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_86 = tail(_T_85, 1) @[FanCtrl.scala 89:56]
        node _T_87 = bits(_T_86, 1, 0)
        node _T_88 = neq(w_vn[_T_83], w_vn[_T_87]) @[FanCtrl.scala 89:37]
        node _T_89 = and(_T_79, _T_88) @[FanCtrl.scala 88:67]
        when _T_89 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_90 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:32]
          node _T_91 = add(_T_90, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_92 = tail(_T_91, 1) @[FanCtrl.scala 93:38]
          node _T_93 = bits(_T_92, 1, 0)
          node _T_94 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 93:59]
          node _T_95 = sub(_T_94, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_96 = tail(_T_95, 1) @[FanCtrl.scala 93:65]
          node _T_97 = bits(_T_96, 1, 0)
          node _T_98 = eq(w_vn[_T_93], w_vn[_T_97]) @[FanCtrl.scala 93:46]
          node _T_99 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:23]
          node _T_100 = add(_T_99, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_101 = tail(_T_100, 1) @[FanCtrl.scala 94:29]
          node _T_102 = bits(_T_101, 1, 0)
          node _T_103 = mul(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 94:50]
          node _T_104 = add(_T_103, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_105 = tail(_T_104, 1) @[FanCtrl.scala 94:56]
          node _T_106 = bits(_T_105, 1, 0)
          node _T_107 = neq(w_vn[_T_102], w_vn[_T_106]) @[FanCtrl.scala 94:37]
          node _T_108 = and(_T_98, _T_107) @[FanCtrl.scala 93:73]
          when _T_108 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h0")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_109 = add(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 102:31]
        node _T_110 = tail(_T_109, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_110] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h0")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_111 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FanCtrl.scala 40:16]
    when _T_111 : @[FanCtrl.scala 40:25]
      node _T_112 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 41:25]
      when _T_112 : @[FanCtrl.scala 41:34]
        node _T_113 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:25]
        node _T_114 = add(_T_113, UInt<1>("h0")) @[FanCtrl.scala 42:31]
        node _T_115 = tail(_T_114, 1) @[FanCtrl.scala 42:31]
        node _T_116 = bits(_T_115, 1, 0)
        node _T_117 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 42:52]
        node _T_118 = add(_T_117, UInt<1>("h1")) @[FanCtrl.scala 42:58]
        node _T_119 = tail(_T_118, 1) @[FanCtrl.scala 42:58]
        node _T_120 = bits(_T_119, 1, 0)
        node _T_121 = eq(w_vn[_T_116], w_vn[_T_120]) @[FanCtrl.scala 42:39]
        when _T_121 : @[FanCtrl.scala 42:66]
          node _T_122 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 43:34]
          node _T_123 = tail(_T_122, 1) @[FanCtrl.scala 43:34]
          r_reduction_add[_T_123] <= UInt<1>("h1") @[FanCtrl.scala 43:40]
        else :
          node _T_124 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 45:32]
          node _T_125 = tail(_T_124, 1) @[FanCtrl.scala 45:32]
          r_reduction_add[_T_125] <= UInt<1>("h0") @[FanCtrl.scala 45:38]
        node _T_126 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 48:28]
        node _T_127 = add(_T_126, UInt<1>("h1")) @[FanCtrl.scala 48:34]
        node _T_128 = tail(_T_127, 1) @[FanCtrl.scala 48:34]
        node _T_129 = bits(_T_128, 1, 0)
        node _T_130 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 49:26]
        node _T_131 = add(_T_130, UInt<2>("h2")) @[FanCtrl.scala 49:32]
        node _T_132 = tail(_T_131, 1) @[FanCtrl.scala 49:32]
        node _T_133 = bits(_T_132, 1, 0)
        node _T_134 = neq(w_vn[_T_129], w_vn[_T_133]) @[FanCtrl.scala 48:41]
        node _T_135 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 50:27]
        node _T_136 = add(_T_135, UInt<1>("h0")) @[FanCtrl.scala 50:33]
        node _T_137 = tail(_T_136, 1) @[FanCtrl.scala 50:33]
        node _T_138 = bits(_T_137, 1, 0)
        node _T_139 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 51:26]
        node _T_140 = add(_T_139, UInt<1>("h1")) @[FanCtrl.scala 51:32]
        node _T_141 = tail(_T_140, 1) @[FanCtrl.scala 51:32]
        node _T_142 = bits(_T_141, 1, 0)
        node _T_143 = neq(w_vn[_T_138], w_vn[_T_142]) @[FanCtrl.scala 50:41]
        node _T_144 = and(_T_134, _T_143) @[FanCtrl.scala 49:41]
        when _T_144 : @[FanCtrl.scala 51:42]
          r_reduction_cmd[0] <= UInt<3>("h5") @[FanCtrl.scala 53:37]
        else :
          node _T_145 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 55:34]
          node _T_146 = add(_T_145, UInt<1>("h1")) @[FanCtrl.scala 55:40]
          node _T_147 = tail(_T_146, 1) @[FanCtrl.scala 55:40]
          node _T_148 = bits(_T_147, 1, 0)
          node _T_149 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 56:32]
          node _T_150 = add(_T_149, UInt<2>("h2")) @[FanCtrl.scala 56:38]
          node _T_151 = tail(_T_150, 1) @[FanCtrl.scala 56:38]
          node _T_152 = bits(_T_151, 1, 0)
          node _T_153 = eq(w_vn[_T_148], w_vn[_T_152]) @[FanCtrl.scala 55:48]
          node _T_154 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 57:33]
          node _T_155 = add(_T_154, UInt<1>("h0")) @[FanCtrl.scala 57:39]
          node _T_156 = tail(_T_155, 1) @[FanCtrl.scala 57:39]
          node _T_157 = bits(_T_156, 1, 0)
          node _T_158 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 58:32]
          node _T_159 = add(_T_158, UInt<1>("h1")) @[FanCtrl.scala 58:38]
          node _T_160 = tail(_T_159, 1) @[FanCtrl.scala 58:38]
          node _T_161 = bits(_T_160, 1, 0)
          node _T_162 = neq(w_vn[_T_157], w_vn[_T_161]) @[FanCtrl.scala 57:46]
          node _T_163 = and(_T_153, _T_162) @[FanCtrl.scala 56:46]
          when _T_163 : @[FanCtrl.scala 58:48]
            r_reduction_cmd[0] <= UInt<2>("h3") @[FanCtrl.scala 60:40]
          else :
            r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 63:38]
      else :
        node _T_164 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 67:32]
        node _T_165 = tail(_T_164, 1) @[FanCtrl.scala 67:32]
        r_reduction_add[_T_165] <= UInt<1>("h0") @[FanCtrl.scala 67:38]
        r_reduction_cmd[0] <= UInt<1>("h0") @[FanCtrl.scala 68:33]
    else :
      node _T_166 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 77:29]
      node _T_167 = tail(_T_166, 1) @[FanCtrl.scala 77:29]
      r_reduction_add[_T_167] <= UInt<1>("h0") @[FanCtrl.scala 77:36]
      r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 78:31]
      node _T_168 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 81:25]
      when _T_168 : @[FanCtrl.scala 81:34]
        node _T_169 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:25]
        node _T_170 = add(_T_169, UInt<1>("h0")) @[FanCtrl.scala 82:31]
        node _T_171 = tail(_T_170, 1) @[FanCtrl.scala 82:31]
        node _T_172 = bits(_T_171, 1, 0)
        node _T_173 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 82:52]
        node _T_174 = add(_T_173, UInt<1>("h1")) @[FanCtrl.scala 82:58]
        node _T_175 = tail(_T_174, 1) @[FanCtrl.scala 82:58]
        node _T_176 = bits(_T_175, 1, 0)
        node _T_177 = eq(w_vn[_T_172], w_vn[_T_176]) @[FanCtrl.scala 82:39]
        when _T_177 : @[FanCtrl.scala 82:66]
          node _T_178 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 83:33]
          node _T_179 = tail(_T_178, 1) @[FanCtrl.scala 83:33]
          r_reduction_add[_T_179] <= UInt<1>("h1") @[FanCtrl.scala 83:40]
        else :
          node _T_180 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 85:33]
          node _T_181 = tail(_T_180, 1) @[FanCtrl.scala 85:33]
          r_reduction_add[_T_181] <= UInt<1>("h0") @[FanCtrl.scala 85:40]
        node _T_182 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:26]
        node _T_183 = add(_T_182, UInt<1>("h0")) @[FanCtrl.scala 88:32]
        node _T_184 = tail(_T_183, 1) @[FanCtrl.scala 88:32]
        node _T_185 = bits(_T_184, 1, 0)
        node _T_186 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 88:52]
        node _T_187 = sub(_T_186, UInt<1>("h1")) @[FanCtrl.scala 88:58]
        node _T_188 = tail(_T_187, 1) @[FanCtrl.scala 88:58]
        node _T_189 = bits(_T_188, 1, 0)
        node _T_190 = neq(w_vn[_T_185], w_vn[_T_189]) @[FanCtrl.scala 88:39]
        node _T_191 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:23]
        node _T_192 = add(_T_191, UInt<1>("h0")) @[FanCtrl.scala 89:29]
        node _T_193 = tail(_T_192, 1) @[FanCtrl.scala 89:29]
        node _T_194 = bits(_T_193, 1, 0)
        node _T_195 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 89:50]
        node _T_196 = add(_T_195, UInt<1>("h1")) @[FanCtrl.scala 89:56]
        node _T_197 = tail(_T_196, 1) @[FanCtrl.scala 89:56]
        node _T_198 = bits(_T_197, 1, 0)
        node _T_199 = neq(w_vn[_T_194], w_vn[_T_198]) @[FanCtrl.scala 89:37]
        node _T_200 = and(_T_190, _T_199) @[FanCtrl.scala 88:67]
        when _T_200 : @[FanCtrl.scala 89:66]
          r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h5") @[FanCtrl.scala 91:36]
        else :
          node _T_201 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:32]
          node _T_202 = add(_T_201, UInt<1>("h0")) @[FanCtrl.scala 93:38]
          node _T_203 = tail(_T_202, 1) @[FanCtrl.scala 93:38]
          node _T_204 = bits(_T_203, 1, 0)
          node _T_205 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 93:59]
          node _T_206 = sub(_T_205, UInt<1>("h1")) @[FanCtrl.scala 93:65]
          node _T_207 = tail(_T_206, 1) @[FanCtrl.scala 93:65]
          node _T_208 = bits(_T_207, 1, 0)
          node _T_209 = eq(w_vn[_T_204], w_vn[_T_208]) @[FanCtrl.scala 93:46]
          node _T_210 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:23]
          node _T_211 = add(_T_210, UInt<1>("h0")) @[FanCtrl.scala 94:29]
          node _T_212 = tail(_T_211, 1) @[FanCtrl.scala 94:29]
          node _T_213 = bits(_T_212, 1, 0)
          node _T_214 = mul(UInt<2>("h2"), UInt<1>("h1")) @[FanCtrl.scala 94:50]
          node _T_215 = add(_T_214, UInt<1>("h1")) @[FanCtrl.scala 94:56]
          node _T_216 = tail(_T_215, 1) @[FanCtrl.scala 94:56]
          node _T_217 = bits(_T_216, 1, 0)
          node _T_218 = neq(w_vn[_T_213], w_vn[_T_217]) @[FanCtrl.scala 94:37]
          node _T_219 = and(_T_209, _T_218) @[FanCtrl.scala 93:73]
          when _T_219 : @[FanCtrl.scala 94:66]
            r_reduction_cmd[UInt<1>("h1")] <= UInt<3>("h4") @[FanCtrl.scala 96:35]
          else :
            r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 99:35]
      else :
        node _T_220 = add(UInt<1>("h0"), UInt<1>("h1")) @[FanCtrl.scala 102:31]
        node _T_221 = tail(_T_220, 1) @[FanCtrl.scala 102:31]
        r_reduction_add[_T_221] <= UInt<1>("h0") @[FanCtrl.scala 102:38]
        r_reduction_cmd[UInt<1>("h1")] <= UInt<1>("h0") @[FanCtrl.scala 103:33]
    node _T_222 = eq(UInt<1>("h0"), UInt<1>("h0")) @[FanCtrl.scala 112:14]
    when _T_222 : @[FanCtrl.scala 112:23]
      node _T_223 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 113:27]
      node _T_224 = tail(_T_223, 1) @[FanCtrl.scala 113:27]
      r_reduction_add[_T_224] <= UInt<1>("h0") @[FanCtrl.scala 113:34]
      node _T_225 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 114:28]
      node _T_226 = tail(_T_225, 1) @[FanCtrl.scala 114:28]
      r_reduction_cmd[_T_226] <= UInt<1>("h0") @[FanCtrl.scala 114:35]
      node _T_227 = eq(r_valid[1], UInt<1>("h1")) @[FanCtrl.scala 116:23]
      when _T_227 : @[FanCtrl.scala 116:32]
        node _T_228 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:23]
        node _T_229 = add(_T_228, UInt<1>("h1")) @[FanCtrl.scala 117:29]
        node _T_230 = tail(_T_229, 1) @[FanCtrl.scala 117:29]
        node _T_231 = bits(_T_230, 1, 0)
        node _T_232 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 117:50]
        node _T_233 = add(_T_232, UInt<2>("h2")) @[FanCtrl.scala 117:56]
        node _T_234 = tail(_T_233, 1) @[FanCtrl.scala 117:56]
        node _T_235 = bits(_T_234, 1, 0)
        node _T_236 = eq(w_vn[_T_231], w_vn[_T_235]) @[FanCtrl.scala 117:37]
        when _T_236 : @[FanCtrl.scala 117:65]
          node _T_237 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 118:31]
          node _T_238 = tail(_T_237, 1) @[FanCtrl.scala 118:31]
          r_reduction_add[_T_238] <= UInt<1>("h1") @[FanCtrl.scala 118:38]
        else :
          node _T_239 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 120:31]
          node _T_240 = tail(_T_239, 1) @[FanCtrl.scala 120:31]
          r_reduction_add[_T_240] <= UInt<1>("h0") @[FanCtrl.scala 120:38]
        node _T_241 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:24]
        node _T_242 = add(_T_241, UInt<1>("h0")) @[FanCtrl.scala 123:30]
        node _T_243 = tail(_T_242, 1) @[FanCtrl.scala 123:30]
        node _T_244 = bits(_T_243, 1, 0)
        node _T_245 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 123:51]
        node _T_246 = add(_T_245, UInt<1>("h1")) @[FanCtrl.scala 123:57]
        node _T_247 = tail(_T_246, 1) @[FanCtrl.scala 123:57]
        node _T_248 = bits(_T_247, 1, 0)
        node _T_249 = eq(w_vn[_T_244], w_vn[_T_248]) @[FanCtrl.scala 123:38]
        node _T_250 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:23]
        node _T_251 = add(_T_250, UInt<2>("h2")) @[FanCtrl.scala 124:29]
        node _T_252 = tail(_T_251, 1) @[FanCtrl.scala 124:29]
        node _T_253 = bits(_T_252, 1, 0)
        node _T_254 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 124:49]
        node _T_255 = add(_T_254, UInt<2>("h3")) @[FanCtrl.scala 124:55]
        node _T_256 = tail(_T_255, 1) @[FanCtrl.scala 124:55]
        node _T_257 = bits(_T_256, 1, 0)
        node _T_258 = eq(w_vn[_T_253], w_vn[_T_257]) @[FanCtrl.scala 124:36]
        node _T_259 = and(_T_249, _T_258) @[FanCtrl.scala 123:65]
        node _T_260 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:23]
        node _T_261 = add(_T_260, UInt<3>("h4")) @[FanCtrl.scala 125:29]
        node _T_262 = tail(_T_261, 1) @[FanCtrl.scala 125:29]
        node _T_263 = bits(_T_262, 1, 0)
        node _T_264 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 125:50]
        node _T_265 = add(_T_264, UInt<2>("h3")) @[FanCtrl.scala 125:56]
        node _T_266 = tail(_T_265, 1) @[FanCtrl.scala 125:56]
        node _T_267 = bits(_T_266, 1, 0)
        node _T_268 = neq(w_vn[_T_263], w_vn[_T_267]) @[FanCtrl.scala 125:37]
        node _T_269 = and(_T_259, _T_268) @[FanCtrl.scala 124:64]
        node _T_270 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:23]
        node _T_271 = add(_T_270, UInt<1>("h1")) @[FanCtrl.scala 126:29]
        node _T_272 = tail(_T_271, 1) @[FanCtrl.scala 126:29]
        node _T_273 = bits(_T_272, 1, 0)
        node _T_274 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 126:51]
        node _T_275 = add(_T_274, UInt<2>("h2")) @[FanCtrl.scala 126:57]
        node _T_276 = tail(_T_275, 1) @[FanCtrl.scala 126:57]
        node _T_277 = bits(_T_276, 1, 0)
        node _T_278 = neq(w_vn[_T_273], w_vn[_T_277]) @[FanCtrl.scala 126:37]
        node _T_279 = and(_T_269, _T_278) @[FanCtrl.scala 125:64]
        when _T_279 : @[FanCtrl.scala 126:66]
          node _T_280 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 128:31]
          node _T_281 = tail(_T_280, 1) @[FanCtrl.scala 128:31]
          r_reduction_cmd[_T_281] <= UInt<3>("h5") @[FanCtrl.scala 128:39]
        else :
          node _T_282 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:30]
          node _T_283 = add(_T_282, UInt<2>("h2")) @[FanCtrl.scala 130:36]
          node _T_284 = tail(_T_283, 1) @[FanCtrl.scala 130:36]
          node _T_285 = bits(_T_284, 1, 0)
          node _T_286 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 130:57]
          node _T_287 = add(_T_286, UInt<2>("h3")) @[FanCtrl.scala 130:63]
          node _T_288 = tail(_T_287, 1) @[FanCtrl.scala 130:63]
          node _T_289 = bits(_T_288, 1, 0)
          node _T_290 = eq(w_vn[_T_285], w_vn[_T_289]) @[FanCtrl.scala 130:44]
          node _T_291 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:29]
          node _T_292 = add(_T_291, UInt<3>("h4")) @[FanCtrl.scala 131:35]
          node _T_293 = tail(_T_292, 1) @[FanCtrl.scala 131:35]
          node _T_294 = bits(_T_293, 1, 0)
          node _T_295 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 131:57]
          node _T_296 = add(_T_295, UInt<2>("h3")) @[FanCtrl.scala 131:63]
          node _T_297 = tail(_T_296, 1) @[FanCtrl.scala 131:63]
          node _T_298 = bits(_T_297, 1, 0)
          node _T_299 = neq(w_vn[_T_294], w_vn[_T_298]) @[FanCtrl.scala 131:43]
          node _T_300 = and(_T_290, _T_299) @[FanCtrl.scala 130:71]
          node _T_301 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:29]
          node _T_302 = add(_T_301, UInt<1>("h1")) @[FanCtrl.scala 132:35]
          node _T_303 = tail(_T_302, 1) @[FanCtrl.scala 132:35]
          node _T_304 = bits(_T_303, 1, 0)
          node _T_305 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 132:57]
          node _T_306 = add(_T_305, UInt<2>("h2")) @[FanCtrl.scala 132:63]
          node _T_307 = tail(_T_306, 1) @[FanCtrl.scala 132:63]
          node _T_308 = bits(_T_307, 1, 0)
          node _T_309 = neq(w_vn[_T_304], w_vn[_T_308]) @[FanCtrl.scala 132:43]
          node _T_310 = and(_T_300, _T_309) @[FanCtrl.scala 131:71]
          when _T_310 : @[FanCtrl.scala 132:72]
            node _T_311 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 134:31]
            node _T_312 = tail(_T_311, 1) @[FanCtrl.scala 134:31]
            r_reduction_cmd[_T_312] <= UInt<3>("h4") @[FanCtrl.scala 134:38]
          else :
            node _T_313 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:30]
            node _T_314 = add(_T_313, UInt<1>("h0")) @[FanCtrl.scala 136:36]
            node _T_315 = tail(_T_314, 1) @[FanCtrl.scala 136:36]
            node _T_316 = bits(_T_315, 1, 0)
            node _T_317 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 136:56]
            node _T_318 = add(_T_317, UInt<1>("h1")) @[FanCtrl.scala 136:62]
            node _T_319 = tail(_T_318, 1) @[FanCtrl.scala 136:62]
            node _T_320 = bits(_T_319, 1, 0)
            node _T_321 = eq(w_vn[_T_316], w_vn[_T_320]) @[FanCtrl.scala 136:43]
            node _T_322 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:29]
            node _T_323 = add(_T_322, UInt<1>("h1")) @[FanCtrl.scala 137:35]
            node _T_324 = tail(_T_323, 1) @[FanCtrl.scala 137:35]
            node _T_325 = bits(_T_324, 1, 0)
            node _T_326 = mul(UInt<3>("h4"), UInt<1>("h0")) @[FanCtrl.scala 137:57]
            node _T_327 = add(_T_326, UInt<2>("h2")) @[FanCtrl.scala 137:63]
            node _T_328 = tail(_T_327, 1) @[FanCtrl.scala 137:63]
            node _T_329 = bits(_T_328, 1, 0)
            node _T_330 = neq(w_vn[_T_325], w_vn[_T_329]) @[FanCtrl.scala 137:43]
            node _T_331 = and(_T_321, _T_330) @[FanCtrl.scala 136:71]
            when _T_331 : @[FanCtrl.scala 137:72]
              node _T_332 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 139:31]
              node _T_333 = tail(_T_332, 1) @[FanCtrl.scala 139:31]
              r_reduction_cmd[_T_333] <= UInt<2>("h3") @[FanCtrl.scala 139:38]
            else :
              node _T_334 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 141:30]
              node _T_335 = tail(_T_334, 1) @[FanCtrl.scala 141:30]
              r_reduction_cmd[_T_335] <= UInt<1>("h0") @[FanCtrl.scala 141:36]
      else :
        node _T_336 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 144:29]
        node _T_337 = tail(_T_336, 1) @[FanCtrl.scala 144:29]
        r_reduction_add[_T_337] <= UInt<1>("h0") @[FanCtrl.scala 144:36]
        node _T_338 = add(UInt<2>("h2"), UInt<1>("h0")) @[FanCtrl.scala 145:30]
        node _T_339 = tail(_T_338, 1) @[FanCtrl.scala 145:30]
        r_reduction_cmd[_T_339] <= UInt<1>("h0") @[FanCtrl.scala 145:37]
    wire _WIRE : UInt<1>[8] @[FanCtrl.scala 157:30]
    _WIRE[0] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[1] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[2] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[3] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[4] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[5] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    _WIRE[6] <= r_reduction_add[0] @[FanCtrl.scala 157:30]
    _WIRE[7] <= r_reduction_add[1] @[FanCtrl.scala 157:30]
    r_add_lvl_0Reg <= _WIRE @[FanCtrl.scala 157:20]
    wire _WIRE_1 : UInt<1>[5] @[FanCtrl.scala 168:30]
    _WIRE_1[0] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[1] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[2] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[3] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    _WIRE_1[4] <= r_reduction_add[2] @[FanCtrl.scala 168:30]
    r_add_lvl_1Reg <= _WIRE_1 @[FanCtrl.scala 168:20]
    wire _WIRE_2 : UInt<3>[8] @[FanCtrl.scala 185:30]
    _WIRE_2[0] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[1] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[2] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[3] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[4] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[5] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    _WIRE_2[6] <= r_reduction_cmd[0] @[FanCtrl.scala 185:30]
    _WIRE_2[7] <= r_reduction_cmd[1] @[FanCtrl.scala 185:30]
    r_cmd_lvl_0Reg <= _WIRE_2 @[FanCtrl.scala 185:20]
    wire _WIRE_3 : UInt<3>[5] @[FanCtrl.scala 199:30]
    _WIRE_3[0] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[1] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[2] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[3] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    _WIRE_3[4] <= r_reduction_cmd[2] @[FanCtrl.scala 199:30]
    r_cmd_lvl_1Reg <= _WIRE_3 @[FanCtrl.scala 199:20]
    node _T_340 = eq(io.i_stationary, UInt<1>("h0")) @[FanCtrl.scala 213:26]
    node _T_341 = eq(io.i_data_valid, UInt<1>("h1")) @[FanCtrl.scala 213:53]
    node _T_342 = and(_T_340, _T_341) @[FanCtrl.scala 213:34]
    when _T_342 : @[FanCtrl.scala 213:62]
      r_valid[0] <= UInt<1>("h1") @[FanCtrl.scala 214:18]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanCtrl.scala 216:18]
    r_valid[1] <= r_valid[0] @[FanCtrl.scala 222:24]
    r_valid[2] <= r_valid[1] @[FanCtrl.scala 222:24]
    r_valid[3] <= r_valid[2] @[FanCtrl.scala 222:24]
    r_valid[4] <= r_valid[3] @[FanCtrl.scala 222:24]
    io.o_reduction_valid <= r_valid[3] @[FanCtrl.scala 226:26]
    wire _WIRE_4 : UInt<1>[3] @[FanCtrl.scala 227:35]
    _WIRE_4[0] <= r_add_lvl_0Reg[6] @[FanCtrl.scala 227:35]
    _WIRE_4[1] <= r_add_lvl_0Reg[7] @[FanCtrl.scala 227:35]
    _WIRE_4[2] <= r_add_lvl_1Reg[4] @[FanCtrl.scala 227:35]
    io.o_reduction_add <= _WIRE_4 @[FanCtrl.scala 227:24]
    wire _WIRE_5 : UInt<3>[3] @[FanCtrl.scala 236:34]
    _WIRE_5[0] <= r_cmd_lvl_0Reg[6] @[FanCtrl.scala 236:34]
    _WIRE_5[1] <= r_cmd_lvl_0Reg[7] @[FanCtrl.scala 236:34]
    _WIRE_5[2] <= r_cmd_lvl_1Reg[4] @[FanCtrl.scala 236:34]
    io.o_reduction_cmd <= _WIRE_5 @[FanCtrl.scala 236:24]

  module Benes_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data_bus2 : UInt<16>[4], flip i_data_bus1 : UInt<16>[4], flip i_mux_bus : UInt<4>[4], o_dist_bus1 : UInt<16>[4], o_dist_bus2 : UInt<16>[4]}

    io.o_dist_bus1 <= io.i_data_bus1 @[Benes.scala 16:18]
    wire _parse_array_WIRE : UInt<16>[5] @[Benes.scala 19:37]
    _parse_array_WIRE[0] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[1] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[2] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[3] <= UInt<16>("h0") @[Benes.scala 19:37]
    _parse_array_WIRE[4] <= UInt<16>("h0") @[Benes.scala 19:37]
    wire parse_array : UInt<16>[5]
    parse_array <= _parse_array_WIRE
    node _T = neq(io.i_data_bus2[1], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T : @[Benes.scala 56:39]
      node _T_1 = orr(io.i_mux_bus[1]) @[Benes.scala 58:31]
      when _T_1 : @[Benes.scala 58:35]
        node _T_2 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 60:36]
        when _T_2 : @[Benes.scala 60:61]
          node _parsedindexvalue_T = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_1 = tail(_parsedindexvalue_T, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_1 = rem(_parsedindexvalue_T_1, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_2 = eq(_parsedindexvalue_first_stage_T_1, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_3 = add(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_4 = tail(_parsedindexvalue_first_stage_T_3, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_5 = sub(_parsedindexvalue_T_1, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_6 = tail(_parsedindexvalue_first_stage_T_5, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_7 = mux(_parsedindexvalue_first_stage_T_2, _parsedindexvalue_first_stage_T_4, _parsedindexvalue_first_stage_T_6) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage = mux(_parsedindexvalue_first_stage_T, _parsedindexvalue_first_stage_T_7, _parsedindexvalue_T_1) @[Benes.scala 24:26]
          node _parsedindexvalue_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_1 = bits(_parsedindexvalue_boolArray_T, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_2 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_3 = bits(_parsedindexvalue_boolArray_T_2, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray[0] <= _parsedindexvalue_boolArray_T_1 @[Benes.scala 28:28]
          parsedindexvalue_boolArray[1] <= _parsedindexvalue_boolArray_T_3 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage : UInt
          parsedindexvalue_second_stage <= parsedindexvalue_first_stage
          node parsedindexvalue_calculation = rem(parsedindexvalue_second_stage, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_1 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_2 = and(_parsedindexvalue_nextIndex_T, _parsedindexvalue_nextIndex_T_1) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_3 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_4 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_5 = and(_parsedindexvalue_nextIndex_T_3, _parsedindexvalue_nextIndex_T_4) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_6 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_7 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_8 = and(_parsedindexvalue_nextIndex_T_6, _parsedindexvalue_nextIndex_T_7) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_9 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_10 = eq(parsedindexvalue_boolArray[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_11 = and(_parsedindexvalue_nextIndex_T_9, _parsedindexvalue_nextIndex_T_10) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_12 = eq(parsedindexvalue_calculation, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_13 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_14 = and(_parsedindexvalue_nextIndex_T_12, _parsedindexvalue_nextIndex_T_13) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_15 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_16 = tail(_parsedindexvalue_nextIndex_T_15, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_17 = eq(parsedindexvalue_calculation, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_18 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_19 = and(_parsedindexvalue_nextIndex_T_17, _parsedindexvalue_nextIndex_T_18) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_20 = add(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_21 = tail(_parsedindexvalue_nextIndex_T_20, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_22 = eq(parsedindexvalue_calculation, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_23 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_24 = and(_parsedindexvalue_nextIndex_T_22, _parsedindexvalue_nextIndex_T_23) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_25 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_26 = tail(_parsedindexvalue_nextIndex_T_25, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_27 = eq(parsedindexvalue_calculation, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_28 = eq(parsedindexvalue_boolArray[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_29 = and(_parsedindexvalue_nextIndex_T_27, _parsedindexvalue_nextIndex_T_28) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_30 = sub(parsedindexvalue_second_stage, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_31 = tail(_parsedindexvalue_nextIndex_T_30, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_32 = mux(_parsedindexvalue_nextIndex_T_29, _parsedindexvalue_nextIndex_T_31, parsedindexvalue_second_stage) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_33 = mux(_parsedindexvalue_nextIndex_T_24, _parsedindexvalue_nextIndex_T_26, _parsedindexvalue_nextIndex_T_32) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_34 = mux(_parsedindexvalue_nextIndex_T_19, _parsedindexvalue_nextIndex_T_21, _parsedindexvalue_nextIndex_T_33) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_35 = mux(_parsedindexvalue_nextIndex_T_14, _parsedindexvalue_nextIndex_T_16, _parsedindexvalue_nextIndex_T_34) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_36 = mux(_parsedindexvalue_nextIndex_T_11, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_35) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_37 = mux(_parsedindexvalue_nextIndex_T_8, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_36) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_38 = mux(_parsedindexvalue_nextIndex_T_5, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_37) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex = mux(_parsedindexvalue_nextIndex_T_2, parsedindexvalue_second_stage, _parsedindexvalue_nextIndex_T_38) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_1 = rem(parsedindexvalue_nextIndex, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_39 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_40 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_41 = and(_parsedindexvalue_nextIndex_T_39, _parsedindexvalue_nextIndex_T_40) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_42 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_43 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_44 = and(_parsedindexvalue_nextIndex_T_42, _parsedindexvalue_nextIndex_T_43) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_45 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_46 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_47 = and(_parsedindexvalue_nextIndex_T_45, _parsedindexvalue_nextIndex_T_46) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_48 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_49 = eq(parsedindexvalue_boolArray[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_50 = and(_parsedindexvalue_nextIndex_T_48, _parsedindexvalue_nextIndex_T_49) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_51 = eq(parsedindexvalue_calculation_1, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_52 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_53 = and(_parsedindexvalue_nextIndex_T_51, _parsedindexvalue_nextIndex_T_52) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_54 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_55 = tail(_parsedindexvalue_nextIndex_T_54, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_56 = eq(parsedindexvalue_calculation_1, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_57 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_58 = and(_parsedindexvalue_nextIndex_T_56, _parsedindexvalue_nextIndex_T_57) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_59 = add(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_60 = tail(_parsedindexvalue_nextIndex_T_59, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_61 = eq(parsedindexvalue_calculation_1, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_62 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_63 = and(_parsedindexvalue_nextIndex_T_61, _parsedindexvalue_nextIndex_T_62) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_64 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_65 = tail(_parsedindexvalue_nextIndex_T_64, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_66 = eq(parsedindexvalue_calculation_1, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_67 = eq(parsedindexvalue_boolArray[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_68 = and(_parsedindexvalue_nextIndex_T_66, _parsedindexvalue_nextIndex_T_67) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_69 = sub(parsedindexvalue_nextIndex, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_70 = tail(_parsedindexvalue_nextIndex_T_69, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_71 = mux(_parsedindexvalue_nextIndex_T_68, _parsedindexvalue_nextIndex_T_70, parsedindexvalue_nextIndex) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_72 = mux(_parsedindexvalue_nextIndex_T_63, _parsedindexvalue_nextIndex_T_65, _parsedindexvalue_nextIndex_T_71) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_73 = mux(_parsedindexvalue_nextIndex_T_58, _parsedindexvalue_nextIndex_T_60, _parsedindexvalue_nextIndex_T_72) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_74 = mux(_parsedindexvalue_nextIndex_T_53, _parsedindexvalue_nextIndex_T_55, _parsedindexvalue_nextIndex_T_73) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_75 = mux(_parsedindexvalue_nextIndex_T_50, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_74) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_76 = mux(_parsedindexvalue_nextIndex_T_47, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_75) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_77 = mux(_parsedindexvalue_nextIndex_T_44, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_76) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_1 = mux(_parsedindexvalue_nextIndex_T_41, parsedindexvalue_nextIndex, _parsedindexvalue_nextIndex_T_77) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_1 = rem(parsedindexvalue_nextIndex_1, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_2 = eq(_parsedindexvalue_third_stage_T_1, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_3 = add(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_4 = tail(_parsedindexvalue_third_stage_T_3, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_5 = sub(parsedindexvalue_nextIndex_1, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_6 = tail(_parsedindexvalue_third_stage_T_5, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_7 = mux(_parsedindexvalue_third_stage_T_2, _parsedindexvalue_third_stage_T_4, _parsedindexvalue_third_stage_T_6) @[Benes.scala 48:47]
          node parsedindexvalue = mux(_parsedindexvalue_third_stage_T, _parsedindexvalue_third_stage_T_7, parsedindexvalue_nextIndex_1) @[Benes.scala 48:24]
          node _T_3 = or(parsedindexvalue, UInt<3>("h0"))
          node _T_4 = bits(_T_3, 2, 0)
          parse_array[_T_4] <= io.i_data_bus2[1] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_8 = bits(io.i_mux_bus[1], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_9 = rem(UInt<1>("h1"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_10 = eq(_parsedindexvalue_first_stage_T_9, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_11 = add(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_12 = tail(_parsedindexvalue_first_stage_T_11, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_13 = sub(UInt<1>("h1"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_14 = tail(_parsedindexvalue_first_stage_T_13, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_15 = mux(_parsedindexvalue_first_stage_T_10, _parsedindexvalue_first_stage_T_12, _parsedindexvalue_first_stage_T_14) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_1 = mux(_parsedindexvalue_first_stage_T_8, _parsedindexvalue_first_stage_T_15, UInt<1>("h1")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_3 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_4 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_5 = bits(_parsedindexvalue_boolArray_T_4, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_6 = bits(io.i_mux_bus[1], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_7 = bits(_parsedindexvalue_boolArray_T_6, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_1 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[0] <= _parsedindexvalue_boolArray_T_5 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_1[1] <= _parsedindexvalue_boolArray_T_7 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_1 : UInt
          parsedindexvalue_second_stage_1 <= parsedindexvalue_first_stage_1
          node parsedindexvalue_calculation_2 = rem(parsedindexvalue_second_stage_1, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_78 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_79 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_80 = and(_parsedindexvalue_nextIndex_T_78, _parsedindexvalue_nextIndex_T_79) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_81 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_82 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_83 = and(_parsedindexvalue_nextIndex_T_81, _parsedindexvalue_nextIndex_T_82) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_84 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_85 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_86 = and(_parsedindexvalue_nextIndex_T_84, _parsedindexvalue_nextIndex_T_85) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_87 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_88 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_89 = and(_parsedindexvalue_nextIndex_T_87, _parsedindexvalue_nextIndex_T_88) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_90 = eq(parsedindexvalue_calculation_2, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_91 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_92 = and(_parsedindexvalue_nextIndex_T_90, _parsedindexvalue_nextIndex_T_91) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_93 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_94 = tail(_parsedindexvalue_nextIndex_T_93, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_95 = eq(parsedindexvalue_calculation_2, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_96 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_97 = and(_parsedindexvalue_nextIndex_T_95, _parsedindexvalue_nextIndex_T_96) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_98 = add(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_99 = tail(_parsedindexvalue_nextIndex_T_98, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_100 = eq(parsedindexvalue_calculation_2, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_101 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_102 = and(_parsedindexvalue_nextIndex_T_100, _parsedindexvalue_nextIndex_T_101) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_103 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_104 = tail(_parsedindexvalue_nextIndex_T_103, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_105 = eq(parsedindexvalue_calculation_2, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_106 = eq(parsedindexvalue_boolArray_1[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_107 = and(_parsedindexvalue_nextIndex_T_105, _parsedindexvalue_nextIndex_T_106) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_108 = sub(parsedindexvalue_second_stage_1, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_109 = tail(_parsedindexvalue_nextIndex_T_108, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_110 = mux(_parsedindexvalue_nextIndex_T_107, _parsedindexvalue_nextIndex_T_109, parsedindexvalue_second_stage_1) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_111 = mux(_parsedindexvalue_nextIndex_T_102, _parsedindexvalue_nextIndex_T_104, _parsedindexvalue_nextIndex_T_110) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_112 = mux(_parsedindexvalue_nextIndex_T_97, _parsedindexvalue_nextIndex_T_99, _parsedindexvalue_nextIndex_T_111) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_113 = mux(_parsedindexvalue_nextIndex_T_92, _parsedindexvalue_nextIndex_T_94, _parsedindexvalue_nextIndex_T_112) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_114 = mux(_parsedindexvalue_nextIndex_T_89, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_113) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_115 = mux(_parsedindexvalue_nextIndex_T_86, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_114) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_116 = mux(_parsedindexvalue_nextIndex_T_83, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_115) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_2 = mux(_parsedindexvalue_nextIndex_T_80, parsedindexvalue_second_stage_1, _parsedindexvalue_nextIndex_T_116) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_3 = rem(parsedindexvalue_nextIndex_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_117 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_118 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_119 = and(_parsedindexvalue_nextIndex_T_117, _parsedindexvalue_nextIndex_T_118) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_120 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_121 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_122 = and(_parsedindexvalue_nextIndex_T_120, _parsedindexvalue_nextIndex_T_121) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_123 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_124 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_125 = and(_parsedindexvalue_nextIndex_T_123, _parsedindexvalue_nextIndex_T_124) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_126 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_127 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_128 = and(_parsedindexvalue_nextIndex_T_126, _parsedindexvalue_nextIndex_T_127) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_129 = eq(parsedindexvalue_calculation_3, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_130 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_131 = and(_parsedindexvalue_nextIndex_T_129, _parsedindexvalue_nextIndex_T_130) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_132 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_133 = tail(_parsedindexvalue_nextIndex_T_132, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_134 = eq(parsedindexvalue_calculation_3, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_135 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_136 = and(_parsedindexvalue_nextIndex_T_134, _parsedindexvalue_nextIndex_T_135) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_137 = add(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_138 = tail(_parsedindexvalue_nextIndex_T_137, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_139 = eq(parsedindexvalue_calculation_3, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_140 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_141 = and(_parsedindexvalue_nextIndex_T_139, _parsedindexvalue_nextIndex_T_140) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_142 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_143 = tail(_parsedindexvalue_nextIndex_T_142, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_144 = eq(parsedindexvalue_calculation_3, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_145 = eq(parsedindexvalue_boolArray_1[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_146 = and(_parsedindexvalue_nextIndex_T_144, _parsedindexvalue_nextIndex_T_145) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_147 = sub(parsedindexvalue_nextIndex_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_148 = tail(_parsedindexvalue_nextIndex_T_147, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_149 = mux(_parsedindexvalue_nextIndex_T_146, _parsedindexvalue_nextIndex_T_148, parsedindexvalue_nextIndex_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_150 = mux(_parsedindexvalue_nextIndex_T_141, _parsedindexvalue_nextIndex_T_143, _parsedindexvalue_nextIndex_T_149) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_151 = mux(_parsedindexvalue_nextIndex_T_136, _parsedindexvalue_nextIndex_T_138, _parsedindexvalue_nextIndex_T_150) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_152 = mux(_parsedindexvalue_nextIndex_T_131, _parsedindexvalue_nextIndex_T_133, _parsedindexvalue_nextIndex_T_151) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_153 = mux(_parsedindexvalue_nextIndex_T_128, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_152) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_154 = mux(_parsedindexvalue_nextIndex_T_125, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_153) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_155 = mux(_parsedindexvalue_nextIndex_T_122, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_154) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_3 = mux(_parsedindexvalue_nextIndex_T_119, parsedindexvalue_nextIndex_2, _parsedindexvalue_nextIndex_T_155) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_8 = bits(io.i_mux_bus[1], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_9 = rem(parsedindexvalue_nextIndex_3, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_10 = eq(_parsedindexvalue_third_stage_T_9, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_11 = add(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_12 = tail(_parsedindexvalue_third_stage_T_11, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_13 = sub(parsedindexvalue_nextIndex_3, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_14 = tail(_parsedindexvalue_third_stage_T_13, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_15 = mux(_parsedindexvalue_third_stage_T_10, _parsedindexvalue_third_stage_T_12, _parsedindexvalue_third_stage_T_14) @[Benes.scala 48:47]
          node parsedindexvalue_1 = mux(_parsedindexvalue_third_stage_T_8, _parsedindexvalue_third_stage_T_15, parsedindexvalue_nextIndex_3) @[Benes.scala 48:24]
          node _T_5 = or(parsedindexvalue_1, UInt<3>("h0"))
          node _T_6 = bits(_T_5, 2, 0)
          parse_array[_T_6] <= io.i_data_bus2[1] @[Benes.scala 67:47]
      else :
        node _T_7 = eq(io.i_data_bus2[1], io.i_data_bus2[0]) @[Benes.scala 72:35]
        when _T_7 : @[Benes.scala 72:60]
          parse_array[1] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[1] <= io.i_data_bus2[1] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_8 = neq(io.i_data_bus2[2], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_8 : @[Benes.scala 56:39]
      node _T_9 = orr(io.i_mux_bus[2]) @[Benes.scala 58:31]
      when _T_9 : @[Benes.scala 58:35]
        node _T_10 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 60:36]
        when _T_10 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_4 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_5 = tail(_parsedindexvalue_T_4, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_16 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_17 = rem(_parsedindexvalue_T_5, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_18 = eq(_parsedindexvalue_first_stage_T_17, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_19 = add(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_20 = tail(_parsedindexvalue_first_stage_T_19, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_21 = sub(_parsedindexvalue_T_5, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_22 = tail(_parsedindexvalue_first_stage_T_21, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_23 = mux(_parsedindexvalue_first_stage_T_18, _parsedindexvalue_first_stage_T_20, _parsedindexvalue_first_stage_T_22) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_2 = mux(_parsedindexvalue_first_stage_T_16, _parsedindexvalue_first_stage_T_23, _parsedindexvalue_T_5) @[Benes.scala 24:26]
          node _parsedindexvalue_T_6 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_8 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_9 = bits(_parsedindexvalue_boolArray_T_8, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_10 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_11 = bits(_parsedindexvalue_boolArray_T_10, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_2 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[0] <= _parsedindexvalue_boolArray_T_9 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_2[1] <= _parsedindexvalue_boolArray_T_11 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_2 : UInt
          parsedindexvalue_second_stage_2 <= parsedindexvalue_first_stage_2
          node parsedindexvalue_calculation_4 = rem(parsedindexvalue_second_stage_2, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_156 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_157 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_158 = and(_parsedindexvalue_nextIndex_T_156, _parsedindexvalue_nextIndex_T_157) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_159 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_160 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_161 = and(_parsedindexvalue_nextIndex_T_159, _parsedindexvalue_nextIndex_T_160) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_162 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_163 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_164 = and(_parsedindexvalue_nextIndex_T_162, _parsedindexvalue_nextIndex_T_163) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_165 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_166 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_167 = and(_parsedindexvalue_nextIndex_T_165, _parsedindexvalue_nextIndex_T_166) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_168 = eq(parsedindexvalue_calculation_4, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_169 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_170 = and(_parsedindexvalue_nextIndex_T_168, _parsedindexvalue_nextIndex_T_169) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_171 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_172 = tail(_parsedindexvalue_nextIndex_T_171, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_173 = eq(parsedindexvalue_calculation_4, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_174 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_175 = and(_parsedindexvalue_nextIndex_T_173, _parsedindexvalue_nextIndex_T_174) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_176 = add(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_177 = tail(_parsedindexvalue_nextIndex_T_176, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_178 = eq(parsedindexvalue_calculation_4, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_179 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_180 = and(_parsedindexvalue_nextIndex_T_178, _parsedindexvalue_nextIndex_T_179) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_181 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_182 = tail(_parsedindexvalue_nextIndex_T_181, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_183 = eq(parsedindexvalue_calculation_4, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_184 = eq(parsedindexvalue_boolArray_2[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_185 = and(_parsedindexvalue_nextIndex_T_183, _parsedindexvalue_nextIndex_T_184) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_186 = sub(parsedindexvalue_second_stage_2, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_187 = tail(_parsedindexvalue_nextIndex_T_186, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_188 = mux(_parsedindexvalue_nextIndex_T_185, _parsedindexvalue_nextIndex_T_187, parsedindexvalue_second_stage_2) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_189 = mux(_parsedindexvalue_nextIndex_T_180, _parsedindexvalue_nextIndex_T_182, _parsedindexvalue_nextIndex_T_188) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_190 = mux(_parsedindexvalue_nextIndex_T_175, _parsedindexvalue_nextIndex_T_177, _parsedindexvalue_nextIndex_T_189) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_191 = mux(_parsedindexvalue_nextIndex_T_170, _parsedindexvalue_nextIndex_T_172, _parsedindexvalue_nextIndex_T_190) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_192 = mux(_parsedindexvalue_nextIndex_T_167, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_191) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_193 = mux(_parsedindexvalue_nextIndex_T_164, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_192) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_194 = mux(_parsedindexvalue_nextIndex_T_161, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_193) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_4 = mux(_parsedindexvalue_nextIndex_T_158, parsedindexvalue_second_stage_2, _parsedindexvalue_nextIndex_T_194) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_5 = rem(parsedindexvalue_nextIndex_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_195 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_196 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_197 = and(_parsedindexvalue_nextIndex_T_195, _parsedindexvalue_nextIndex_T_196) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_198 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_199 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_200 = and(_parsedindexvalue_nextIndex_T_198, _parsedindexvalue_nextIndex_T_199) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_201 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_202 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_203 = and(_parsedindexvalue_nextIndex_T_201, _parsedindexvalue_nextIndex_T_202) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_204 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_205 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_206 = and(_parsedindexvalue_nextIndex_T_204, _parsedindexvalue_nextIndex_T_205) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_207 = eq(parsedindexvalue_calculation_5, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_208 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_209 = and(_parsedindexvalue_nextIndex_T_207, _parsedindexvalue_nextIndex_T_208) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_210 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_211 = tail(_parsedindexvalue_nextIndex_T_210, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_212 = eq(parsedindexvalue_calculation_5, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_213 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_214 = and(_parsedindexvalue_nextIndex_T_212, _parsedindexvalue_nextIndex_T_213) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_215 = add(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_216 = tail(_parsedindexvalue_nextIndex_T_215, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_217 = eq(parsedindexvalue_calculation_5, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_218 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_219 = and(_parsedindexvalue_nextIndex_T_217, _parsedindexvalue_nextIndex_T_218) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_220 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_221 = tail(_parsedindexvalue_nextIndex_T_220, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_222 = eq(parsedindexvalue_calculation_5, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_223 = eq(parsedindexvalue_boolArray_2[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_224 = and(_parsedindexvalue_nextIndex_T_222, _parsedindexvalue_nextIndex_T_223) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_225 = sub(parsedindexvalue_nextIndex_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_226 = tail(_parsedindexvalue_nextIndex_T_225, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_227 = mux(_parsedindexvalue_nextIndex_T_224, _parsedindexvalue_nextIndex_T_226, parsedindexvalue_nextIndex_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_228 = mux(_parsedindexvalue_nextIndex_T_219, _parsedindexvalue_nextIndex_T_221, _parsedindexvalue_nextIndex_T_227) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_229 = mux(_parsedindexvalue_nextIndex_T_214, _parsedindexvalue_nextIndex_T_216, _parsedindexvalue_nextIndex_T_228) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_230 = mux(_parsedindexvalue_nextIndex_T_209, _parsedindexvalue_nextIndex_T_211, _parsedindexvalue_nextIndex_T_229) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_231 = mux(_parsedindexvalue_nextIndex_T_206, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_230) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_232 = mux(_parsedindexvalue_nextIndex_T_203, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_231) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_233 = mux(_parsedindexvalue_nextIndex_T_200, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_232) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_5 = mux(_parsedindexvalue_nextIndex_T_197, parsedindexvalue_nextIndex_4, _parsedindexvalue_nextIndex_T_233) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_16 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_17 = rem(parsedindexvalue_nextIndex_5, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_18 = eq(_parsedindexvalue_third_stage_T_17, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_19 = add(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_20 = tail(_parsedindexvalue_third_stage_T_19, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_21 = sub(parsedindexvalue_nextIndex_5, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_22 = tail(_parsedindexvalue_third_stage_T_21, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_23 = mux(_parsedindexvalue_third_stage_T_18, _parsedindexvalue_third_stage_T_20, _parsedindexvalue_third_stage_T_22) @[Benes.scala 48:47]
          node parsedindexvalue_2 = mux(_parsedindexvalue_third_stage_T_16, _parsedindexvalue_third_stage_T_23, parsedindexvalue_nextIndex_5) @[Benes.scala 48:24]
          node _T_11 = or(parsedindexvalue_2, UInt<3>("h0"))
          node _T_12 = bits(_T_11, 2, 0)
          parse_array[_T_12] <= io.i_data_bus2[2] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_24 = bits(io.i_mux_bus[2], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_25 = rem(UInt<2>("h2"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_26 = eq(_parsedindexvalue_first_stage_T_25, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_27 = add(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_28 = tail(_parsedindexvalue_first_stage_T_27, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_29 = sub(UInt<2>("h2"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_30 = tail(_parsedindexvalue_first_stage_T_29, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_31 = mux(_parsedindexvalue_first_stage_T_26, _parsedindexvalue_first_stage_T_28, _parsedindexvalue_first_stage_T_30) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_3 = mux(_parsedindexvalue_first_stage_T_24, _parsedindexvalue_first_stage_T_31, UInt<2>("h2")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_7 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_12 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_13 = bits(_parsedindexvalue_boolArray_T_12, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_14 = bits(io.i_mux_bus[2], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_15 = bits(_parsedindexvalue_boolArray_T_14, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_3 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[0] <= _parsedindexvalue_boolArray_T_13 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_3[1] <= _parsedindexvalue_boolArray_T_15 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_3 : UInt
          parsedindexvalue_second_stage_3 <= parsedindexvalue_first_stage_3
          node parsedindexvalue_calculation_6 = rem(parsedindexvalue_second_stage_3, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_234 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_235 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_236 = and(_parsedindexvalue_nextIndex_T_234, _parsedindexvalue_nextIndex_T_235) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_237 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_238 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_239 = and(_parsedindexvalue_nextIndex_T_237, _parsedindexvalue_nextIndex_T_238) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_240 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_241 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_242 = and(_parsedindexvalue_nextIndex_T_240, _parsedindexvalue_nextIndex_T_241) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_243 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_244 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_245 = and(_parsedindexvalue_nextIndex_T_243, _parsedindexvalue_nextIndex_T_244) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_246 = eq(parsedindexvalue_calculation_6, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_247 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_248 = and(_parsedindexvalue_nextIndex_T_246, _parsedindexvalue_nextIndex_T_247) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_249 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_250 = tail(_parsedindexvalue_nextIndex_T_249, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_251 = eq(parsedindexvalue_calculation_6, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_252 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_253 = and(_parsedindexvalue_nextIndex_T_251, _parsedindexvalue_nextIndex_T_252) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_254 = add(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_255 = tail(_parsedindexvalue_nextIndex_T_254, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_256 = eq(parsedindexvalue_calculation_6, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_257 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_258 = and(_parsedindexvalue_nextIndex_T_256, _parsedindexvalue_nextIndex_T_257) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_259 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_260 = tail(_parsedindexvalue_nextIndex_T_259, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_261 = eq(parsedindexvalue_calculation_6, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_262 = eq(parsedindexvalue_boolArray_3[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_263 = and(_parsedindexvalue_nextIndex_T_261, _parsedindexvalue_nextIndex_T_262) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_264 = sub(parsedindexvalue_second_stage_3, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_265 = tail(_parsedindexvalue_nextIndex_T_264, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_266 = mux(_parsedindexvalue_nextIndex_T_263, _parsedindexvalue_nextIndex_T_265, parsedindexvalue_second_stage_3) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_267 = mux(_parsedindexvalue_nextIndex_T_258, _parsedindexvalue_nextIndex_T_260, _parsedindexvalue_nextIndex_T_266) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_268 = mux(_parsedindexvalue_nextIndex_T_253, _parsedindexvalue_nextIndex_T_255, _parsedindexvalue_nextIndex_T_267) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_269 = mux(_parsedindexvalue_nextIndex_T_248, _parsedindexvalue_nextIndex_T_250, _parsedindexvalue_nextIndex_T_268) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_270 = mux(_parsedindexvalue_nextIndex_T_245, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_269) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_271 = mux(_parsedindexvalue_nextIndex_T_242, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_270) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_272 = mux(_parsedindexvalue_nextIndex_T_239, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_271) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_6 = mux(_parsedindexvalue_nextIndex_T_236, parsedindexvalue_second_stage_3, _parsedindexvalue_nextIndex_T_272) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_7 = rem(parsedindexvalue_nextIndex_6, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_273 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_274 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_275 = and(_parsedindexvalue_nextIndex_T_273, _parsedindexvalue_nextIndex_T_274) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_276 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_277 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_278 = and(_parsedindexvalue_nextIndex_T_276, _parsedindexvalue_nextIndex_T_277) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_279 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_280 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_281 = and(_parsedindexvalue_nextIndex_T_279, _parsedindexvalue_nextIndex_T_280) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_282 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_283 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_284 = and(_parsedindexvalue_nextIndex_T_282, _parsedindexvalue_nextIndex_T_283) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_285 = eq(parsedindexvalue_calculation_7, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_286 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_287 = and(_parsedindexvalue_nextIndex_T_285, _parsedindexvalue_nextIndex_T_286) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_288 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_289 = tail(_parsedindexvalue_nextIndex_T_288, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_290 = eq(parsedindexvalue_calculation_7, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_291 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_292 = and(_parsedindexvalue_nextIndex_T_290, _parsedindexvalue_nextIndex_T_291) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_293 = add(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_294 = tail(_parsedindexvalue_nextIndex_T_293, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_295 = eq(parsedindexvalue_calculation_7, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_296 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_297 = and(_parsedindexvalue_nextIndex_T_295, _parsedindexvalue_nextIndex_T_296) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_298 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_299 = tail(_parsedindexvalue_nextIndex_T_298, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_300 = eq(parsedindexvalue_calculation_7, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_301 = eq(parsedindexvalue_boolArray_3[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_302 = and(_parsedindexvalue_nextIndex_T_300, _parsedindexvalue_nextIndex_T_301) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_303 = sub(parsedindexvalue_nextIndex_6, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_304 = tail(_parsedindexvalue_nextIndex_T_303, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_305 = mux(_parsedindexvalue_nextIndex_T_302, _parsedindexvalue_nextIndex_T_304, parsedindexvalue_nextIndex_6) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_306 = mux(_parsedindexvalue_nextIndex_T_297, _parsedindexvalue_nextIndex_T_299, _parsedindexvalue_nextIndex_T_305) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_307 = mux(_parsedindexvalue_nextIndex_T_292, _parsedindexvalue_nextIndex_T_294, _parsedindexvalue_nextIndex_T_306) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_308 = mux(_parsedindexvalue_nextIndex_T_287, _parsedindexvalue_nextIndex_T_289, _parsedindexvalue_nextIndex_T_307) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_309 = mux(_parsedindexvalue_nextIndex_T_284, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_308) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_310 = mux(_parsedindexvalue_nextIndex_T_281, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_309) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_311 = mux(_parsedindexvalue_nextIndex_T_278, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_310) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_7 = mux(_parsedindexvalue_nextIndex_T_275, parsedindexvalue_nextIndex_6, _parsedindexvalue_nextIndex_T_311) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_24 = bits(io.i_mux_bus[2], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_25 = rem(parsedindexvalue_nextIndex_7, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_26 = eq(_parsedindexvalue_third_stage_T_25, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_27 = add(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_28 = tail(_parsedindexvalue_third_stage_T_27, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_29 = sub(parsedindexvalue_nextIndex_7, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_30 = tail(_parsedindexvalue_third_stage_T_29, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_31 = mux(_parsedindexvalue_third_stage_T_26, _parsedindexvalue_third_stage_T_28, _parsedindexvalue_third_stage_T_30) @[Benes.scala 48:47]
          node parsedindexvalue_3 = mux(_parsedindexvalue_third_stage_T_24, _parsedindexvalue_third_stage_T_31, parsedindexvalue_nextIndex_7) @[Benes.scala 48:24]
          node _T_13 = or(parsedindexvalue_3, UInt<3>("h0"))
          node _T_14 = bits(_T_13, 2, 0)
          parse_array[_T_14] <= io.i_data_bus2[2] @[Benes.scala 67:47]
      else :
        node _T_15 = eq(io.i_data_bus2[2], io.i_data_bus2[1]) @[Benes.scala 72:35]
        when _T_15 : @[Benes.scala 72:60]
          parse_array[2] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[2] <= io.i_data_bus2[2] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_16 = neq(io.i_data_bus2[3], UInt<1>("h0")) @[Benes.scala 56:30]
    when _T_16 : @[Benes.scala 56:39]
      node _T_17 = orr(io.i_mux_bus[3]) @[Benes.scala 58:31]
      when _T_17 : @[Benes.scala 58:35]
        node _T_18 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 60:36]
        when _T_18 : @[Benes.scala 60:61]
          node _parsedindexvalue_T_8 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 62:97]
          node _parsedindexvalue_T_9 = tail(_parsedindexvalue_T_8, 1) @[Benes.scala 62:97]
          node _parsedindexvalue_first_stage_T_32 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_33 = rem(_parsedindexvalue_T_9, UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_34 = eq(_parsedindexvalue_first_stage_T_33, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_35 = add(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_36 = tail(_parsedindexvalue_first_stage_T_35, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_37 = sub(_parsedindexvalue_T_9, UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_38 = tail(_parsedindexvalue_first_stage_T_37, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_39 = mux(_parsedindexvalue_first_stage_T_34, _parsedindexvalue_first_stage_T_36, _parsedindexvalue_first_stage_T_38) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_4 = mux(_parsedindexvalue_first_stage_T_32, _parsedindexvalue_first_stage_T_39, _parsedindexvalue_T_9) @[Benes.scala 24:26]
          node _parsedindexvalue_T_10 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_16 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_17 = bits(_parsedindexvalue_boolArray_T_16, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_18 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_19 = bits(_parsedindexvalue_boolArray_T_18, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_4 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[0] <= _parsedindexvalue_boolArray_T_17 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_4[1] <= _parsedindexvalue_boolArray_T_19 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_4 : UInt
          parsedindexvalue_second_stage_4 <= parsedindexvalue_first_stage_4
          node parsedindexvalue_calculation_8 = rem(parsedindexvalue_second_stage_4, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_312 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_313 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_314 = and(_parsedindexvalue_nextIndex_T_312, _parsedindexvalue_nextIndex_T_313) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_315 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_316 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_317 = and(_parsedindexvalue_nextIndex_T_315, _parsedindexvalue_nextIndex_T_316) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_318 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_319 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_320 = and(_parsedindexvalue_nextIndex_T_318, _parsedindexvalue_nextIndex_T_319) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_321 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_322 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_323 = and(_parsedindexvalue_nextIndex_T_321, _parsedindexvalue_nextIndex_T_322) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_324 = eq(parsedindexvalue_calculation_8, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_325 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_326 = and(_parsedindexvalue_nextIndex_T_324, _parsedindexvalue_nextIndex_T_325) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_327 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_328 = tail(_parsedindexvalue_nextIndex_T_327, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_329 = eq(parsedindexvalue_calculation_8, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_330 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_331 = and(_parsedindexvalue_nextIndex_T_329, _parsedindexvalue_nextIndex_T_330) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_332 = add(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_333 = tail(_parsedindexvalue_nextIndex_T_332, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_334 = eq(parsedindexvalue_calculation_8, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_335 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_336 = and(_parsedindexvalue_nextIndex_T_334, _parsedindexvalue_nextIndex_T_335) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_337 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_338 = tail(_parsedindexvalue_nextIndex_T_337, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_339 = eq(parsedindexvalue_calculation_8, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_340 = eq(parsedindexvalue_boolArray_4[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_341 = and(_parsedindexvalue_nextIndex_T_339, _parsedindexvalue_nextIndex_T_340) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_342 = sub(parsedindexvalue_second_stage_4, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_343 = tail(_parsedindexvalue_nextIndex_T_342, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_344 = mux(_parsedindexvalue_nextIndex_T_341, _parsedindexvalue_nextIndex_T_343, parsedindexvalue_second_stage_4) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_345 = mux(_parsedindexvalue_nextIndex_T_336, _parsedindexvalue_nextIndex_T_338, _parsedindexvalue_nextIndex_T_344) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_346 = mux(_parsedindexvalue_nextIndex_T_331, _parsedindexvalue_nextIndex_T_333, _parsedindexvalue_nextIndex_T_345) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_347 = mux(_parsedindexvalue_nextIndex_T_326, _parsedindexvalue_nextIndex_T_328, _parsedindexvalue_nextIndex_T_346) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_348 = mux(_parsedindexvalue_nextIndex_T_323, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_347) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_349 = mux(_parsedindexvalue_nextIndex_T_320, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_348) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_350 = mux(_parsedindexvalue_nextIndex_T_317, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_349) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_8 = mux(_parsedindexvalue_nextIndex_T_314, parsedindexvalue_second_stage_4, _parsedindexvalue_nextIndex_T_350) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_9 = rem(parsedindexvalue_nextIndex_8, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_351 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_352 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_353 = and(_parsedindexvalue_nextIndex_T_351, _parsedindexvalue_nextIndex_T_352) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_354 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_355 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_356 = and(_parsedindexvalue_nextIndex_T_354, _parsedindexvalue_nextIndex_T_355) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_357 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_358 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_359 = and(_parsedindexvalue_nextIndex_T_357, _parsedindexvalue_nextIndex_T_358) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_360 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_361 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_362 = and(_parsedindexvalue_nextIndex_T_360, _parsedindexvalue_nextIndex_T_361) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_363 = eq(parsedindexvalue_calculation_9, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_364 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_365 = and(_parsedindexvalue_nextIndex_T_363, _parsedindexvalue_nextIndex_T_364) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_366 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_367 = tail(_parsedindexvalue_nextIndex_T_366, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_368 = eq(parsedindexvalue_calculation_9, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_369 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_370 = and(_parsedindexvalue_nextIndex_T_368, _parsedindexvalue_nextIndex_T_369) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_371 = add(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_372 = tail(_parsedindexvalue_nextIndex_T_371, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_373 = eq(parsedindexvalue_calculation_9, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_374 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_375 = and(_parsedindexvalue_nextIndex_T_373, _parsedindexvalue_nextIndex_T_374) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_376 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_377 = tail(_parsedindexvalue_nextIndex_T_376, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_378 = eq(parsedindexvalue_calculation_9, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_379 = eq(parsedindexvalue_boolArray_4[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_380 = and(_parsedindexvalue_nextIndex_T_378, _parsedindexvalue_nextIndex_T_379) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_381 = sub(parsedindexvalue_nextIndex_8, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_382 = tail(_parsedindexvalue_nextIndex_T_381, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_383 = mux(_parsedindexvalue_nextIndex_T_380, _parsedindexvalue_nextIndex_T_382, parsedindexvalue_nextIndex_8) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_384 = mux(_parsedindexvalue_nextIndex_T_375, _parsedindexvalue_nextIndex_T_377, _parsedindexvalue_nextIndex_T_383) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_385 = mux(_parsedindexvalue_nextIndex_T_370, _parsedindexvalue_nextIndex_T_372, _parsedindexvalue_nextIndex_T_384) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_386 = mux(_parsedindexvalue_nextIndex_T_365, _parsedindexvalue_nextIndex_T_367, _parsedindexvalue_nextIndex_T_385) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_387 = mux(_parsedindexvalue_nextIndex_T_362, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_386) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_388 = mux(_parsedindexvalue_nextIndex_T_359, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_387) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_389 = mux(_parsedindexvalue_nextIndex_T_356, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_388) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_9 = mux(_parsedindexvalue_nextIndex_T_353, parsedindexvalue_nextIndex_8, _parsedindexvalue_nextIndex_T_389) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_32 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_33 = rem(parsedindexvalue_nextIndex_9, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_34 = eq(_parsedindexvalue_third_stage_T_33, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_35 = add(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_36 = tail(_parsedindexvalue_third_stage_T_35, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_37 = sub(parsedindexvalue_nextIndex_9, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_38 = tail(_parsedindexvalue_third_stage_T_37, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_39 = mux(_parsedindexvalue_third_stage_T_34, _parsedindexvalue_third_stage_T_36, _parsedindexvalue_third_stage_T_38) @[Benes.scala 48:47]
          node parsedindexvalue_4 = mux(_parsedindexvalue_third_stage_T_32, _parsedindexvalue_third_stage_T_39, parsedindexvalue_nextIndex_9) @[Benes.scala 48:24]
          node _T_19 = or(parsedindexvalue_4, UInt<3>("h0"))
          node _T_20 = bits(_T_19, 2, 0)
          parse_array[_T_20] <= io.i_data_bus2[3] @[Benes.scala 63:47]
        else :
          node _parsedindexvalue_first_stage_T_40 = bits(io.i_mux_bus[3], 0, 0) @[Benes.scala 24:32]
          node _parsedindexvalue_first_stage_T_41 = rem(UInt<2>("h3"), UInt<2>("h2")) @[Benes.scala 24:52]
          node _parsedindexvalue_first_stage_T_42 = eq(_parsedindexvalue_first_stage_T_41, UInt<1>("h0")) @[Benes.scala 24:58]
          node _parsedindexvalue_first_stage_T_43 = add(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_44 = tail(_parsedindexvalue_first_stage_T_43, 1) @[Benes.scala 24:78]
          node _parsedindexvalue_first_stage_T_45 = sub(UInt<2>("h3"), UInt<1>("h1")) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_46 = tail(_parsedindexvalue_first_stage_T_45, 1) @[Benes.scala 24:96]
          node _parsedindexvalue_first_stage_T_47 = mux(_parsedindexvalue_first_stage_T_42, _parsedindexvalue_first_stage_T_44, _parsedindexvalue_first_stage_T_46) @[Benes.scala 24:40]
          node parsedindexvalue_first_stage_5 = mux(_parsedindexvalue_first_stage_T_40, _parsedindexvalue_first_stage_T_47, UInt<2>("h3")) @[Benes.scala 24:26]
          node _parsedindexvalue_T_11 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 27:31]
          node _parsedindexvalue_boolArray_T_20 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_21 = bits(_parsedindexvalue_boolArray_T_20, 0, 0) @[Benes.scala 28:92]
          node _parsedindexvalue_boolArray_T_22 = bits(io.i_mux_bus[3], 2, 1) @[Benes.scala 28:69]
          node _parsedindexvalue_boolArray_T_23 = bits(_parsedindexvalue_boolArray_T_22, 1, 1) @[Benes.scala 28:92]
          wire parsedindexvalue_boolArray_5 : UInt<1>[2] @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[0] <= _parsedindexvalue_boolArray_T_21 @[Benes.scala 28:28]
          parsedindexvalue_boolArray_5[1] <= _parsedindexvalue_boolArray_T_23 @[Benes.scala 28:28]
          wire parsedindexvalue_second_stage_5 : UInt
          parsedindexvalue_second_stage_5 <= parsedindexvalue_first_stage_5
          node parsedindexvalue_calculation_10 = rem(parsedindexvalue_second_stage_5, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_390 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_391 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_392 = and(_parsedindexvalue_nextIndex_T_390, _parsedindexvalue_nextIndex_T_391) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_393 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_394 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_395 = and(_parsedindexvalue_nextIndex_T_393, _parsedindexvalue_nextIndex_T_394) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_396 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_397 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_398 = and(_parsedindexvalue_nextIndex_T_396, _parsedindexvalue_nextIndex_T_397) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_399 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_400 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_401 = and(_parsedindexvalue_nextIndex_T_399, _parsedindexvalue_nextIndex_T_400) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_402 = eq(parsedindexvalue_calculation_10, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_403 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_404 = and(_parsedindexvalue_nextIndex_T_402, _parsedindexvalue_nextIndex_T_403) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_405 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_406 = tail(_parsedindexvalue_nextIndex_T_405, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_407 = eq(parsedindexvalue_calculation_10, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_408 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_409 = and(_parsedindexvalue_nextIndex_T_407, _parsedindexvalue_nextIndex_T_408) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_410 = add(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_411 = tail(_parsedindexvalue_nextIndex_T_410, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_412 = eq(parsedindexvalue_calculation_10, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_413 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_414 = and(_parsedindexvalue_nextIndex_T_412, _parsedindexvalue_nextIndex_T_413) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_415 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_416 = tail(_parsedindexvalue_nextIndex_T_415, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_417 = eq(parsedindexvalue_calculation_10, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_418 = eq(parsedindexvalue_boolArray_5[0], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_419 = and(_parsedindexvalue_nextIndex_T_417, _parsedindexvalue_nextIndex_T_418) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_420 = sub(parsedindexvalue_second_stage_5, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_421 = tail(_parsedindexvalue_nextIndex_T_420, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_422 = mux(_parsedindexvalue_nextIndex_T_419, _parsedindexvalue_nextIndex_T_421, parsedindexvalue_second_stage_5) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_423 = mux(_parsedindexvalue_nextIndex_T_414, _parsedindexvalue_nextIndex_T_416, _parsedindexvalue_nextIndex_T_422) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_424 = mux(_parsedindexvalue_nextIndex_T_409, _parsedindexvalue_nextIndex_T_411, _parsedindexvalue_nextIndex_T_423) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_425 = mux(_parsedindexvalue_nextIndex_T_404, _parsedindexvalue_nextIndex_T_406, _parsedindexvalue_nextIndex_T_424) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_426 = mux(_parsedindexvalue_nextIndex_T_401, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_425) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_427 = mux(_parsedindexvalue_nextIndex_T_398, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_426) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_428 = mux(_parsedindexvalue_nextIndex_T_395, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_427) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_10 = mux(_parsedindexvalue_nextIndex_T_392, parsedindexvalue_second_stage_5, _parsedindexvalue_nextIndex_T_428) @[Mux.scala 101:16]
          node parsedindexvalue_calculation_11 = rem(parsedindexvalue_nextIndex_10, UInt<3>("h4")) @[Benes.scala 33:40]
          node _parsedindexvalue_nextIndex_T_429 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 35:27]
          node _parsedindexvalue_nextIndex_T_430 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 35:53]
          node _parsedindexvalue_nextIndex_T_431 = and(_parsedindexvalue_nextIndex_T_429, _parsedindexvalue_nextIndex_T_430) @[Benes.scala 35:36]
          node _parsedindexvalue_nextIndex_T_432 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 36:27]
          node _parsedindexvalue_nextIndex_T_433 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 36:53]
          node _parsedindexvalue_nextIndex_T_434 = and(_parsedindexvalue_nextIndex_T_432, _parsedindexvalue_nextIndex_T_433) @[Benes.scala 36:36]
          node _parsedindexvalue_nextIndex_T_435 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 37:27]
          node _parsedindexvalue_nextIndex_T_436 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 37:53]
          node _parsedindexvalue_nextIndex_T_437 = and(_parsedindexvalue_nextIndex_T_435, _parsedindexvalue_nextIndex_T_436) @[Benes.scala 37:36]
          node _parsedindexvalue_nextIndex_T_438 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 38:27]
          node _parsedindexvalue_nextIndex_T_439 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h0")) @[Benes.scala 38:53]
          node _parsedindexvalue_nextIndex_T_440 = and(_parsedindexvalue_nextIndex_T_438, _parsedindexvalue_nextIndex_T_439) @[Benes.scala 38:36]
          node _parsedindexvalue_nextIndex_T_441 = eq(parsedindexvalue_calculation_11, UInt<1>("h0")) @[Benes.scala 39:27]
          node _parsedindexvalue_nextIndex_T_442 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 39:53]
          node _parsedindexvalue_nextIndex_T_443 = and(_parsedindexvalue_nextIndex_T_441, _parsedindexvalue_nextIndex_T_442) @[Benes.scala 39:36]
          node _parsedindexvalue_nextIndex_T_444 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_445 = tail(_parsedindexvalue_nextIndex_T_444, 1) @[Benes.scala 39:76]
          node _parsedindexvalue_nextIndex_T_446 = eq(parsedindexvalue_calculation_11, UInt<1>("h1")) @[Benes.scala 40:27]
          node _parsedindexvalue_nextIndex_T_447 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 40:53]
          node _parsedindexvalue_nextIndex_T_448 = and(_parsedindexvalue_nextIndex_T_446, _parsedindexvalue_nextIndex_T_447) @[Benes.scala 40:36]
          node _parsedindexvalue_nextIndex_T_449 = add(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_450 = tail(_parsedindexvalue_nextIndex_T_449, 1) @[Benes.scala 40:76]
          node _parsedindexvalue_nextIndex_T_451 = eq(parsedindexvalue_calculation_11, UInt<2>("h2")) @[Benes.scala 41:27]
          node _parsedindexvalue_nextIndex_T_452 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 41:53]
          node _parsedindexvalue_nextIndex_T_453 = and(_parsedindexvalue_nextIndex_T_451, _parsedindexvalue_nextIndex_T_452) @[Benes.scala 41:36]
          node _parsedindexvalue_nextIndex_T_454 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_455 = tail(_parsedindexvalue_nextIndex_T_454, 1) @[Benes.scala 41:76]
          node _parsedindexvalue_nextIndex_T_456 = eq(parsedindexvalue_calculation_11, UInt<2>("h3")) @[Benes.scala 42:27]
          node _parsedindexvalue_nextIndex_T_457 = eq(parsedindexvalue_boolArray_5[1], UInt<1>("h1")) @[Benes.scala 42:53]
          node _parsedindexvalue_nextIndex_T_458 = and(_parsedindexvalue_nextIndex_T_456, _parsedindexvalue_nextIndex_T_457) @[Benes.scala 42:36]
          node _parsedindexvalue_nextIndex_T_459 = sub(parsedindexvalue_nextIndex_10, UInt<2>("h2")) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_460 = tail(_parsedindexvalue_nextIndex_T_459, 1) @[Benes.scala 42:76]
          node _parsedindexvalue_nextIndex_T_461 = mux(_parsedindexvalue_nextIndex_T_458, _parsedindexvalue_nextIndex_T_460, parsedindexvalue_nextIndex_10) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_462 = mux(_parsedindexvalue_nextIndex_T_453, _parsedindexvalue_nextIndex_T_455, _parsedindexvalue_nextIndex_T_461) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_463 = mux(_parsedindexvalue_nextIndex_T_448, _parsedindexvalue_nextIndex_T_450, _parsedindexvalue_nextIndex_T_462) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_464 = mux(_parsedindexvalue_nextIndex_T_443, _parsedindexvalue_nextIndex_T_445, _parsedindexvalue_nextIndex_T_463) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_465 = mux(_parsedindexvalue_nextIndex_T_440, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_464) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_466 = mux(_parsedindexvalue_nextIndex_T_437, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_465) @[Mux.scala 101:16]
          node _parsedindexvalue_nextIndex_T_467 = mux(_parsedindexvalue_nextIndex_T_434, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_466) @[Mux.scala 101:16]
          node parsedindexvalue_nextIndex_11 = mux(_parsedindexvalue_nextIndex_T_431, parsedindexvalue_nextIndex_10, _parsedindexvalue_nextIndex_T_467) @[Mux.scala 101:16]
          node _parsedindexvalue_third_stage_T_40 = bits(io.i_mux_bus[3], 3, 3) @[Benes.scala 48:30]
          node _parsedindexvalue_third_stage_T_41 = rem(parsedindexvalue_nextIndex_11, UInt<2>("h2")) @[Benes.scala 48:61]
          node _parsedindexvalue_third_stage_T_42 = eq(_parsedindexvalue_third_stage_T_41, UInt<1>("h0")) @[Benes.scala 48:67]
          node _parsedindexvalue_third_stage_T_43 = add(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_44 = tail(_parsedindexvalue_third_stage_T_43, 1) @[Benes.scala 48:89]
          node _parsedindexvalue_third_stage_T_45 = sub(parsedindexvalue_nextIndex_11, UInt<1>("h1")) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_46 = tail(_parsedindexvalue_third_stage_T_45, 1) @[Benes.scala 48:109]
          node _parsedindexvalue_third_stage_T_47 = mux(_parsedindexvalue_third_stage_T_42, _parsedindexvalue_third_stage_T_44, _parsedindexvalue_third_stage_T_46) @[Benes.scala 48:47]
          node parsedindexvalue_5 = mux(_parsedindexvalue_third_stage_T_40, _parsedindexvalue_third_stage_T_47, parsedindexvalue_nextIndex_11) @[Benes.scala 48:24]
          node _T_21 = or(parsedindexvalue_5, UInt<3>("h0"))
          node _T_22 = bits(_T_21, 2, 0)
          parse_array[_T_22] <= io.i_data_bus2[3] @[Benes.scala 67:47]
      else :
        node _T_23 = eq(io.i_data_bus2[3], io.i_data_bus2[2]) @[Benes.scala 72:35]
        when _T_23 : @[Benes.scala 72:60]
          parse_array[3] <= UInt<1>("h0") @[Benes.scala 74:28]
        else :
          parse_array[3] <= io.i_data_bus2[3] @[Benes.scala 78:28]
    else :
      parse_array[UInt<3>("h4")] <= UInt<1>("h0") @[Benes.scala 85:40]
    node _T_24 = neq(io.i_data_bus2[0], UInt<1>("h0")) @[Benes.scala 91:27]
    when _T_24 : @[Benes.scala 91:35]
      node _parsedindexvalue_first_stage_T_48 = bits(io.i_mux_bus[0], 0, 0) @[Benes.scala 24:32]
      node _parsedindexvalue_first_stage_T_49 = rem(UInt<1>("h0"), UInt<2>("h2")) @[Benes.scala 24:52]
      node _parsedindexvalue_first_stage_T_50 = eq(_parsedindexvalue_first_stage_T_49, UInt<1>("h0")) @[Benes.scala 24:58]
      node _parsedindexvalue_first_stage_T_51 = add(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_52 = tail(_parsedindexvalue_first_stage_T_51, 1) @[Benes.scala 24:78]
      node _parsedindexvalue_first_stage_T_53 = sub(UInt<1>("h0"), UInt<1>("h1")) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_54 = tail(_parsedindexvalue_first_stage_T_53, 1) @[Benes.scala 24:96]
      node _parsedindexvalue_first_stage_T_55 = mux(_parsedindexvalue_first_stage_T_50, _parsedindexvalue_first_stage_T_52, _parsedindexvalue_first_stage_T_54) @[Benes.scala 24:40]
      node parsedindexvalue_first_stage_6 = mux(_parsedindexvalue_first_stage_T_48, _parsedindexvalue_first_stage_T_55, UInt<1>("h0")) @[Benes.scala 24:26]
      node _parsedindexvalue_T_12 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 27:31]
      node _parsedindexvalue_boolArray_T_24 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_25 = bits(_parsedindexvalue_boolArray_T_24, 0, 0) @[Benes.scala 28:92]
      node _parsedindexvalue_boolArray_T_26 = bits(io.i_mux_bus[0], 2, 1) @[Benes.scala 28:69]
      node _parsedindexvalue_boolArray_T_27 = bits(_parsedindexvalue_boolArray_T_26, 1, 1) @[Benes.scala 28:92]
      wire parsedindexvalue_boolArray_6 : UInt<1>[2] @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[0] <= _parsedindexvalue_boolArray_T_25 @[Benes.scala 28:28]
      parsedindexvalue_boolArray_6[1] <= _parsedindexvalue_boolArray_T_27 @[Benes.scala 28:28]
      wire parsedindexvalue_second_stage_6 : UInt
      parsedindexvalue_second_stage_6 <= parsedindexvalue_first_stage_6
      node parsedindexvalue_calculation_12 = rem(parsedindexvalue_second_stage_6, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_468 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_469 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_470 = and(_parsedindexvalue_nextIndex_T_468, _parsedindexvalue_nextIndex_T_469) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_471 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_472 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_473 = and(_parsedindexvalue_nextIndex_T_471, _parsedindexvalue_nextIndex_T_472) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_474 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_475 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_476 = and(_parsedindexvalue_nextIndex_T_474, _parsedindexvalue_nextIndex_T_475) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_477 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_478 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_479 = and(_parsedindexvalue_nextIndex_T_477, _parsedindexvalue_nextIndex_T_478) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_480 = eq(parsedindexvalue_calculation_12, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_481 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_482 = and(_parsedindexvalue_nextIndex_T_480, _parsedindexvalue_nextIndex_T_481) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_483 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_484 = tail(_parsedindexvalue_nextIndex_T_483, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_485 = eq(parsedindexvalue_calculation_12, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_486 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_487 = and(_parsedindexvalue_nextIndex_T_485, _parsedindexvalue_nextIndex_T_486) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_488 = add(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_489 = tail(_parsedindexvalue_nextIndex_T_488, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_490 = eq(parsedindexvalue_calculation_12, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_491 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_492 = and(_parsedindexvalue_nextIndex_T_490, _parsedindexvalue_nextIndex_T_491) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_493 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_494 = tail(_parsedindexvalue_nextIndex_T_493, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_495 = eq(parsedindexvalue_calculation_12, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_496 = eq(parsedindexvalue_boolArray_6[0], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_497 = and(_parsedindexvalue_nextIndex_T_495, _parsedindexvalue_nextIndex_T_496) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_498 = sub(parsedindexvalue_second_stage_6, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_499 = tail(_parsedindexvalue_nextIndex_T_498, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_500 = mux(_parsedindexvalue_nextIndex_T_497, _parsedindexvalue_nextIndex_T_499, parsedindexvalue_second_stage_6) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_501 = mux(_parsedindexvalue_nextIndex_T_492, _parsedindexvalue_nextIndex_T_494, _parsedindexvalue_nextIndex_T_500) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_502 = mux(_parsedindexvalue_nextIndex_T_487, _parsedindexvalue_nextIndex_T_489, _parsedindexvalue_nextIndex_T_501) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_503 = mux(_parsedindexvalue_nextIndex_T_482, _parsedindexvalue_nextIndex_T_484, _parsedindexvalue_nextIndex_T_502) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_504 = mux(_parsedindexvalue_nextIndex_T_479, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_503) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_505 = mux(_parsedindexvalue_nextIndex_T_476, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_504) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_506 = mux(_parsedindexvalue_nextIndex_T_473, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_505) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_12 = mux(_parsedindexvalue_nextIndex_T_470, parsedindexvalue_second_stage_6, _parsedindexvalue_nextIndex_T_506) @[Mux.scala 101:16]
      node parsedindexvalue_calculation_13 = rem(parsedindexvalue_nextIndex_12, UInt<3>("h4")) @[Benes.scala 33:40]
      node _parsedindexvalue_nextIndex_T_507 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 35:27]
      node _parsedindexvalue_nextIndex_T_508 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 35:53]
      node _parsedindexvalue_nextIndex_T_509 = and(_parsedindexvalue_nextIndex_T_507, _parsedindexvalue_nextIndex_T_508) @[Benes.scala 35:36]
      node _parsedindexvalue_nextIndex_T_510 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 36:27]
      node _parsedindexvalue_nextIndex_T_511 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 36:53]
      node _parsedindexvalue_nextIndex_T_512 = and(_parsedindexvalue_nextIndex_T_510, _parsedindexvalue_nextIndex_T_511) @[Benes.scala 36:36]
      node _parsedindexvalue_nextIndex_T_513 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 37:27]
      node _parsedindexvalue_nextIndex_T_514 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 37:53]
      node _parsedindexvalue_nextIndex_T_515 = and(_parsedindexvalue_nextIndex_T_513, _parsedindexvalue_nextIndex_T_514) @[Benes.scala 37:36]
      node _parsedindexvalue_nextIndex_T_516 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 38:27]
      node _parsedindexvalue_nextIndex_T_517 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h0")) @[Benes.scala 38:53]
      node _parsedindexvalue_nextIndex_T_518 = and(_parsedindexvalue_nextIndex_T_516, _parsedindexvalue_nextIndex_T_517) @[Benes.scala 38:36]
      node _parsedindexvalue_nextIndex_T_519 = eq(parsedindexvalue_calculation_13, UInt<1>("h0")) @[Benes.scala 39:27]
      node _parsedindexvalue_nextIndex_T_520 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 39:53]
      node _parsedindexvalue_nextIndex_T_521 = and(_parsedindexvalue_nextIndex_T_519, _parsedindexvalue_nextIndex_T_520) @[Benes.scala 39:36]
      node _parsedindexvalue_nextIndex_T_522 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_523 = tail(_parsedindexvalue_nextIndex_T_522, 1) @[Benes.scala 39:76]
      node _parsedindexvalue_nextIndex_T_524 = eq(parsedindexvalue_calculation_13, UInt<1>("h1")) @[Benes.scala 40:27]
      node _parsedindexvalue_nextIndex_T_525 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 40:53]
      node _parsedindexvalue_nextIndex_T_526 = and(_parsedindexvalue_nextIndex_T_524, _parsedindexvalue_nextIndex_T_525) @[Benes.scala 40:36]
      node _parsedindexvalue_nextIndex_T_527 = add(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_528 = tail(_parsedindexvalue_nextIndex_T_527, 1) @[Benes.scala 40:76]
      node _parsedindexvalue_nextIndex_T_529 = eq(parsedindexvalue_calculation_13, UInt<2>("h2")) @[Benes.scala 41:27]
      node _parsedindexvalue_nextIndex_T_530 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 41:53]
      node _parsedindexvalue_nextIndex_T_531 = and(_parsedindexvalue_nextIndex_T_529, _parsedindexvalue_nextIndex_T_530) @[Benes.scala 41:36]
      node _parsedindexvalue_nextIndex_T_532 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_533 = tail(_parsedindexvalue_nextIndex_T_532, 1) @[Benes.scala 41:76]
      node _parsedindexvalue_nextIndex_T_534 = eq(parsedindexvalue_calculation_13, UInt<2>("h3")) @[Benes.scala 42:27]
      node _parsedindexvalue_nextIndex_T_535 = eq(parsedindexvalue_boolArray_6[1], UInt<1>("h1")) @[Benes.scala 42:53]
      node _parsedindexvalue_nextIndex_T_536 = and(_parsedindexvalue_nextIndex_T_534, _parsedindexvalue_nextIndex_T_535) @[Benes.scala 42:36]
      node _parsedindexvalue_nextIndex_T_537 = sub(parsedindexvalue_nextIndex_12, UInt<2>("h2")) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_538 = tail(_parsedindexvalue_nextIndex_T_537, 1) @[Benes.scala 42:76]
      node _parsedindexvalue_nextIndex_T_539 = mux(_parsedindexvalue_nextIndex_T_536, _parsedindexvalue_nextIndex_T_538, parsedindexvalue_nextIndex_12) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_540 = mux(_parsedindexvalue_nextIndex_T_531, _parsedindexvalue_nextIndex_T_533, _parsedindexvalue_nextIndex_T_539) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_541 = mux(_parsedindexvalue_nextIndex_T_526, _parsedindexvalue_nextIndex_T_528, _parsedindexvalue_nextIndex_T_540) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_542 = mux(_parsedindexvalue_nextIndex_T_521, _parsedindexvalue_nextIndex_T_523, _parsedindexvalue_nextIndex_T_541) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_543 = mux(_parsedindexvalue_nextIndex_T_518, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_542) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_544 = mux(_parsedindexvalue_nextIndex_T_515, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_543) @[Mux.scala 101:16]
      node _parsedindexvalue_nextIndex_T_545 = mux(_parsedindexvalue_nextIndex_T_512, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_544) @[Mux.scala 101:16]
      node parsedindexvalue_nextIndex_13 = mux(_parsedindexvalue_nextIndex_T_509, parsedindexvalue_nextIndex_12, _parsedindexvalue_nextIndex_T_545) @[Mux.scala 101:16]
      node _parsedindexvalue_third_stage_T_48 = bits(io.i_mux_bus[0], 3, 3) @[Benes.scala 48:30]
      node _parsedindexvalue_third_stage_T_49 = rem(parsedindexvalue_nextIndex_13, UInt<2>("h2")) @[Benes.scala 48:61]
      node _parsedindexvalue_third_stage_T_50 = eq(_parsedindexvalue_third_stage_T_49, UInt<1>("h0")) @[Benes.scala 48:67]
      node _parsedindexvalue_third_stage_T_51 = add(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_52 = tail(_parsedindexvalue_third_stage_T_51, 1) @[Benes.scala 48:89]
      node _parsedindexvalue_third_stage_T_53 = sub(parsedindexvalue_nextIndex_13, UInt<1>("h1")) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_54 = tail(_parsedindexvalue_third_stage_T_53, 1) @[Benes.scala 48:109]
      node _parsedindexvalue_third_stage_T_55 = mux(_parsedindexvalue_third_stage_T_50, _parsedindexvalue_third_stage_T_52, _parsedindexvalue_third_stage_T_54) @[Benes.scala 48:47]
      node parsedindexvalue_6 = mux(_parsedindexvalue_third_stage_T_48, _parsedindexvalue_third_stage_T_55, parsedindexvalue_nextIndex_13) @[Benes.scala 48:24]
      node _T_25 = or(parsedindexvalue_6, UInt<3>("h0"))
      node _T_26 = bits(_T_25, 2, 0)
      parse_array[_T_26] <= io.i_data_bus2[0] @[Benes.scala 94:35]
    else :
      parse_array[4] <= UInt<1>("h0") @[Benes.scala 98:33]
    io.o_dist_bus2[0] <= parse_array[0] @[Benes.scala 103:27]
    io.o_dist_bus2[1] <= parse_array[1] @[Benes.scala 103:27]
    io.o_dist_bus2[2] <= parse_array[2] @[Benes.scala 103:27]
    io.o_dist_bus2[3] <= parse_array[3] @[Benes.scala 103:27]

  module buffer_multiplication_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip buffer1 : UInt<16>[4], flip buffer2 : UInt<16>[4], out : UInt<16>[4]}

    node elementMul = mul(io.buffer1[0], io.buffer2[0]) @[buffer_multiplication.scala 17:42]
    node result_elementMul = mul(io.buffer1[1], io.buffer2[1]) @[buffer_multiplication.scala 17:42]
    node result_result_elementMul = mul(io.buffer1[2], io.buffer2[2]) @[buffer_multiplication.scala 17:42]
    node result_result_result_elementMul = mul(io.buffer1[3], io.buffer2[3]) @[buffer_multiplication.scala 17:42]
    wire result : UInt<16>[4] @[buffer_multiplication.scala 15:20]
    result[0] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[1] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[2] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= UInt<16>("h0") @[buffer_multiplication.scala 15:20]
    result[3] <= result_result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[2] <= result_result_elementMul @[buffer_multiplication.scala 19:27]
    result[1] <= result_elementMul @[buffer_multiplication.scala 19:27]
    result[0] <= elementMul @[buffer_multiplication.scala 19:27]
    io.out <= result @[buffer_multiplication.scala 24:10]

  module ReductionMux_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_9 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_9 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_10 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_10 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module ReductionMux_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_data : UInt<32>[2], flip i_sel : UInt<2>, o_data : UInt<32>[2]}

    wire w_data_left : UInt<32>[1] @[ReductionMux.scala 18:25]
    w_data_left[0] <= io.i_data[0] @[ReductionMux.scala 20:20]
    wire w_data_right : UInt<32>[1] @[ReductionMux.scala 22:26]
    w_data_right[0] <= io.i_data[1] @[ReductionMux.scala 24:21]
    node w_sel_in_left = bits(io.i_sel, 0, 0) @[ReductionMux.scala 28:32]
    node w_sel_in_right = bits(io.i_sel, 1, 1) @[ReductionMux.scala 29:33]
    node _T = lt(w_sel_in_left, UInt<2>("h2")) @[ReductionMux.scala 31:32]
    when _T : @[ReductionMux.scala 31:39]
      io.o_data[0] <= w_data_left[UInt<1>("h0")] @[ReductionMux.scala 33:18]
    else :
      io.o_data[0] <= UInt<1>("h0") @[ReductionMux.scala 35:18]
    node _io_o_data_1_T = lt(w_sel_in_right, UInt<1>("h1")) @[ReductionMux.scala 37:47]
    node _io_o_data_1_T_1 = mux(_io_o_data_1_T, w_data_right[UInt<1>("h0")], UInt<1>("h0")) @[ReductionMux.scala 37:22]
    io.o_data[1] <= _io_o_data_1_T_1 @[ReductionMux.scala 37:16]

  module SimpleAdder_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip A : UInt<32>, flip B : UInt<32>, O : UInt<32>}

    node _io_O_T = add(io.A, io.B) @[SimpleAdder.scala 14:18]
    node _io_O_T_1 = tail(_io_O_T, 1) @[SimpleAdder.scala 14:18]
    io.O <= _io_O_T_1 @[SimpleAdder.scala 14:10]

  module EdgeAdderSwitch_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<64>[2], flip i_add_en : UInt<3>, flip i_cmd : UInt<5>, flip i_sel : UInt<2>, o_vn : UInt<64>, o_vn_valid : UInt<2>, o_adder : UInt<32>}

    node rst = asUInt(reset) @[EdgeAdderSwitch.scala 17:19]
    inst reductionMux of ReductionMux_11 @[EdgeAdderSwitch.scala 19:28]
    reductionMux.clock <= clock
    reductionMux.reset <= reset
    reductionMux.io.i_data[0] <= io.i_data_bus[0] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_data[1] <= io.i_data_bus[1] @[EdgeAdderSwitch.scala 20:26]
    reductionMux.io.i_sel <= io.i_sel @[EdgeAdderSwitch.scala 21:25]
    inst adder32 of SimpleAdder_11 @[EdgeAdderSwitch.scala 23:23]
    adder32.clock <= clock
    adder32.reset <= reset
    adder32.io.A <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 24:16]
    adder32.io.B <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 25:16]
    reg r_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 27:24]
    r_valid <= io.i_valid @[EdgeAdderSwitch.scala 27:24]
    reg r_adder : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[EdgeAdderSwitch.scala 28:24]
    reg r_vn : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[EdgeAdderSwitch.scala 29:21]
    reg r_vn_valid : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[EdgeAdderSwitch.scala 30:27]
    reg r_add_en : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[EdgeAdderSwitch.scala 31:25]
    r_add_en <= io.i_add_en @[EdgeAdderSwitch.scala 31:25]
    when rst : @[EdgeAdderSwitch.scala 33:14]
      r_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 34:13]
      r_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 35:10]
      r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 36:16]
    else :
      when r_valid : @[EdgeAdderSwitch.scala 37:25]
        node _T = eq(UInt<2>("h3"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
        when _T : @[EdgeAdderSwitch.scala 38:23]
          r_adder <= reductionMux.io.o_data[1] @[EdgeAdderSwitch.scala 40:17]
          node _r_vn_T = cat(io.i_data_bus[0], UInt<32>("h0")) @[Cat.scala 33:92]
          r_vn <= _r_vn_T @[EdgeAdderSwitch.scala 41:14]
          r_vn_valid <= UInt<1>("h1") @[EdgeAdderSwitch.scala 42:20]
        else :
          node _T_1 = eq(UInt<3>("h4"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
          when _T_1 : @[EdgeAdderSwitch.scala 38:23]
            r_adder <= reductionMux.io.o_data[0] @[EdgeAdderSwitch.scala 45:17]
            node _r_vn_T_1 = cat(UInt<32>("h0"), io.i_data_bus[1]) @[Cat.scala 33:92]
            r_vn <= _r_vn_T_1 @[EdgeAdderSwitch.scala 46:14]
            r_vn_valid <= UInt<2>("h2") @[EdgeAdderSwitch.scala 47:20]
          else :
            node _T_2 = eq(UInt<3>("h5"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
            when _T_2 : @[EdgeAdderSwitch.scala 38:23]
              node _r_vn_T_2 = cat(reductionMux.io.o_data[0], reductionMux.io.o_data[1]) @[Cat.scala 33:92]
              r_vn <= _r_vn_T_2 @[EdgeAdderSwitch.scala 50:14]
              r_vn_valid <= UInt<2>("h3") @[EdgeAdderSwitch.scala 51:20]
            else :
              node _T_3 = eq(UInt<1>("h0"), io.i_cmd) @[EdgeAdderSwitch.scala 38:23]
              when _T_3 : @[EdgeAdderSwitch.scala 38:23]
                r_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 54:20]
    when rst : @[EdgeAdderSwitch.scala 59:14]
      io.o_adder <= UInt<1>("h0") @[EdgeAdderSwitch.scala 60:16]
      io.o_vn <= UInt<1>("h0") @[EdgeAdderSwitch.scala 61:13]
      io.o_vn_valid <= UInt<1>("h0") @[EdgeAdderSwitch.scala 62:19]
    else :
      node _T_4 = eq(r_add_en, UInt<1>("h0")) @[EdgeAdderSwitch.scala 64:11]
      when _T_4 : @[EdgeAdderSwitch.scala 64:22]
        io.o_adder <= r_adder @[EdgeAdderSwitch.scala 65:18]
      else :
        io.o_adder <= adder32.io.O @[EdgeAdderSwitch.scala 67:18]
      io.o_vn <= r_vn @[EdgeAdderSwitch.scala 69:13]
      io.o_vn_valid <= r_vn_valid @[EdgeAdderSwitch.scala 70:19]

  module Fan4_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_valid : UInt<1>, flip i_data_bus : UInt<32>[4], flip i_add_en_bus : UInt<1>[3], flip i_cmd_bus : UInt<3>[3], o_valid : UInt<1>[4], o_data_bus : UInt<32>[4], o_adder : UInt<32>[3]}

    wire _w_fan_lvl_0_WIRE : UInt<64>[2] @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[0] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    _w_fan_lvl_0_WIRE[1] <= UInt<64>("h0") @[FanNetwork.scala 20:39]
    wire w_fan_lvl_0 : UInt<64>[2]
    w_fan_lvl_0 <= _w_fan_lvl_0_WIRE
    wire _w_fan_lvl_1_WIRE : UInt<32>[1] @[FanNetwork.scala 21:39]
    _w_fan_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 21:39]
    wire w_fan_lvl_1 : UInt<32>[1]
    w_fan_lvl_1 <= _w_fan_lvl_1_WIRE
    wire _w_vn_lvl_0_WIRE : UInt<32>[4] @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    _w_vn_lvl_0_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 23:38]
    wire w_vn_lvl_0 : UInt<32>[4]
    w_vn_lvl_0 <= _w_vn_lvl_0_WIRE
    wire _w_vn_lvl_0_valid_WIRE : UInt<1>[4] @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    _w_vn_lvl_0_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 24:44]
    wire w_vn_lvl_0_valid : UInt<1>[4]
    w_vn_lvl_0_valid <= _w_vn_lvl_0_valid_WIRE
    wire _w_vn_lvl_1_WIRE : UInt<32>[2] @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    _w_vn_lvl_1_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 25:38]
    wire w_vn_lvl_1 : UInt<32>[2]
    w_vn_lvl_1 <= _w_vn_lvl_1_WIRE
    wire _w_vn_lvl_1_valid_WIRE : UInt<1>[2] @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    _w_vn_lvl_1_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 26:44]
    wire w_vn_lvl_1_valid : UInt<1>[2]
    w_vn_lvl_1_valid <= _w_vn_lvl_1_valid_WIRE
    wire _r_lvl_output_ff_WIRE : UInt<32>[8] @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[0] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[1] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[2] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[3] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[4] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[5] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[6] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    _r_lvl_output_ff_WIRE[7] <= UInt<32>("h0") @[FanNetwork.scala 28:42]
    reg r_lvl_output_ff : UInt<32>[8], clock with :
      reset => (reset, _r_lvl_output_ff_WIRE) @[FanNetwork.scala 28:34]
    wire _r_lvl_output_ff_valid_WIRE : UInt<1>[8] @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[3] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[4] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[5] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[6] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    _r_lvl_output_ff_valid_WIRE[7] <= UInt<1>("h0") @[FanNetwork.scala 29:48]
    reg r_lvl_output_ff_valid : UInt<1>[8], clock with :
      reset => (reset, _r_lvl_output_ff_valid_WIRE) @[FanNetwork.scala 29:40]
    wire _r_valid_WIRE : UInt<1>[3] @[FanNetwork.scala 30:34]
    _r_valid_WIRE[0] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[1] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    _r_valid_WIRE[2] <= UInt<1>("h0") @[FanNetwork.scala 30:34]
    reg r_valid : UInt<1>[3], clock with :
      reset => (reset, _r_valid_WIRE) @[FanNetwork.scala 30:26]
    reg r_final_sum : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FanNetwork.scala 32:30]
    reg r_final_add : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 33:30]
    reg r_final_add2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[FanNetwork.scala 34:31]
    node _T = bits(w_vn_lvl_0_valid[1], 0, 0) @[FanNetwork.scala 38:30]
    node _T_1 = eq(_T, UInt<1>("h1")) @[FanNetwork.scala 38:34]
    node _T_2 = bits(w_vn_lvl_0_valid[0], 0, 0) @[FanNetwork.scala 38:64]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[FanNetwork.scala 38:68]
    node _T_4 = and(_T_1, _T_3) @[FanNetwork.scala 38:42]
    when _T_4 : @[FanNetwork.scala 38:77]
      r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 39:28]
      r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 40:28]
      r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 41:34]
      r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 42:34]
    else :
      node _T_5 = eq(w_vn_lvl_0_valid[1], UInt<1>("h1")) @[FanNetwork.scala 43:37]
      node _T_6 = eq(w_vn_lvl_0_valid[0], UInt<1>("h0")) @[FanNetwork.scala 43:68]
      node _T_7 = and(_T_5, _T_6) @[FanNetwork.scala 43:45]
      when _T_7 : @[FanNetwork.scala 43:77]
        r_lvl_output_ff[1] <= w_vn_lvl_0[1] @[FanNetwork.scala 44:28]
        r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 45:28]
        r_lvl_output_ff_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 46:34]
        r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 47:34]
      else :
        node _T_8 = eq(w_vn_lvl_0_valid[1], UInt<1>("h0")) @[FanNetwork.scala 48:37]
        node _T_9 = eq(w_vn_lvl_0_valid[0], UInt<1>("h1")) @[FanNetwork.scala 48:68]
        node _T_10 = and(_T_8, _T_9) @[FanNetwork.scala 48:45]
        when _T_10 : @[FanNetwork.scala 48:77]
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 49:28]
          r_lvl_output_ff[0] <= w_vn_lvl_0[0] @[FanNetwork.scala 50:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 51:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 52:34]
        else :
          r_lvl_output_ff[1] <= UInt<1>("h0") @[FanNetwork.scala 54:28]
          r_lvl_output_ff[0] <= UInt<1>("h0") @[FanNetwork.scala 55:28]
          r_lvl_output_ff_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 56:34]
          r_lvl_output_ff_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 57:34]
    node _T_11 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 59:30]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[FanNetwork.scala 59:34]
    node _T_13 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 59:64]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[FanNetwork.scala 59:68]
    node _T_15 = and(_T_12, _T_14) @[FanNetwork.scala 59:42]
    when _T_15 : @[FanNetwork.scala 59:77]
      r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 60:28]
      r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 61:28]
      r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 62:34]
      r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 63:34]
    else :
      node _T_16 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 64:36]
      node _T_17 = eq(_T_16, UInt<1>("h1")) @[FanNetwork.scala 64:40]
      node _T_18 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 64:70]
      node _T_19 = eq(_T_18, UInt<1>("h0")) @[FanNetwork.scala 64:74]
      node _T_20 = and(_T_17, _T_19) @[FanNetwork.scala 64:48]
      when _T_20 : @[FanNetwork.scala 64:83]
        r_lvl_output_ff[3] <= w_vn_lvl_0[3] @[FanNetwork.scala 65:28]
        r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 66:28]
        r_lvl_output_ff_valid[3] <= UInt<1>("h1") @[FanNetwork.scala 67:34]
        r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 68:34]
      else :
        node _T_21 = bits(w_vn_lvl_0_valid[3], 0, 0) @[FanNetwork.scala 69:36]
        node _T_22 = eq(_T_21, UInt<1>("h0")) @[FanNetwork.scala 69:40]
        node _T_23 = bits(w_vn_lvl_0_valid[2], 0, 0) @[FanNetwork.scala 69:70]
        node _T_24 = eq(_T_23, UInt<1>("h1")) @[FanNetwork.scala 69:74]
        node _T_25 = and(_T_22, _T_24) @[FanNetwork.scala 69:48]
        when _T_25 : @[FanNetwork.scala 69:83]
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 70:28]
          r_lvl_output_ff[2] <= w_vn_lvl_0[2] @[FanNetwork.scala 71:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 72:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h1") @[FanNetwork.scala 73:34]
        else :
          r_lvl_output_ff[3] <= UInt<1>("h0") @[FanNetwork.scala 75:28]
          r_lvl_output_ff[2] <= UInt<1>("h0") @[FanNetwork.scala 76:28]
          r_lvl_output_ff_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 77:34]
          r_lvl_output_ff_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 78:34]
    r_lvl_output_ff[4] <= r_lvl_output_ff[0] @[FanNetwork.scala 81:24]
    r_lvl_output_ff_valid[4] <= r_lvl_output_ff_valid[0] @[FanNetwork.scala 82:30]
    node _T_26 = bits(w_vn_lvl_1_valid[0], 0, 0) @[FanNetwork.scala 84:29]
    when _T_26 : @[FanNetwork.scala 84:34]
      r_lvl_output_ff[5] <= w_vn_lvl_1[0] @[FanNetwork.scala 85:28]
      r_lvl_output_ff_valid[5] <= UInt<1>("h1") @[FanNetwork.scala 86:34]
    else :
      r_lvl_output_ff[5] <= r_lvl_output_ff[1] @[FanNetwork.scala 88:28]
      r_lvl_output_ff_valid[5] <= r_lvl_output_ff_valid[1] @[FanNetwork.scala 89:34]
    node _T_27 = bits(w_vn_lvl_1_valid[1], 0, 0) @[FanNetwork.scala 91:29]
    when _T_27 : @[FanNetwork.scala 91:34]
      r_lvl_output_ff[6] <= w_vn_lvl_1[1] @[FanNetwork.scala 92:28]
      r_lvl_output_ff_valid[6] <= UInt<1>("h1") @[FanNetwork.scala 93:34]
    else :
      r_lvl_output_ff[6] <= r_lvl_output_ff[2] @[FanNetwork.scala 95:28]
      r_lvl_output_ff_valid[6] <= r_lvl_output_ff_valid[2] @[FanNetwork.scala 96:34]
    r_lvl_output_ff[7] <= r_lvl_output_ff[3] @[FanNetwork.scala 99:24]
    r_lvl_output_ff_valid[7] <= r_lvl_output_ff_valid[3] @[FanNetwork.scala 100:30]
    node _T_28 = eq(io.i_valid, UInt<1>("h1")) @[FanNetwork.scala 104:22]
    when _T_28 : @[FanNetwork.scala 104:31]
      r_valid[0] <= UInt<1>("h1") @[FanNetwork.scala 105:16]
    else :
      r_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 107:20]
    r_valid[1] <= r_valid[0] @[FanNetwork.scala 114:24]
    r_valid[2] <= r_valid[1] @[FanNetwork.scala 114:24]
    inst my_adder_0 of EdgeAdderSwitch_9 @[FanNetwork.scala 119:28]
    my_adder_0.clock <= clock
    my_adder_0.reset <= reset
    my_adder_0.io.i_valid <= r_valid[0] @[FanNetwork.scala 121:27]
    wire _WIRE : UInt<32>[2] @[FanNetwork.scala 122:40]
    _WIRE[0] <= io.i_data_bus[1] @[FanNetwork.scala 122:40]
    _WIRE[1] <= io.i_data_bus[0] @[FanNetwork.scala 122:40]
    my_adder_0.io.i_data_bus[0] <= _WIRE[0] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_data_bus[1] <= _WIRE[1] @[FanNetwork.scala 122:30]
    my_adder_0.io.i_add_en <= io.i_add_en_bus[0] @[FanNetwork.scala 123:28]
    my_adder_0.io.i_cmd <= io.i_cmd_bus[0] @[FanNetwork.scala 124:25]
    my_adder_0.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 125:25]
    node _w_vn_lvl_0_0_T = bits(my_adder_0.io.o_vn, 31, 0) @[FanNetwork.scala 126:40]
    w_vn_lvl_0[0] <= _w_vn_lvl_0_0_T @[FanNetwork.scala 126:19]
    node _w_vn_lvl_0_1_T = bits(my_adder_0.io.o_vn, 63, 32) @[FanNetwork.scala 127:40]
    w_vn_lvl_0[1] <= _w_vn_lvl_0_1_T @[FanNetwork.scala 127:19]
    node _w_vn_lvl_0_valid_0_T = bits(my_adder_0.io.o_vn_valid, 0, 0) @[FanNetwork.scala 128:52]
    w_vn_lvl_0_valid[0] <= _w_vn_lvl_0_valid_0_T @[FanNetwork.scala 128:25]
    node _w_vn_lvl_0_valid_1_T = bits(my_adder_0.io.o_vn_valid, 1, 1) @[FanNetwork.scala 129:52]
    w_vn_lvl_0_valid[1] <= _w_vn_lvl_0_valid_1_T @[FanNetwork.scala 129:25]
    w_fan_lvl_0[0] <= my_adder_0.io.o_adder @[FanNetwork.scala 130:20]
    inst my_adder_1 of EdgeAdderSwitch_10 @[FanNetwork.scala 132:28]
    my_adder_1.clock <= clock
    my_adder_1.reset <= reset
    my_adder_1.io.i_valid <= r_valid[1] @[FanNetwork.scala 134:27]
    wire _WIRE_1 : UInt<64>[2] @[FanNetwork.scala 135:40]
    _WIRE_1[0] <= w_fan_lvl_0[1] @[FanNetwork.scala 135:40]
    _WIRE_1[1] <= w_fan_lvl_0[0] @[FanNetwork.scala 135:40]
    my_adder_1.io.i_data_bus[0] <= _WIRE_1[0] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_data_bus[1] <= _WIRE_1[1] @[FanNetwork.scala 135:30]
    my_adder_1.io.i_add_en <= io.i_add_en_bus[2] @[FanNetwork.scala 136:28]
    my_adder_1.io.i_cmd <= io.i_cmd_bus[2] @[FanNetwork.scala 137:26]
    my_adder_1.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 138:25]
    node _w_vn_lvl_1_0_T = bits(my_adder_1.io.o_vn, 31, 0) @[FanNetwork.scala 139:40]
    w_vn_lvl_1[0] <= _w_vn_lvl_1_0_T @[FanNetwork.scala 139:19]
    node _w_vn_lvl_1_1_T = bits(my_adder_1.io.o_vn, 63, 32) @[FanNetwork.scala 140:40]
    w_vn_lvl_1[1] <= _w_vn_lvl_1_1_T @[FanNetwork.scala 140:19]
    node _w_vn_lvl_1_valid_0_T = bits(my_adder_1.io.o_vn_valid, 0, 0) @[FanNetwork.scala 141:52]
    w_vn_lvl_1_valid[0] <= _w_vn_lvl_1_valid_0_T @[FanNetwork.scala 141:25]
    node _w_vn_lvl_1_valid_1_T = bits(my_adder_1.io.o_vn_valid, 1, 1) @[FanNetwork.scala 142:52]
    w_vn_lvl_1_valid[1] <= _w_vn_lvl_1_valid_1_T @[FanNetwork.scala 142:25]
    w_fan_lvl_1[0] <= my_adder_1.io.o_adder @[FanNetwork.scala 143:20]
    inst my_adder_2 of EdgeAdderSwitch_11 @[FanNetwork.scala 145:28]
    my_adder_2.clock <= clock
    my_adder_2.reset <= reset
    my_adder_2.io.i_valid <= r_valid[0] @[FanNetwork.scala 147:27]
    wire _WIRE_2 : UInt<32>[2] @[FanNetwork.scala 148:40]
    _WIRE_2[0] <= io.i_data_bus[3] @[FanNetwork.scala 148:40]
    _WIRE_2[1] <= io.i_data_bus[2] @[FanNetwork.scala 148:40]
    my_adder_2.io.i_data_bus[0] <= _WIRE_2[0] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_data_bus[1] <= _WIRE_2[1] @[FanNetwork.scala 148:30]
    my_adder_2.io.i_add_en <= io.i_add_en_bus[1] @[FanNetwork.scala 149:28]
    my_adder_2.io.i_cmd <= io.i_cmd_bus[1] @[FanNetwork.scala 150:25]
    my_adder_2.io.i_sel <= UInt<1>("h0") @[FanNetwork.scala 151:25]
    node _w_vn_lvl_0_2_T = bits(my_adder_2.io.o_vn, 31, 0) @[FanNetwork.scala 153:40]
    w_vn_lvl_0[2] <= _w_vn_lvl_0_2_T @[FanNetwork.scala 153:19]
    node _w_vn_lvl_0_3_T = bits(my_adder_2.io.o_vn, 63, 32) @[FanNetwork.scala 154:40]
    w_vn_lvl_0[3] <= _w_vn_lvl_0_3_T @[FanNetwork.scala 154:19]
    node _w_vn_lvl_0_valid_2_T = bits(my_adder_2.io.o_vn_valid, 0, 0) @[FanNetwork.scala 156:52]
    w_vn_lvl_0_valid[2] <= _w_vn_lvl_0_valid_2_T @[FanNetwork.scala 156:25]
    node _w_vn_lvl_0_valid_3_T = bits(my_adder_2.io.o_vn_valid, 1, 1) @[FanNetwork.scala 157:52]
    w_vn_lvl_0_valid[3] <= _w_vn_lvl_0_valid_3_T @[FanNetwork.scala 157:25]
    w_fan_lvl_0[1] <= my_adder_2.io.o_adder @[FanNetwork.scala 159:20]
    r_final_add <= UInt<1>("h0") @[FanNetwork.scala 163:17]
    r_final_add2 <= UInt<1>("h0") @[FanNetwork.scala 164:18]
    r_final_sum <= UInt<1>("h0") @[FanNetwork.scala 165:17]
    r_final_add <= io.i_add_en_bus[2] @[FanNetwork.scala 167:17]
    r_final_add2 <= r_final_add @[FanNetwork.scala 168:18]
    r_final_sum <= w_fan_lvl_1[0] @[FanNetwork.scala 169:17]
    io.o_data_bus[0] <= UInt<1>("h0") @[FanNetwork.scala 172:22]
    io.o_data_bus[1] <= UInt<1>("h0") @[FanNetwork.scala 173:22]
    io.o_data_bus[2] <= UInt<1>("h0") @[FanNetwork.scala 174:22]
    io.o_data_bus[3] <= UInt<1>("h0") @[FanNetwork.scala 175:22]
    io.o_data_bus[0] <= r_lvl_output_ff[4] @[FanNetwork.scala 177:22]
    node _T_29 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 178:24]
    when _T_29 : @[FanNetwork.scala 178:33]
      io.o_data_bus[1] <= r_final_sum @[FanNetwork.scala 179:26]
    else :
      io.o_data_bus[1] <= r_lvl_output_ff[5] @[FanNetwork.scala 181:26]
    io.o_data_bus[2] <= r_lvl_output_ff[6] @[FanNetwork.scala 183:22]
    io.o_data_bus[3] <= r_lvl_output_ff[7] @[FanNetwork.scala 184:22]
    io.o_valid[0] <= UInt<1>("h0") @[FanNetwork.scala 187:19]
    io.o_valid[1] <= UInt<1>("h0") @[FanNetwork.scala 188:19]
    io.o_valid[2] <= UInt<1>("h0") @[FanNetwork.scala 189:19]
    io.o_valid[3] <= UInt<1>("h0") @[FanNetwork.scala 190:19]
    io.o_valid[0] <= r_lvl_output_ff_valid[4] @[FanNetwork.scala 192:19]
    node _T_30 = eq(r_final_add2, UInt<1>("h1")) @[FanNetwork.scala 193:24]
    when _T_30 : @[FanNetwork.scala 193:33]
      io.o_valid[1] <= UInt<1>("h1") @[FanNetwork.scala 194:23]
    else :
      io.o_valid[1] <= r_lvl_output_ff_valid[5] @[FanNetwork.scala 196:23]
    io.o_valid[2] <= r_lvl_output_ff_valid[6] @[FanNetwork.scala 198:19]
    io.o_valid[3] <= r_lvl_output_ff_valid[7] @[FanNetwork.scala 199:19]
    io.o_adder[0] <= UInt<1>("h0") @[FanNetwork.scala 203:19]
    io.o_adder[1] <= UInt<1>("h0") @[FanNetwork.scala 204:19]
    io.o_adder[2] <= UInt<1>("h0") @[FanNetwork.scala 205:19]
    io.o_adder[0] <= w_fan_lvl_0[0] @[FanNetwork.scala 207:19]
    io.o_adder[1] <= w_fan_lvl_1[0] @[FanNetwork.scala 208:19]
    io.o_adder[2] <= w_fan_lvl_0[1] @[FanNetwork.scala 209:19]

  module flexdpecom4_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[4][4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4]}

    wire _r_mult_WIRE : UInt<15>[4] @[FlexDPE.scala 32:34]
    _r_mult_WIRE[0] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[1] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[2] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    _r_mult_WIRE[3] <= UInt<15>("h0") @[FlexDPE.scala 32:34]
    reg r_mult : UInt<15>[4], clock with :
      reset => (reset, _r_mult_WIRE) @[FlexDPE.scala 32:26]
    reg matrix : UInt<16>[4][4], clock with :
      reset => (UInt<1>("h0"), matrix) @[FlexDPE.scala 33:21]
    reg counter : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPE.scala 36:26]
    reg r_stationary_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff) @[FlexDPE.scala 40:30]
    reg r_stationary_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_stationary_ff2) @[FlexDPE.scala 41:31]
    reg r_data_valid_ff : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff) @[FlexDPE.scala 43:30]
    reg r_data_valid_ff2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_data_valid_ff2) @[FlexDPE.scala 44:31]
    r_stationary_ff <= io.i_stationary @[FlexDPE.scala 46:21]
    r_stationary_ff2 <= r_stationary_ff @[FlexDPE.scala 47:22]
    r_data_valid_ff <= io.i_data_valid @[FlexDPE.scala 49:21]
    r_data_valid_ff2 <= r_data_valid_ff @[FlexDPE.scala 50:22]
    inst my_ivn of ivncontrol4_3 @[FlexDPE.scala 53:23]
    my_ivn.clock <= clock
    my_ivn.reset <= reset
    my_ivn.io.Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPE.scala 54:33]
    my_ivn.io.Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPE.scala 54:33]
    inst my_controller of fancontrol4_3 @[FlexDPE.scala 57:31]
    my_controller.clock <= clock
    my_controller.reset <= reset
    my_controller.io.i_vn[0] <= my_ivn.io.o_vn[0] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[1] <= my_ivn.io.o_vn[1] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[2] <= my_ivn.io.o_vn[2] @[FlexDPE.scala 59:27]
    my_controller.io.i_vn[3] <= my_ivn.io.o_vn[3] @[FlexDPE.scala 59:27]
    my_controller.io.i_stationary <= UInt<1>("h0") @[FlexDPE.scala 60:35]
    my_controller.io.i_data_valid <= io.i_data_valid @[FlexDPE.scala 61:35]
    inst my_Benes of Benes_3 @[FlexDPE.scala 66:26]
    my_Benes.clock <= clock
    my_Benes.reset <= reset
    my_Benes.io.i_data_bus1[0] <= io.i_data_bus[0] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[1] <= io.i_data_bus[1] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[2] <= io.i_data_bus[2] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus1[3] <= io.i_data_bus[3] @[FlexDPE.scala 68:29]
    my_Benes.io.i_data_bus2[0] <= io.i_data_bus2[0] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[1] <= io.i_data_bus2[1] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[2] <= io.i_data_bus2[2] @[FlexDPE.scala 69:29]
    my_Benes.io.i_data_bus2[3] <= io.i_data_bus2[3] @[FlexDPE.scala 69:29]
    my_Benes.io.i_mux_bus[0] <= io.i_mux_bus[0] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[1] <= io.i_mux_bus[1] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[2] <= io.i_mux_bus[2] @[FlexDPE.scala 70:27]
    my_Benes.io.i_mux_bus[3] <= io.i_mux_bus[3] @[FlexDPE.scala 70:27]
    inst buffer_mult of buffer_multiplication_3 @[FlexDPE.scala 77:30]
    buffer_mult.clock <= clock
    buffer_mult.reset <= reset
    buffer_mult.io.buffer1[0] <= my_Benes.io.o_dist_bus1[0] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[1] <= my_Benes.io.o_dist_bus1[1] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[2] <= my_Benes.io.o_dist_bus1[2] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer1[3] <= my_Benes.io.o_dist_bus1[3] @[FlexDPE.scala 80:30]
    buffer_mult.io.buffer2[0] <= my_Benes.io.o_dist_bus2[0] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[1] <= my_Benes.io.o_dist_bus2[1] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[2] <= my_Benes.io.o_dist_bus2[2] @[FlexDPE.scala 81:30]
    buffer_mult.io.buffer2[3] <= my_Benes.io.o_dist_bus2[3] @[FlexDPE.scala 81:30]
    r_mult <= buffer_mult.io.out @[FlexDPE.scala 83:14]
    inst my_fan_network of Fan4_3 @[FlexDPE.scala 89:32]
    my_fan_network.clock <= clock
    my_fan_network.reset <= reset
    my_fan_network.io.i_valid <= my_controller.io.o_reduction_valid @[FlexDPE.scala 91:31]
    my_fan_network.io.i_data_bus[0] <= r_mult[0] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[1] <= r_mult[1] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[2] <= r_mult[2] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_data_bus[3] <= r_mult[3] @[FlexDPE.scala 92:34]
    my_fan_network.io.i_add_en_bus[0] <= my_controller.io.o_reduction_add[0] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[1] <= my_controller.io.o_reduction_add[1] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_add_en_bus[2] <= my_controller.io.o_reduction_add[2] @[FlexDPE.scala 93:36]
    my_fan_network.io.i_cmd_bus[0] <= my_controller.io.o_reduction_cmd[0] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[1] <= my_controller.io.o_reduction_cmd[1] @[FlexDPE.scala 94:33]
    my_fan_network.io.i_cmd_bus[2] <= my_controller.io.o_reduction_cmd[2] @[FlexDPE.scala 94:33]
    io.o_valid <= my_fan_network.io.o_valid @[FlexDPE.scala 96:16]
    io.o_data_bus <= my_fan_network.io.o_data_bus @[FlexDPE.scala 97:19]
    io.o_adder <= my_fan_network.io.o_adder @[FlexDPE.scala 98:16]

  module FlexDPU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip CalFDE : UInt<32>, flip i_vn : UInt<5>[4], flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4][4]}

    reg used_FlexDPE : UInt<32>[2], clock with :
      reset => (UInt<1>("h0"), used_FlexDPE) @[FlexDPU.scala 16:27]
    node equalDistribution = div(io.CalFDE, UInt<2>("h2")) @[FlexDPU.scala 18:39]
    node remainingDistribution = rem(io.CalFDE, UInt<2>("h2")) @[FlexDPU.scala 19:43]
    wire equalArray : UInt<32>[2] @[FlexDPU.scala 20:29]
    equalArray[0] <= equalDistribution @[FlexDPU.scala 20:29]
    equalArray[1] <= equalDistribution @[FlexDPU.scala 20:29]
    node _used_FlexDPE_0_T = lt(UInt<1>("h0"), remainingDistribution) @[FlexDPU.scala 22:34]
    node _used_FlexDPE_0_T_1 = add(equalArray[0], UInt<1>("h1")) @[FlexDPU.scala 22:73]
    node _used_FlexDPE_0_T_2 = tail(_used_FlexDPE_0_T_1, 1) @[FlexDPU.scala 22:73]
    node _used_FlexDPE_0_T_3 = mux(_used_FlexDPE_0_T, _used_FlexDPE_0_T_2, equalArray[0]) @[FlexDPU.scala 22:29]
    used_FlexDPE[0] <= _used_FlexDPE_0_T_3 @[FlexDPU.scala 22:23]
    node _used_FlexDPE_1_T = lt(UInt<1>("h1"), remainingDistribution) @[FlexDPU.scala 22:34]
    node _used_FlexDPE_1_T_1 = add(equalArray[1], UInt<1>("h1")) @[FlexDPU.scala 22:73]
    node _used_FlexDPE_1_T_2 = tail(_used_FlexDPE_1_T_1, 1) @[FlexDPU.scala 22:73]
    node _used_FlexDPE_1_T_3 = mux(_used_FlexDPE_1_T, _used_FlexDPE_1_T_2, equalArray[1]) @[FlexDPU.scala 22:29]
    used_FlexDPE[1] <= _used_FlexDPE_1_T_3 @[FlexDPU.scala 22:23]
    node sumOfUsedFlexDPE = add(used_FlexDPE[0], used_FlexDPE[1]) @[FlexDPU.scala 24:50]
    wire _nonZeroValues_WIRE : UInt<32>[16] @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[0] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[1] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[2] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[3] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[4] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[5] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[6] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[7] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[8] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[9] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[10] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[11] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[12] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[13] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[14] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    _nonZeroValues_WIRE[15] <= UInt<32>("h0") @[FlexDPU.scala 28:40]
    reg nonZeroValues : UInt<32>[16], clock with :
      reset => (reset, _nonZeroValues_WIRE) @[FlexDPU.scala 28:32]
    reg index : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 29:24]
    reg iloop : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 30:24]
    reg jloop : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 31:24]
    reg Statvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FlexDPU.scala 32:28]
    node _Statvalid_T = eq(iloop, UInt<2>("h3")) @[FlexDPU.scala 34:25]
    node _Statvalid_T_1 = eq(jloop, UInt<2>("h3")) @[FlexDPU.scala 34:61]
    node _Statvalid_T_2 = and(_Statvalid_T, _Statvalid_T_1) @[FlexDPU.scala 34:51]
    Statvalid <= _Statvalid_T_2 @[FlexDPU.scala 34:15]
    node _T = bits(iloop, 1, 0)
    node _T_1 = bits(jloop, 1, 0)
    node _T_2 = neq(io.Stationary_matrix[_T][_T_1], UInt<1>("h0")) @[FlexDPU.scala 35:46]
    when _T_2 : @[FlexDPU.scala 35:54]
      node _T_3 = bits(index, 3, 0)
      node _nonZeroValues_T = bits(iloop, 1, 0)
      node _nonZeroValues_T_1 = bits(jloop, 1, 0)
      nonZeroValues[_T_3] <= io.Stationary_matrix[_nonZeroValues_T][_nonZeroValues_T_1] @[FlexDPU.scala 36:30]
      node _index_T = add(index, UInt<1>("h1")) @[FlexDPU.scala 37:24]
      node _index_T_1 = tail(_index_T, 1) @[FlexDPU.scala 37:24]
      index <= _index_T_1 @[FlexDPU.scala 37:15]
    node _T_4 = lt(iloop, UInt<2>("h3")) @[FlexDPU.scala 40:18]
    node _T_5 = eq(jloop, UInt<2>("h3")) @[FlexDPU.scala 40:51]
    node _T_6 = and(_T_4, _T_5) @[FlexDPU.scala 40:41]
    when _T_6 : @[FlexDPU.scala 40:77]
      node _iloop_T = add(iloop, UInt<1>("h1")) @[FlexDPU.scala 41:24]
      node _iloop_T_1 = tail(_iloop_T, 1) @[FlexDPU.scala 41:24]
      iloop <= _iloop_T_1 @[FlexDPU.scala 41:15]
    node _T_7 = leq(iloop, UInt<2>("h3")) @[FlexDPU.scala 44:18]
    node _T_8 = lt(jloop, UInt<2>("h3")) @[FlexDPU.scala 44:52]
    node _T_9 = and(_T_7, _T_8) @[FlexDPU.scala 44:42]
    when _T_9 : @[FlexDPU.scala 44:76]
      node _jloop_T = add(jloop, UInt<1>("h1")) @[FlexDPU.scala 45:24]
      node _jloop_T_1 = tail(_jloop_T, 1) @[FlexDPU.scala 45:24]
      jloop <= _jloop_T_1 @[FlexDPU.scala 45:15]
    else :
      node _T_10 = eq(iloop, UInt<2>("h3")) @[FlexDPU.scala 46:22]
      node _T_11 = eq(jloop, UInt<2>("h3")) @[FlexDPU.scala 46:57]
      node _T_12 = and(_T_10, _T_11) @[FlexDPU.scala 46:47]
      when _T_12 : @[FlexDPU.scala 46:83]
        jloop <= jloop @[FlexDPU.scala 47:15]
      else :
        jloop <= UInt<1>("h0") @[FlexDPU.scala 49:15]
    wire _PF1mux_WIRE : UInt<4>[16] @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[0] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[1] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[2] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[3] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[4] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[5] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[6] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[7] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[8] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[9] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[10] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[11] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[12] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[13] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[14] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    _PF1mux_WIRE[15] <= UInt<4>("h0") @[FlexDPU.scala 54:34]
    wire PF1mux : UInt<4>[16]
    PF1mux <= _PF1mux_WIRE
    wire _PF1src_WIRE : UInt<16>[16] @[FlexDPU.scala 55:34]
    _PF1src_WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[2] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[3] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[4] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[5] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[6] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[7] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[8] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[9] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[10] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[11] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[12] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[13] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[14] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    _PF1src_WIRE[15] <= UInt<16>("h0") @[FlexDPU.scala 55:34]
    wire PF1src : UInt<16>[16]
    PF1src <= _PF1src_WIRE
    wire _PF1dest_WIRE : UInt<16>[16] @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[2] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[3] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[4] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[5] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[6] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[7] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[8] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[9] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[10] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[11] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[12] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[13] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[14] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    _PF1dest_WIRE[15] <= UInt<16>("h0") @[FlexDPU.scala 56:35]
    wire PF1dest : UInt<16>[16]
    PF1dest <= _PF1dest_WIRE
    reg PF1CountIteration : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 57:36]
    wire _PF1_Stream_Col_WIRE : UInt<32>[4] @[FlexDPU.scala 58:41]
    _PF1_Stream_Col_WIRE[0] <= UInt<32>("h0") @[FlexDPU.scala 58:41]
    _PF1_Stream_Col_WIRE[1] <= UInt<32>("h0") @[FlexDPU.scala 58:41]
    _PF1_Stream_Col_WIRE[2] <= UInt<32>("h0") @[FlexDPU.scala 58:41]
    _PF1_Stream_Col_WIRE[3] <= UInt<32>("h0") @[FlexDPU.scala 58:41]
    reg PF1_Stream_Col : UInt<32>[4], clock with :
      reset => (reset, _PF1_Stream_Col_WIRE) @[FlexDPU.scala 58:33]
    reg ModuleIndex : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 59:30]
    reg cc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 60:21]
    reg IterationIndex : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[FlexDPU.scala 71:33]
    inst PathFinder of PathFinder @[FlexDPU.scala 74:41]
    PathFinder.clock <= clock
    PathFinder.reset <= reset
    inst PathFinder_1 of PathFinder_1 @[FlexDPU.scala 74:41]
    PathFinder_1.clock <= clock
    PathFinder_1.reset <= reset
    inst PathFinder_2 of PathFinder_2 @[FlexDPU.scala 74:41]
    PathFinder_2.clock <= clock
    PathFinder_2.reset <= reset
    inst PathFinder_3 of PathFinder_3 @[FlexDPU.scala 74:41]
    PathFinder_3.clock <= clock
    PathFinder_3.reset <= reset
    inst PathFinder_4 of PathFinder_4 @[FlexDPU.scala 74:41]
    PathFinder_4.clock <= clock
    PathFinder_4.reset <= reset
    inst PathFinder_5 of PathFinder_5 @[FlexDPU.scala 74:41]
    PathFinder_5.clock <= clock
    PathFinder_5.reset <= reset
    inst PathFinder_6 of PathFinder_6 @[FlexDPU.scala 74:41]
    PathFinder_6.clock <= clock
    PathFinder_6.reset <= reset
    inst PathFinder_7 of PathFinder_7 @[FlexDPU.scala 74:41]
    PathFinder_7.clock <= clock
    PathFinder_7.reset <= reset
    inst PathFinder_8 of PathFinder_8 @[FlexDPU.scala 74:41]
    PathFinder_8.clock <= clock
    PathFinder_8.reset <= reset
    inst PathFinder_9 of PathFinder_9 @[FlexDPU.scala 74:41]
    PathFinder_9.clock <= clock
    PathFinder_9.reset <= reset
    inst PathFinder_10 of PathFinder_10 @[FlexDPU.scala 74:41]
    PathFinder_10.clock <= clock
    PathFinder_10.reset <= reset
    inst PathFinder_11 of PathFinder_11 @[FlexDPU.scala 74:41]
    PathFinder_11.clock <= clock
    PathFinder_11.reset <= reset
    inst PathFinder_12 of PathFinder_12 @[FlexDPU.scala 74:41]
    PathFinder_12.clock <= clock
    PathFinder_12.reset <= reset
    inst PathFinder_13 of PathFinder_13 @[FlexDPU.scala 74:41]
    PathFinder_13.clock <= clock
    PathFinder_13.reset <= reset
    inst PathFinder_14 of PathFinder_14 @[FlexDPU.scala 74:41]
    PathFinder_14.clock <= clock
    PathFinder_14.reset <= reset
    inst PathFinder_15 of PathFinder_15 @[FlexDPU.scala 74:41]
    PathFinder_15.clock <= clock
    PathFinder_15.reset <= reset
    wire PF : { flip Stationary_matrix : UInt<16>[4][4], flip Streaming_matrix : UInt<16>[4], i_mux_bus : UInt<4>[16], Source : UInt<16>[16], destination : UInt<16>[16], PF_Valid : UInt<1>, flip NoDPE : UInt<32>, flip DataValid : UInt<1>, iteration : UInt<32>, validIteration : UInt<1>}[16] @[FlexDPU.scala 74:21]
    PF[0].validIteration <= PathFinder.io.validIteration @[FlexDPU.scala 74:21]
    PF[0].iteration <= PathFinder.io.iteration @[FlexDPU.scala 74:21]
    PathFinder.io.DataValid <= PF[0].DataValid @[FlexDPU.scala 74:21]
    PathFinder.io.NoDPE <= PF[0].NoDPE @[FlexDPU.scala 74:21]
    PF[0].PF_Valid <= PathFinder.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[0].destination <= PathFinder.io.destination @[FlexDPU.scala 74:21]
    PF[0].Source <= PathFinder.io.Source @[FlexDPU.scala 74:21]
    PF[0].i_mux_bus <= PathFinder.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder.io.Streaming_matrix[0] <= PF[0].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder.io.Streaming_matrix[1] <= PF[0].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder.io.Streaming_matrix[2] <= PF[0].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder.io.Streaming_matrix[3] <= PF[0].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[0][0] <= PF[0].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[0][1] <= PF[0].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[0][2] <= PF[0].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[0][3] <= PF[0].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[1][0] <= PF[0].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[1][1] <= PF[0].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[1][2] <= PF[0].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[1][3] <= PF[0].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[2][0] <= PF[0].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[2][1] <= PF[0].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[2][2] <= PF[0].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[2][3] <= PF[0].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[3][0] <= PF[0].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[3][1] <= PF[0].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[3][2] <= PF[0].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder.io.Stationary_matrix[3][3] <= PF[0].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[1].validIteration <= PathFinder_1.io.validIteration @[FlexDPU.scala 74:21]
    PF[1].iteration <= PathFinder_1.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_1.io.DataValid <= PF[1].DataValid @[FlexDPU.scala 74:21]
    PathFinder_1.io.NoDPE <= PF[1].NoDPE @[FlexDPU.scala 74:21]
    PF[1].PF_Valid <= PathFinder_1.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[1].destination <= PathFinder_1.io.destination @[FlexDPU.scala 74:21]
    PF[1].Source <= PathFinder_1.io.Source @[FlexDPU.scala 74:21]
    PF[1].i_mux_bus <= PathFinder_1.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_1.io.Streaming_matrix[0] <= PF[1].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Streaming_matrix[1] <= PF[1].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Streaming_matrix[2] <= PF[1].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Streaming_matrix[3] <= PF[1].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[0][0] <= PF[1].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[0][1] <= PF[1].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[0][2] <= PF[1].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[0][3] <= PF[1].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[1][0] <= PF[1].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[1][1] <= PF[1].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[1][2] <= PF[1].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[1][3] <= PF[1].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[2][0] <= PF[1].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[2][1] <= PF[1].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[2][2] <= PF[1].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[2][3] <= PF[1].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[3][0] <= PF[1].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[3][1] <= PF[1].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[3][2] <= PF[1].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_1.io.Stationary_matrix[3][3] <= PF[1].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[2].validIteration <= PathFinder_2.io.validIteration @[FlexDPU.scala 74:21]
    PF[2].iteration <= PathFinder_2.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_2.io.DataValid <= PF[2].DataValid @[FlexDPU.scala 74:21]
    PathFinder_2.io.NoDPE <= PF[2].NoDPE @[FlexDPU.scala 74:21]
    PF[2].PF_Valid <= PathFinder_2.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[2].destination <= PathFinder_2.io.destination @[FlexDPU.scala 74:21]
    PF[2].Source <= PathFinder_2.io.Source @[FlexDPU.scala 74:21]
    PF[2].i_mux_bus <= PathFinder_2.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_2.io.Streaming_matrix[0] <= PF[2].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Streaming_matrix[1] <= PF[2].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Streaming_matrix[2] <= PF[2].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Streaming_matrix[3] <= PF[2].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[0][0] <= PF[2].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[0][1] <= PF[2].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[0][2] <= PF[2].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[0][3] <= PF[2].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[1][0] <= PF[2].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[1][1] <= PF[2].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[1][2] <= PF[2].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[1][3] <= PF[2].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[2][0] <= PF[2].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[2][1] <= PF[2].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[2][2] <= PF[2].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[2][3] <= PF[2].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[3][0] <= PF[2].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[3][1] <= PF[2].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[3][2] <= PF[2].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_2.io.Stationary_matrix[3][3] <= PF[2].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[3].validIteration <= PathFinder_3.io.validIteration @[FlexDPU.scala 74:21]
    PF[3].iteration <= PathFinder_3.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_3.io.DataValid <= PF[3].DataValid @[FlexDPU.scala 74:21]
    PathFinder_3.io.NoDPE <= PF[3].NoDPE @[FlexDPU.scala 74:21]
    PF[3].PF_Valid <= PathFinder_3.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[3].destination <= PathFinder_3.io.destination @[FlexDPU.scala 74:21]
    PF[3].Source <= PathFinder_3.io.Source @[FlexDPU.scala 74:21]
    PF[3].i_mux_bus <= PathFinder_3.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_3.io.Streaming_matrix[0] <= PF[3].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Streaming_matrix[1] <= PF[3].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Streaming_matrix[2] <= PF[3].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Streaming_matrix[3] <= PF[3].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[0][0] <= PF[3].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[0][1] <= PF[3].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[0][2] <= PF[3].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[0][3] <= PF[3].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[1][0] <= PF[3].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[1][1] <= PF[3].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[1][2] <= PF[3].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[1][3] <= PF[3].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[2][0] <= PF[3].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[2][1] <= PF[3].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[2][2] <= PF[3].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[2][3] <= PF[3].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[3][0] <= PF[3].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[3][1] <= PF[3].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[3][2] <= PF[3].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_3.io.Stationary_matrix[3][3] <= PF[3].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[4].validIteration <= PathFinder_4.io.validIteration @[FlexDPU.scala 74:21]
    PF[4].iteration <= PathFinder_4.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_4.io.DataValid <= PF[4].DataValid @[FlexDPU.scala 74:21]
    PathFinder_4.io.NoDPE <= PF[4].NoDPE @[FlexDPU.scala 74:21]
    PF[4].PF_Valid <= PathFinder_4.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[4].destination <= PathFinder_4.io.destination @[FlexDPU.scala 74:21]
    PF[4].Source <= PathFinder_4.io.Source @[FlexDPU.scala 74:21]
    PF[4].i_mux_bus <= PathFinder_4.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_4.io.Streaming_matrix[0] <= PF[4].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Streaming_matrix[1] <= PF[4].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Streaming_matrix[2] <= PF[4].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Streaming_matrix[3] <= PF[4].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[0][0] <= PF[4].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[0][1] <= PF[4].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[0][2] <= PF[4].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[0][3] <= PF[4].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[1][0] <= PF[4].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[1][1] <= PF[4].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[1][2] <= PF[4].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[1][3] <= PF[4].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[2][0] <= PF[4].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[2][1] <= PF[4].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[2][2] <= PF[4].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[2][3] <= PF[4].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[3][0] <= PF[4].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[3][1] <= PF[4].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[3][2] <= PF[4].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_4.io.Stationary_matrix[3][3] <= PF[4].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[5].validIteration <= PathFinder_5.io.validIteration @[FlexDPU.scala 74:21]
    PF[5].iteration <= PathFinder_5.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_5.io.DataValid <= PF[5].DataValid @[FlexDPU.scala 74:21]
    PathFinder_5.io.NoDPE <= PF[5].NoDPE @[FlexDPU.scala 74:21]
    PF[5].PF_Valid <= PathFinder_5.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[5].destination <= PathFinder_5.io.destination @[FlexDPU.scala 74:21]
    PF[5].Source <= PathFinder_5.io.Source @[FlexDPU.scala 74:21]
    PF[5].i_mux_bus <= PathFinder_5.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_5.io.Streaming_matrix[0] <= PF[5].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Streaming_matrix[1] <= PF[5].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Streaming_matrix[2] <= PF[5].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Streaming_matrix[3] <= PF[5].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[0][0] <= PF[5].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[0][1] <= PF[5].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[0][2] <= PF[5].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[0][3] <= PF[5].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[1][0] <= PF[5].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[1][1] <= PF[5].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[1][2] <= PF[5].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[1][3] <= PF[5].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[2][0] <= PF[5].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[2][1] <= PF[5].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[2][2] <= PF[5].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[2][3] <= PF[5].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[3][0] <= PF[5].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[3][1] <= PF[5].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[3][2] <= PF[5].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_5.io.Stationary_matrix[3][3] <= PF[5].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[6].validIteration <= PathFinder_6.io.validIteration @[FlexDPU.scala 74:21]
    PF[6].iteration <= PathFinder_6.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_6.io.DataValid <= PF[6].DataValid @[FlexDPU.scala 74:21]
    PathFinder_6.io.NoDPE <= PF[6].NoDPE @[FlexDPU.scala 74:21]
    PF[6].PF_Valid <= PathFinder_6.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[6].destination <= PathFinder_6.io.destination @[FlexDPU.scala 74:21]
    PF[6].Source <= PathFinder_6.io.Source @[FlexDPU.scala 74:21]
    PF[6].i_mux_bus <= PathFinder_6.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_6.io.Streaming_matrix[0] <= PF[6].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Streaming_matrix[1] <= PF[6].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Streaming_matrix[2] <= PF[6].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Streaming_matrix[3] <= PF[6].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[0][0] <= PF[6].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[0][1] <= PF[6].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[0][2] <= PF[6].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[0][3] <= PF[6].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[1][0] <= PF[6].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[1][1] <= PF[6].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[1][2] <= PF[6].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[1][3] <= PF[6].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[2][0] <= PF[6].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[2][1] <= PF[6].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[2][2] <= PF[6].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[2][3] <= PF[6].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[3][0] <= PF[6].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[3][1] <= PF[6].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[3][2] <= PF[6].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_6.io.Stationary_matrix[3][3] <= PF[6].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[7].validIteration <= PathFinder_7.io.validIteration @[FlexDPU.scala 74:21]
    PF[7].iteration <= PathFinder_7.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_7.io.DataValid <= PF[7].DataValid @[FlexDPU.scala 74:21]
    PathFinder_7.io.NoDPE <= PF[7].NoDPE @[FlexDPU.scala 74:21]
    PF[7].PF_Valid <= PathFinder_7.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[7].destination <= PathFinder_7.io.destination @[FlexDPU.scala 74:21]
    PF[7].Source <= PathFinder_7.io.Source @[FlexDPU.scala 74:21]
    PF[7].i_mux_bus <= PathFinder_7.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_7.io.Streaming_matrix[0] <= PF[7].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Streaming_matrix[1] <= PF[7].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Streaming_matrix[2] <= PF[7].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Streaming_matrix[3] <= PF[7].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[0][0] <= PF[7].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[0][1] <= PF[7].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[0][2] <= PF[7].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[0][3] <= PF[7].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[1][0] <= PF[7].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[1][1] <= PF[7].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[1][2] <= PF[7].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[1][3] <= PF[7].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[2][0] <= PF[7].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[2][1] <= PF[7].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[2][2] <= PF[7].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[2][3] <= PF[7].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[3][0] <= PF[7].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[3][1] <= PF[7].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[3][2] <= PF[7].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_7.io.Stationary_matrix[3][3] <= PF[7].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[8].validIteration <= PathFinder_8.io.validIteration @[FlexDPU.scala 74:21]
    PF[8].iteration <= PathFinder_8.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_8.io.DataValid <= PF[8].DataValid @[FlexDPU.scala 74:21]
    PathFinder_8.io.NoDPE <= PF[8].NoDPE @[FlexDPU.scala 74:21]
    PF[8].PF_Valid <= PathFinder_8.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[8].destination <= PathFinder_8.io.destination @[FlexDPU.scala 74:21]
    PF[8].Source <= PathFinder_8.io.Source @[FlexDPU.scala 74:21]
    PF[8].i_mux_bus <= PathFinder_8.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_8.io.Streaming_matrix[0] <= PF[8].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Streaming_matrix[1] <= PF[8].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Streaming_matrix[2] <= PF[8].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Streaming_matrix[3] <= PF[8].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[0][0] <= PF[8].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[0][1] <= PF[8].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[0][2] <= PF[8].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[0][3] <= PF[8].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[1][0] <= PF[8].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[1][1] <= PF[8].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[1][2] <= PF[8].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[1][3] <= PF[8].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[2][0] <= PF[8].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[2][1] <= PF[8].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[2][2] <= PF[8].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[2][3] <= PF[8].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[3][0] <= PF[8].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[3][1] <= PF[8].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[3][2] <= PF[8].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_8.io.Stationary_matrix[3][3] <= PF[8].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[9].validIteration <= PathFinder_9.io.validIteration @[FlexDPU.scala 74:21]
    PF[9].iteration <= PathFinder_9.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_9.io.DataValid <= PF[9].DataValid @[FlexDPU.scala 74:21]
    PathFinder_9.io.NoDPE <= PF[9].NoDPE @[FlexDPU.scala 74:21]
    PF[9].PF_Valid <= PathFinder_9.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[9].destination <= PathFinder_9.io.destination @[FlexDPU.scala 74:21]
    PF[9].Source <= PathFinder_9.io.Source @[FlexDPU.scala 74:21]
    PF[9].i_mux_bus <= PathFinder_9.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_9.io.Streaming_matrix[0] <= PF[9].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Streaming_matrix[1] <= PF[9].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Streaming_matrix[2] <= PF[9].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Streaming_matrix[3] <= PF[9].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[0][0] <= PF[9].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[0][1] <= PF[9].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[0][2] <= PF[9].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[0][3] <= PF[9].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[1][0] <= PF[9].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[1][1] <= PF[9].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[1][2] <= PF[9].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[1][3] <= PF[9].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[2][0] <= PF[9].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[2][1] <= PF[9].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[2][2] <= PF[9].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[2][3] <= PF[9].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[3][0] <= PF[9].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[3][1] <= PF[9].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[3][2] <= PF[9].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_9.io.Stationary_matrix[3][3] <= PF[9].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[10].validIteration <= PathFinder_10.io.validIteration @[FlexDPU.scala 74:21]
    PF[10].iteration <= PathFinder_10.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_10.io.DataValid <= PF[10].DataValid @[FlexDPU.scala 74:21]
    PathFinder_10.io.NoDPE <= PF[10].NoDPE @[FlexDPU.scala 74:21]
    PF[10].PF_Valid <= PathFinder_10.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[10].destination <= PathFinder_10.io.destination @[FlexDPU.scala 74:21]
    PF[10].Source <= PathFinder_10.io.Source @[FlexDPU.scala 74:21]
    PF[10].i_mux_bus <= PathFinder_10.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_10.io.Streaming_matrix[0] <= PF[10].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Streaming_matrix[1] <= PF[10].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Streaming_matrix[2] <= PF[10].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Streaming_matrix[3] <= PF[10].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[0][0] <= PF[10].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[0][1] <= PF[10].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[0][2] <= PF[10].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[0][3] <= PF[10].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[1][0] <= PF[10].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[1][1] <= PF[10].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[1][2] <= PF[10].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[1][3] <= PF[10].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[2][0] <= PF[10].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[2][1] <= PF[10].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[2][2] <= PF[10].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[2][3] <= PF[10].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[3][0] <= PF[10].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[3][1] <= PF[10].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[3][2] <= PF[10].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_10.io.Stationary_matrix[3][3] <= PF[10].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[11].validIteration <= PathFinder_11.io.validIteration @[FlexDPU.scala 74:21]
    PF[11].iteration <= PathFinder_11.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_11.io.DataValid <= PF[11].DataValid @[FlexDPU.scala 74:21]
    PathFinder_11.io.NoDPE <= PF[11].NoDPE @[FlexDPU.scala 74:21]
    PF[11].PF_Valid <= PathFinder_11.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[11].destination <= PathFinder_11.io.destination @[FlexDPU.scala 74:21]
    PF[11].Source <= PathFinder_11.io.Source @[FlexDPU.scala 74:21]
    PF[11].i_mux_bus <= PathFinder_11.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_11.io.Streaming_matrix[0] <= PF[11].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Streaming_matrix[1] <= PF[11].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Streaming_matrix[2] <= PF[11].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Streaming_matrix[3] <= PF[11].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[0][0] <= PF[11].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[0][1] <= PF[11].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[0][2] <= PF[11].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[0][3] <= PF[11].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[1][0] <= PF[11].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[1][1] <= PF[11].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[1][2] <= PF[11].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[1][3] <= PF[11].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[2][0] <= PF[11].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[2][1] <= PF[11].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[2][2] <= PF[11].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[2][3] <= PF[11].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[3][0] <= PF[11].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[3][1] <= PF[11].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[3][2] <= PF[11].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_11.io.Stationary_matrix[3][3] <= PF[11].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[12].validIteration <= PathFinder_12.io.validIteration @[FlexDPU.scala 74:21]
    PF[12].iteration <= PathFinder_12.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_12.io.DataValid <= PF[12].DataValid @[FlexDPU.scala 74:21]
    PathFinder_12.io.NoDPE <= PF[12].NoDPE @[FlexDPU.scala 74:21]
    PF[12].PF_Valid <= PathFinder_12.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[12].destination <= PathFinder_12.io.destination @[FlexDPU.scala 74:21]
    PF[12].Source <= PathFinder_12.io.Source @[FlexDPU.scala 74:21]
    PF[12].i_mux_bus <= PathFinder_12.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_12.io.Streaming_matrix[0] <= PF[12].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Streaming_matrix[1] <= PF[12].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Streaming_matrix[2] <= PF[12].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Streaming_matrix[3] <= PF[12].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[0][0] <= PF[12].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[0][1] <= PF[12].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[0][2] <= PF[12].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[0][3] <= PF[12].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[1][0] <= PF[12].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[1][1] <= PF[12].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[1][2] <= PF[12].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[1][3] <= PF[12].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[2][0] <= PF[12].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[2][1] <= PF[12].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[2][2] <= PF[12].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[2][3] <= PF[12].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[3][0] <= PF[12].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[3][1] <= PF[12].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[3][2] <= PF[12].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_12.io.Stationary_matrix[3][3] <= PF[12].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[13].validIteration <= PathFinder_13.io.validIteration @[FlexDPU.scala 74:21]
    PF[13].iteration <= PathFinder_13.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_13.io.DataValid <= PF[13].DataValid @[FlexDPU.scala 74:21]
    PathFinder_13.io.NoDPE <= PF[13].NoDPE @[FlexDPU.scala 74:21]
    PF[13].PF_Valid <= PathFinder_13.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[13].destination <= PathFinder_13.io.destination @[FlexDPU.scala 74:21]
    PF[13].Source <= PathFinder_13.io.Source @[FlexDPU.scala 74:21]
    PF[13].i_mux_bus <= PathFinder_13.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_13.io.Streaming_matrix[0] <= PF[13].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Streaming_matrix[1] <= PF[13].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Streaming_matrix[2] <= PF[13].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Streaming_matrix[3] <= PF[13].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[0][0] <= PF[13].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[0][1] <= PF[13].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[0][2] <= PF[13].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[0][3] <= PF[13].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[1][0] <= PF[13].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[1][1] <= PF[13].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[1][2] <= PF[13].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[1][3] <= PF[13].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[2][0] <= PF[13].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[2][1] <= PF[13].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[2][2] <= PF[13].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[2][3] <= PF[13].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[3][0] <= PF[13].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[3][1] <= PF[13].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[3][2] <= PF[13].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_13.io.Stationary_matrix[3][3] <= PF[13].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[14].validIteration <= PathFinder_14.io.validIteration @[FlexDPU.scala 74:21]
    PF[14].iteration <= PathFinder_14.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_14.io.DataValid <= PF[14].DataValid @[FlexDPU.scala 74:21]
    PathFinder_14.io.NoDPE <= PF[14].NoDPE @[FlexDPU.scala 74:21]
    PF[14].PF_Valid <= PathFinder_14.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[14].destination <= PathFinder_14.io.destination @[FlexDPU.scala 74:21]
    PF[14].Source <= PathFinder_14.io.Source @[FlexDPU.scala 74:21]
    PF[14].i_mux_bus <= PathFinder_14.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_14.io.Streaming_matrix[0] <= PF[14].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Streaming_matrix[1] <= PF[14].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Streaming_matrix[2] <= PF[14].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Streaming_matrix[3] <= PF[14].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[0][0] <= PF[14].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[0][1] <= PF[14].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[0][2] <= PF[14].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[0][3] <= PF[14].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[1][0] <= PF[14].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[1][1] <= PF[14].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[1][2] <= PF[14].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[1][3] <= PF[14].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[2][0] <= PF[14].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[2][1] <= PF[14].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[2][2] <= PF[14].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[2][3] <= PF[14].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[3][0] <= PF[14].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[3][1] <= PF[14].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[3][2] <= PF[14].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_14.io.Stationary_matrix[3][3] <= PF[14].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[15].validIteration <= PathFinder_15.io.validIteration @[FlexDPU.scala 74:21]
    PF[15].iteration <= PathFinder_15.io.iteration @[FlexDPU.scala 74:21]
    PathFinder_15.io.DataValid <= PF[15].DataValid @[FlexDPU.scala 74:21]
    PathFinder_15.io.NoDPE <= PF[15].NoDPE @[FlexDPU.scala 74:21]
    PF[15].PF_Valid <= PathFinder_15.io.PF_Valid @[FlexDPU.scala 74:21]
    PF[15].destination <= PathFinder_15.io.destination @[FlexDPU.scala 74:21]
    PF[15].Source <= PathFinder_15.io.Source @[FlexDPU.scala 74:21]
    PF[15].i_mux_bus <= PathFinder_15.io.i_mux_bus @[FlexDPU.scala 74:21]
    PathFinder_15.io.Streaming_matrix[0] <= PF[15].Streaming_matrix[0] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Streaming_matrix[1] <= PF[15].Streaming_matrix[1] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Streaming_matrix[2] <= PF[15].Streaming_matrix[2] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Streaming_matrix[3] <= PF[15].Streaming_matrix[3] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[0][0] <= PF[15].Stationary_matrix[0][0] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[0][1] <= PF[15].Stationary_matrix[0][1] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[0][2] <= PF[15].Stationary_matrix[0][2] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[0][3] <= PF[15].Stationary_matrix[0][3] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[1][0] <= PF[15].Stationary_matrix[1][0] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[1][1] <= PF[15].Stationary_matrix[1][1] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[1][2] <= PF[15].Stationary_matrix[1][2] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[1][3] <= PF[15].Stationary_matrix[1][3] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[2][0] <= PF[15].Stationary_matrix[2][0] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[2][1] <= PF[15].Stationary_matrix[2][1] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[2][2] <= PF[15].Stationary_matrix[2][2] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[2][3] <= PF[15].Stationary_matrix[2][3] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[3][0] <= PF[15].Stationary_matrix[3][0] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[3][1] <= PF[15].Stationary_matrix[3][1] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[3][2] <= PF[15].Stationary_matrix[3][2] @[FlexDPU.scala 74:21]
    PathFinder_15.io.Stationary_matrix[3][3] <= PF[15].Stationary_matrix[3][3] @[FlexDPU.scala 74:21]
    PF[0].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_1 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_1[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_1[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_1[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_1[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_2 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_2[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_2[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_2[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_2[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_3 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_3[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_3[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_3[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_3[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_4 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_4[0] <= _WIRE @[FlexDPU.scala 79:52]
    _WIRE_4[1] <= _WIRE_1 @[FlexDPU.scala 79:52]
    _WIRE_4[2] <= _WIRE_2 @[FlexDPU.scala 79:52]
    _WIRE_4[3] <= _WIRE_3 @[FlexDPU.scala 79:52]
    wire _WIRE_5 : UInt<16>[4][4]
    _WIRE_5 <= _WIRE_4
    PF[0].Stationary_matrix[0][0] <= _WIRE_5[0][0] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[0][1] <= _WIRE_5[0][1] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[0][2] <= _WIRE_5[0][2] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[0][3] <= _WIRE_5[0][3] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[1][0] <= _WIRE_5[1][0] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[1][1] <= _WIRE_5[1][1] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[1][2] <= _WIRE_5[1][2] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[1][3] <= _WIRE_5[1][3] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[2][0] <= _WIRE_5[2][0] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[2][1] <= _WIRE_5[2][1] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[2][2] <= _WIRE_5[2][2] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[2][3] <= _WIRE_5[2][3] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[3][0] <= _WIRE_5[3][0] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[3][1] <= _WIRE_5[3][1] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[3][2] <= _WIRE_5[3][2] @[FlexDPU.scala 79:33]
    PF[0].Stationary_matrix[3][3] <= _WIRE_5[3][3] @[FlexDPU.scala 79:33]
    PF[0].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_6 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_6[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_6[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_6[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_6[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_7 : UInt<32>[4]
    _WIRE_7 <= _WIRE_6
    PF[0].Streaming_matrix[0] <= _WIRE_7[0] @[FlexDPU.scala 81:32]
    PF[0].Streaming_matrix[1] <= _WIRE_7[1] @[FlexDPU.scala 81:32]
    PF[0].Streaming_matrix[2] <= _WIRE_7[2] @[FlexDPU.scala 81:32]
    PF[0].Streaming_matrix[3] <= _WIRE_7[3] @[FlexDPU.scala 81:32]
    PF[1].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_8 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_8[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_8[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_8[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_8[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_9 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_9[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_9[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_9[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_9[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_10 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_10[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_10[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_10[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_10[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_11 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_11[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_11[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_11[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_11[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_12 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_12[0] <= _WIRE_8 @[FlexDPU.scala 79:52]
    _WIRE_12[1] <= _WIRE_9 @[FlexDPU.scala 79:52]
    _WIRE_12[2] <= _WIRE_10 @[FlexDPU.scala 79:52]
    _WIRE_12[3] <= _WIRE_11 @[FlexDPU.scala 79:52]
    wire _WIRE_13 : UInt<16>[4][4]
    _WIRE_13 <= _WIRE_12
    PF[1].Stationary_matrix[0][0] <= _WIRE_13[0][0] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[0][1] <= _WIRE_13[0][1] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[0][2] <= _WIRE_13[0][2] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[0][3] <= _WIRE_13[0][3] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[1][0] <= _WIRE_13[1][0] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[1][1] <= _WIRE_13[1][1] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[1][2] <= _WIRE_13[1][2] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[1][3] <= _WIRE_13[1][3] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[2][0] <= _WIRE_13[2][0] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[2][1] <= _WIRE_13[2][1] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[2][2] <= _WIRE_13[2][2] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[2][3] <= _WIRE_13[2][3] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[3][0] <= _WIRE_13[3][0] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[3][1] <= _WIRE_13[3][1] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[3][2] <= _WIRE_13[3][2] @[FlexDPU.scala 79:33]
    PF[1].Stationary_matrix[3][3] <= _WIRE_13[3][3] @[FlexDPU.scala 79:33]
    PF[1].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_14 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_14[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_14[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_14[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_14[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_15 : UInt<32>[4]
    _WIRE_15 <= _WIRE_14
    PF[1].Streaming_matrix[0] <= _WIRE_15[0] @[FlexDPU.scala 81:32]
    PF[1].Streaming_matrix[1] <= _WIRE_15[1] @[FlexDPU.scala 81:32]
    PF[1].Streaming_matrix[2] <= _WIRE_15[2] @[FlexDPU.scala 81:32]
    PF[1].Streaming_matrix[3] <= _WIRE_15[3] @[FlexDPU.scala 81:32]
    PF[2].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_16 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_16[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_16[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_16[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_16[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_17 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_17[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_17[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_17[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_17[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_18 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_18[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_18[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_18[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_18[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_19 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_19[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_19[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_19[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_19[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_20 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_20[0] <= _WIRE_16 @[FlexDPU.scala 79:52]
    _WIRE_20[1] <= _WIRE_17 @[FlexDPU.scala 79:52]
    _WIRE_20[2] <= _WIRE_18 @[FlexDPU.scala 79:52]
    _WIRE_20[3] <= _WIRE_19 @[FlexDPU.scala 79:52]
    wire _WIRE_21 : UInt<16>[4][4]
    _WIRE_21 <= _WIRE_20
    PF[2].Stationary_matrix[0][0] <= _WIRE_21[0][0] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[0][1] <= _WIRE_21[0][1] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[0][2] <= _WIRE_21[0][2] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[0][3] <= _WIRE_21[0][3] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[1][0] <= _WIRE_21[1][0] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[1][1] <= _WIRE_21[1][1] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[1][2] <= _WIRE_21[1][2] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[1][3] <= _WIRE_21[1][3] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[2][0] <= _WIRE_21[2][0] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[2][1] <= _WIRE_21[2][1] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[2][2] <= _WIRE_21[2][2] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[2][3] <= _WIRE_21[2][3] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[3][0] <= _WIRE_21[3][0] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[3][1] <= _WIRE_21[3][1] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[3][2] <= _WIRE_21[3][2] @[FlexDPU.scala 79:33]
    PF[2].Stationary_matrix[3][3] <= _WIRE_21[3][3] @[FlexDPU.scala 79:33]
    PF[2].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_22 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_22[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_22[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_22[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_22[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_23 : UInt<32>[4]
    _WIRE_23 <= _WIRE_22
    PF[2].Streaming_matrix[0] <= _WIRE_23[0] @[FlexDPU.scala 81:32]
    PF[2].Streaming_matrix[1] <= _WIRE_23[1] @[FlexDPU.scala 81:32]
    PF[2].Streaming_matrix[2] <= _WIRE_23[2] @[FlexDPU.scala 81:32]
    PF[2].Streaming_matrix[3] <= _WIRE_23[3] @[FlexDPU.scala 81:32]
    PF[3].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_24 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_24[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_24[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_24[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_24[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_25 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_25[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_25[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_25[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_25[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_26 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_26[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_26[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_26[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_26[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_27 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_27[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_27[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_27[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_27[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_28 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_28[0] <= _WIRE_24 @[FlexDPU.scala 79:52]
    _WIRE_28[1] <= _WIRE_25 @[FlexDPU.scala 79:52]
    _WIRE_28[2] <= _WIRE_26 @[FlexDPU.scala 79:52]
    _WIRE_28[3] <= _WIRE_27 @[FlexDPU.scala 79:52]
    wire _WIRE_29 : UInt<16>[4][4]
    _WIRE_29 <= _WIRE_28
    PF[3].Stationary_matrix[0][0] <= _WIRE_29[0][0] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[0][1] <= _WIRE_29[0][1] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[0][2] <= _WIRE_29[0][2] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[0][3] <= _WIRE_29[0][3] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[1][0] <= _WIRE_29[1][0] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[1][1] <= _WIRE_29[1][1] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[1][2] <= _WIRE_29[1][2] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[1][3] <= _WIRE_29[1][3] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[2][0] <= _WIRE_29[2][0] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[2][1] <= _WIRE_29[2][1] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[2][2] <= _WIRE_29[2][2] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[2][3] <= _WIRE_29[2][3] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[3][0] <= _WIRE_29[3][0] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[3][1] <= _WIRE_29[3][1] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[3][2] <= _WIRE_29[3][2] @[FlexDPU.scala 79:33]
    PF[3].Stationary_matrix[3][3] <= _WIRE_29[3][3] @[FlexDPU.scala 79:33]
    PF[3].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_30 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_30[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_30[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_30[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_30[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_31 : UInt<32>[4]
    _WIRE_31 <= _WIRE_30
    PF[3].Streaming_matrix[0] <= _WIRE_31[0] @[FlexDPU.scala 81:32]
    PF[3].Streaming_matrix[1] <= _WIRE_31[1] @[FlexDPU.scala 81:32]
    PF[3].Streaming_matrix[2] <= _WIRE_31[2] @[FlexDPU.scala 81:32]
    PF[3].Streaming_matrix[3] <= _WIRE_31[3] @[FlexDPU.scala 81:32]
    PF[4].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_32 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_32[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_32[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_32[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_32[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_33 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_33[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_33[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_33[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_33[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_34 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_34[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_34[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_34[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_34[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_35 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_35[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_35[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_35[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_35[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_36 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_36[0] <= _WIRE_32 @[FlexDPU.scala 79:52]
    _WIRE_36[1] <= _WIRE_33 @[FlexDPU.scala 79:52]
    _WIRE_36[2] <= _WIRE_34 @[FlexDPU.scala 79:52]
    _WIRE_36[3] <= _WIRE_35 @[FlexDPU.scala 79:52]
    wire _WIRE_37 : UInt<16>[4][4]
    _WIRE_37 <= _WIRE_36
    PF[4].Stationary_matrix[0][0] <= _WIRE_37[0][0] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[0][1] <= _WIRE_37[0][1] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[0][2] <= _WIRE_37[0][2] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[0][3] <= _WIRE_37[0][3] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[1][0] <= _WIRE_37[1][0] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[1][1] <= _WIRE_37[1][1] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[1][2] <= _WIRE_37[1][2] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[1][3] <= _WIRE_37[1][3] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[2][0] <= _WIRE_37[2][0] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[2][1] <= _WIRE_37[2][1] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[2][2] <= _WIRE_37[2][2] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[2][3] <= _WIRE_37[2][3] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[3][0] <= _WIRE_37[3][0] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[3][1] <= _WIRE_37[3][1] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[3][2] <= _WIRE_37[3][2] @[FlexDPU.scala 79:33]
    PF[4].Stationary_matrix[3][3] <= _WIRE_37[3][3] @[FlexDPU.scala 79:33]
    PF[4].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_38 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_38[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_38[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_38[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_38[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_39 : UInt<32>[4]
    _WIRE_39 <= _WIRE_38
    PF[4].Streaming_matrix[0] <= _WIRE_39[0] @[FlexDPU.scala 81:32]
    PF[4].Streaming_matrix[1] <= _WIRE_39[1] @[FlexDPU.scala 81:32]
    PF[4].Streaming_matrix[2] <= _WIRE_39[2] @[FlexDPU.scala 81:32]
    PF[4].Streaming_matrix[3] <= _WIRE_39[3] @[FlexDPU.scala 81:32]
    PF[5].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_40 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_40[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_40[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_40[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_40[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_41 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_41[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_41[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_41[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_41[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_42 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_42[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_42[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_42[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_42[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_43 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_43[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_43[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_43[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_43[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_44 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_44[0] <= _WIRE_40 @[FlexDPU.scala 79:52]
    _WIRE_44[1] <= _WIRE_41 @[FlexDPU.scala 79:52]
    _WIRE_44[2] <= _WIRE_42 @[FlexDPU.scala 79:52]
    _WIRE_44[3] <= _WIRE_43 @[FlexDPU.scala 79:52]
    wire _WIRE_45 : UInt<16>[4][4]
    _WIRE_45 <= _WIRE_44
    PF[5].Stationary_matrix[0][0] <= _WIRE_45[0][0] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[0][1] <= _WIRE_45[0][1] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[0][2] <= _WIRE_45[0][2] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[0][3] <= _WIRE_45[0][3] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[1][0] <= _WIRE_45[1][0] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[1][1] <= _WIRE_45[1][1] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[1][2] <= _WIRE_45[1][2] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[1][3] <= _WIRE_45[1][3] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[2][0] <= _WIRE_45[2][0] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[2][1] <= _WIRE_45[2][1] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[2][2] <= _WIRE_45[2][2] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[2][3] <= _WIRE_45[2][3] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[3][0] <= _WIRE_45[3][0] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[3][1] <= _WIRE_45[3][1] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[3][2] <= _WIRE_45[3][2] @[FlexDPU.scala 79:33]
    PF[5].Stationary_matrix[3][3] <= _WIRE_45[3][3] @[FlexDPU.scala 79:33]
    PF[5].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_46 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_46[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_46[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_46[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_46[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_47 : UInt<32>[4]
    _WIRE_47 <= _WIRE_46
    PF[5].Streaming_matrix[0] <= _WIRE_47[0] @[FlexDPU.scala 81:32]
    PF[5].Streaming_matrix[1] <= _WIRE_47[1] @[FlexDPU.scala 81:32]
    PF[5].Streaming_matrix[2] <= _WIRE_47[2] @[FlexDPU.scala 81:32]
    PF[5].Streaming_matrix[3] <= _WIRE_47[3] @[FlexDPU.scala 81:32]
    PF[6].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_48 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_48[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_48[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_48[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_48[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_49 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_49[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_49[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_49[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_49[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_50 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_50[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_50[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_50[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_50[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_51 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_51[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_51[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_51[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_51[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_52 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_52[0] <= _WIRE_48 @[FlexDPU.scala 79:52]
    _WIRE_52[1] <= _WIRE_49 @[FlexDPU.scala 79:52]
    _WIRE_52[2] <= _WIRE_50 @[FlexDPU.scala 79:52]
    _WIRE_52[3] <= _WIRE_51 @[FlexDPU.scala 79:52]
    wire _WIRE_53 : UInt<16>[4][4]
    _WIRE_53 <= _WIRE_52
    PF[6].Stationary_matrix[0][0] <= _WIRE_53[0][0] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[0][1] <= _WIRE_53[0][1] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[0][2] <= _WIRE_53[0][2] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[0][3] <= _WIRE_53[0][3] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[1][0] <= _WIRE_53[1][0] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[1][1] <= _WIRE_53[1][1] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[1][2] <= _WIRE_53[1][2] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[1][3] <= _WIRE_53[1][3] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[2][0] <= _WIRE_53[2][0] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[2][1] <= _WIRE_53[2][1] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[2][2] <= _WIRE_53[2][2] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[2][3] <= _WIRE_53[2][3] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[3][0] <= _WIRE_53[3][0] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[3][1] <= _WIRE_53[3][1] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[3][2] <= _WIRE_53[3][2] @[FlexDPU.scala 79:33]
    PF[6].Stationary_matrix[3][3] <= _WIRE_53[3][3] @[FlexDPU.scala 79:33]
    PF[6].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_54 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_54[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_54[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_54[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_54[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_55 : UInt<32>[4]
    _WIRE_55 <= _WIRE_54
    PF[6].Streaming_matrix[0] <= _WIRE_55[0] @[FlexDPU.scala 81:32]
    PF[6].Streaming_matrix[1] <= _WIRE_55[1] @[FlexDPU.scala 81:32]
    PF[6].Streaming_matrix[2] <= _WIRE_55[2] @[FlexDPU.scala 81:32]
    PF[6].Streaming_matrix[3] <= _WIRE_55[3] @[FlexDPU.scala 81:32]
    PF[7].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_56 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_56[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_56[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_56[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_56[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_57 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_57[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_57[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_57[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_57[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_58 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_58[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_58[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_58[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_58[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_59 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_59[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_59[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_59[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_59[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_60 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_60[0] <= _WIRE_56 @[FlexDPU.scala 79:52]
    _WIRE_60[1] <= _WIRE_57 @[FlexDPU.scala 79:52]
    _WIRE_60[2] <= _WIRE_58 @[FlexDPU.scala 79:52]
    _WIRE_60[3] <= _WIRE_59 @[FlexDPU.scala 79:52]
    wire _WIRE_61 : UInt<16>[4][4]
    _WIRE_61 <= _WIRE_60
    PF[7].Stationary_matrix[0][0] <= _WIRE_61[0][0] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[0][1] <= _WIRE_61[0][1] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[0][2] <= _WIRE_61[0][2] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[0][3] <= _WIRE_61[0][3] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[1][0] <= _WIRE_61[1][0] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[1][1] <= _WIRE_61[1][1] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[1][2] <= _WIRE_61[1][2] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[1][3] <= _WIRE_61[1][3] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[2][0] <= _WIRE_61[2][0] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[2][1] <= _WIRE_61[2][1] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[2][2] <= _WIRE_61[2][2] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[2][3] <= _WIRE_61[2][3] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[3][0] <= _WIRE_61[3][0] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[3][1] <= _WIRE_61[3][1] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[3][2] <= _WIRE_61[3][2] @[FlexDPU.scala 79:33]
    PF[7].Stationary_matrix[3][3] <= _WIRE_61[3][3] @[FlexDPU.scala 79:33]
    PF[7].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_62 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_62[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_62[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_62[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_62[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_63 : UInt<32>[4]
    _WIRE_63 <= _WIRE_62
    PF[7].Streaming_matrix[0] <= _WIRE_63[0] @[FlexDPU.scala 81:32]
    PF[7].Streaming_matrix[1] <= _WIRE_63[1] @[FlexDPU.scala 81:32]
    PF[7].Streaming_matrix[2] <= _WIRE_63[2] @[FlexDPU.scala 81:32]
    PF[7].Streaming_matrix[3] <= _WIRE_63[3] @[FlexDPU.scala 81:32]
    PF[8].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_64 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_64[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_64[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_64[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_64[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_65 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_65[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_65[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_65[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_65[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_66 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_66[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_66[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_66[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_66[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_67 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_67[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_67[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_67[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_67[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_68 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_68[0] <= _WIRE_64 @[FlexDPU.scala 79:52]
    _WIRE_68[1] <= _WIRE_65 @[FlexDPU.scala 79:52]
    _WIRE_68[2] <= _WIRE_66 @[FlexDPU.scala 79:52]
    _WIRE_68[3] <= _WIRE_67 @[FlexDPU.scala 79:52]
    wire _WIRE_69 : UInt<16>[4][4]
    _WIRE_69 <= _WIRE_68
    PF[8].Stationary_matrix[0][0] <= _WIRE_69[0][0] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[0][1] <= _WIRE_69[0][1] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[0][2] <= _WIRE_69[0][2] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[0][3] <= _WIRE_69[0][3] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[1][0] <= _WIRE_69[1][0] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[1][1] <= _WIRE_69[1][1] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[1][2] <= _WIRE_69[1][2] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[1][3] <= _WIRE_69[1][3] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[2][0] <= _WIRE_69[2][0] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[2][1] <= _WIRE_69[2][1] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[2][2] <= _WIRE_69[2][2] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[2][3] <= _WIRE_69[2][3] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[3][0] <= _WIRE_69[3][0] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[3][1] <= _WIRE_69[3][1] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[3][2] <= _WIRE_69[3][2] @[FlexDPU.scala 79:33]
    PF[8].Stationary_matrix[3][3] <= _WIRE_69[3][3] @[FlexDPU.scala 79:33]
    PF[8].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_70 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_70[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_70[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_70[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_70[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_71 : UInt<32>[4]
    _WIRE_71 <= _WIRE_70
    PF[8].Streaming_matrix[0] <= _WIRE_71[0] @[FlexDPU.scala 81:32]
    PF[8].Streaming_matrix[1] <= _WIRE_71[1] @[FlexDPU.scala 81:32]
    PF[8].Streaming_matrix[2] <= _WIRE_71[2] @[FlexDPU.scala 81:32]
    PF[8].Streaming_matrix[3] <= _WIRE_71[3] @[FlexDPU.scala 81:32]
    PF[9].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_72 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_72[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_72[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_72[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_72[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_73 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_73[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_73[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_73[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_73[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_74 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_74[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_74[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_74[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_74[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_75 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_75[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_75[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_75[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_75[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_76 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_76[0] <= _WIRE_72 @[FlexDPU.scala 79:52]
    _WIRE_76[1] <= _WIRE_73 @[FlexDPU.scala 79:52]
    _WIRE_76[2] <= _WIRE_74 @[FlexDPU.scala 79:52]
    _WIRE_76[3] <= _WIRE_75 @[FlexDPU.scala 79:52]
    wire _WIRE_77 : UInt<16>[4][4]
    _WIRE_77 <= _WIRE_76
    PF[9].Stationary_matrix[0][0] <= _WIRE_77[0][0] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[0][1] <= _WIRE_77[0][1] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[0][2] <= _WIRE_77[0][2] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[0][3] <= _WIRE_77[0][3] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[1][0] <= _WIRE_77[1][0] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[1][1] <= _WIRE_77[1][1] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[1][2] <= _WIRE_77[1][2] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[1][3] <= _WIRE_77[1][3] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[2][0] <= _WIRE_77[2][0] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[2][1] <= _WIRE_77[2][1] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[2][2] <= _WIRE_77[2][2] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[2][3] <= _WIRE_77[2][3] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[3][0] <= _WIRE_77[3][0] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[3][1] <= _WIRE_77[3][1] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[3][2] <= _WIRE_77[3][2] @[FlexDPU.scala 79:33]
    PF[9].Stationary_matrix[3][3] <= _WIRE_77[3][3] @[FlexDPU.scala 79:33]
    PF[9].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_78 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_78[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_78[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_78[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_78[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_79 : UInt<32>[4]
    _WIRE_79 <= _WIRE_78
    PF[9].Streaming_matrix[0] <= _WIRE_79[0] @[FlexDPU.scala 81:32]
    PF[9].Streaming_matrix[1] <= _WIRE_79[1] @[FlexDPU.scala 81:32]
    PF[9].Streaming_matrix[2] <= _WIRE_79[2] @[FlexDPU.scala 81:32]
    PF[9].Streaming_matrix[3] <= _WIRE_79[3] @[FlexDPU.scala 81:32]
    PF[10].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_80 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_80[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_80[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_80[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_80[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_81 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_81[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_81[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_81[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_81[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_82 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_82[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_82[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_82[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_82[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_83 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_83[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_83[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_83[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_83[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_84 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_84[0] <= _WIRE_80 @[FlexDPU.scala 79:52]
    _WIRE_84[1] <= _WIRE_81 @[FlexDPU.scala 79:52]
    _WIRE_84[2] <= _WIRE_82 @[FlexDPU.scala 79:52]
    _WIRE_84[3] <= _WIRE_83 @[FlexDPU.scala 79:52]
    wire _WIRE_85 : UInt<16>[4][4]
    _WIRE_85 <= _WIRE_84
    PF[10].Stationary_matrix[0][0] <= _WIRE_85[0][0] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[0][1] <= _WIRE_85[0][1] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[0][2] <= _WIRE_85[0][2] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[0][3] <= _WIRE_85[0][3] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[1][0] <= _WIRE_85[1][0] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[1][1] <= _WIRE_85[1][1] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[1][2] <= _WIRE_85[1][2] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[1][3] <= _WIRE_85[1][3] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[2][0] <= _WIRE_85[2][0] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[2][1] <= _WIRE_85[2][1] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[2][2] <= _WIRE_85[2][2] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[2][3] <= _WIRE_85[2][3] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[3][0] <= _WIRE_85[3][0] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[3][1] <= _WIRE_85[3][1] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[3][2] <= _WIRE_85[3][2] @[FlexDPU.scala 79:33]
    PF[10].Stationary_matrix[3][3] <= _WIRE_85[3][3] @[FlexDPU.scala 79:33]
    PF[10].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_86 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_86[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_86[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_86[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_86[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_87 : UInt<32>[4]
    _WIRE_87 <= _WIRE_86
    PF[10].Streaming_matrix[0] <= _WIRE_87[0] @[FlexDPU.scala 81:32]
    PF[10].Streaming_matrix[1] <= _WIRE_87[1] @[FlexDPU.scala 81:32]
    PF[10].Streaming_matrix[2] <= _WIRE_87[2] @[FlexDPU.scala 81:32]
    PF[10].Streaming_matrix[3] <= _WIRE_87[3] @[FlexDPU.scala 81:32]
    PF[11].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_88 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_88[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_88[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_88[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_88[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_89 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_89[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_89[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_89[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_89[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_90 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_90[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_90[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_90[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_90[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_91 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_91[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_91[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_91[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_91[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_92 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_92[0] <= _WIRE_88 @[FlexDPU.scala 79:52]
    _WIRE_92[1] <= _WIRE_89 @[FlexDPU.scala 79:52]
    _WIRE_92[2] <= _WIRE_90 @[FlexDPU.scala 79:52]
    _WIRE_92[3] <= _WIRE_91 @[FlexDPU.scala 79:52]
    wire _WIRE_93 : UInt<16>[4][4]
    _WIRE_93 <= _WIRE_92
    PF[11].Stationary_matrix[0][0] <= _WIRE_93[0][0] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[0][1] <= _WIRE_93[0][1] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[0][2] <= _WIRE_93[0][2] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[0][3] <= _WIRE_93[0][3] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[1][0] <= _WIRE_93[1][0] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[1][1] <= _WIRE_93[1][1] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[1][2] <= _WIRE_93[1][2] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[1][3] <= _WIRE_93[1][3] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[2][0] <= _WIRE_93[2][0] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[2][1] <= _WIRE_93[2][1] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[2][2] <= _WIRE_93[2][2] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[2][3] <= _WIRE_93[2][3] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[3][0] <= _WIRE_93[3][0] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[3][1] <= _WIRE_93[3][1] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[3][2] <= _WIRE_93[3][2] @[FlexDPU.scala 79:33]
    PF[11].Stationary_matrix[3][3] <= _WIRE_93[3][3] @[FlexDPU.scala 79:33]
    PF[11].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_94 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_94[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_94[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_94[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_94[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_95 : UInt<32>[4]
    _WIRE_95 <= _WIRE_94
    PF[11].Streaming_matrix[0] <= _WIRE_95[0] @[FlexDPU.scala 81:32]
    PF[11].Streaming_matrix[1] <= _WIRE_95[1] @[FlexDPU.scala 81:32]
    PF[11].Streaming_matrix[2] <= _WIRE_95[2] @[FlexDPU.scala 81:32]
    PF[11].Streaming_matrix[3] <= _WIRE_95[3] @[FlexDPU.scala 81:32]
    PF[12].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_96 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_96[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_96[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_96[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_96[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_97 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_97[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_97[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_97[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_97[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_98 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_98[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_98[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_98[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_98[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_99 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_99[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_99[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_99[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_99[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_100 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_100[0] <= _WIRE_96 @[FlexDPU.scala 79:52]
    _WIRE_100[1] <= _WIRE_97 @[FlexDPU.scala 79:52]
    _WIRE_100[2] <= _WIRE_98 @[FlexDPU.scala 79:52]
    _WIRE_100[3] <= _WIRE_99 @[FlexDPU.scala 79:52]
    wire _WIRE_101 : UInt<16>[4][4]
    _WIRE_101 <= _WIRE_100
    PF[12].Stationary_matrix[0][0] <= _WIRE_101[0][0] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[0][1] <= _WIRE_101[0][1] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[0][2] <= _WIRE_101[0][2] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[0][3] <= _WIRE_101[0][3] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[1][0] <= _WIRE_101[1][0] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[1][1] <= _WIRE_101[1][1] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[1][2] <= _WIRE_101[1][2] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[1][3] <= _WIRE_101[1][3] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[2][0] <= _WIRE_101[2][0] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[2][1] <= _WIRE_101[2][1] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[2][2] <= _WIRE_101[2][2] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[2][3] <= _WIRE_101[2][3] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[3][0] <= _WIRE_101[3][0] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[3][1] <= _WIRE_101[3][1] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[3][2] <= _WIRE_101[3][2] @[FlexDPU.scala 79:33]
    PF[12].Stationary_matrix[3][3] <= _WIRE_101[3][3] @[FlexDPU.scala 79:33]
    PF[12].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_102 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_102[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_102[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_102[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_102[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_103 : UInt<32>[4]
    _WIRE_103 <= _WIRE_102
    PF[12].Streaming_matrix[0] <= _WIRE_103[0] @[FlexDPU.scala 81:32]
    PF[12].Streaming_matrix[1] <= _WIRE_103[1] @[FlexDPU.scala 81:32]
    PF[12].Streaming_matrix[2] <= _WIRE_103[2] @[FlexDPU.scala 81:32]
    PF[12].Streaming_matrix[3] <= _WIRE_103[3] @[FlexDPU.scala 81:32]
    PF[13].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_104 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_104[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_104[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_104[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_104[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_105 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_105[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_105[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_105[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_105[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_106 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_106[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_106[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_106[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_106[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_107 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_107[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_107[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_107[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_107[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_108 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_108[0] <= _WIRE_104 @[FlexDPU.scala 79:52]
    _WIRE_108[1] <= _WIRE_105 @[FlexDPU.scala 79:52]
    _WIRE_108[2] <= _WIRE_106 @[FlexDPU.scala 79:52]
    _WIRE_108[3] <= _WIRE_107 @[FlexDPU.scala 79:52]
    wire _WIRE_109 : UInt<16>[4][4]
    _WIRE_109 <= _WIRE_108
    PF[13].Stationary_matrix[0][0] <= _WIRE_109[0][0] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[0][1] <= _WIRE_109[0][1] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[0][2] <= _WIRE_109[0][2] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[0][3] <= _WIRE_109[0][3] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[1][0] <= _WIRE_109[1][0] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[1][1] <= _WIRE_109[1][1] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[1][2] <= _WIRE_109[1][2] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[1][3] <= _WIRE_109[1][3] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[2][0] <= _WIRE_109[2][0] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[2][1] <= _WIRE_109[2][1] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[2][2] <= _WIRE_109[2][2] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[2][3] <= _WIRE_109[2][3] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[3][0] <= _WIRE_109[3][0] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[3][1] <= _WIRE_109[3][1] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[3][2] <= _WIRE_109[3][2] @[FlexDPU.scala 79:33]
    PF[13].Stationary_matrix[3][3] <= _WIRE_109[3][3] @[FlexDPU.scala 79:33]
    PF[13].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_110 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_110[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_110[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_110[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_110[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_111 : UInt<32>[4]
    _WIRE_111 <= _WIRE_110
    PF[13].Streaming_matrix[0] <= _WIRE_111[0] @[FlexDPU.scala 81:32]
    PF[13].Streaming_matrix[1] <= _WIRE_111[1] @[FlexDPU.scala 81:32]
    PF[13].Streaming_matrix[2] <= _WIRE_111[2] @[FlexDPU.scala 81:32]
    PF[13].Streaming_matrix[3] <= _WIRE_111[3] @[FlexDPU.scala 81:32]
    PF[14].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_112 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_112[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_112[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_112[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_112[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_113 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_113[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_113[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_113[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_113[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_114 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_114[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_114[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_114[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_114[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_115 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_115[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_115[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_115[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_115[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_116 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_116[0] <= _WIRE_112 @[FlexDPU.scala 79:52]
    _WIRE_116[1] <= _WIRE_113 @[FlexDPU.scala 79:52]
    _WIRE_116[2] <= _WIRE_114 @[FlexDPU.scala 79:52]
    _WIRE_116[3] <= _WIRE_115 @[FlexDPU.scala 79:52]
    wire _WIRE_117 : UInt<16>[4][4]
    _WIRE_117 <= _WIRE_116
    PF[14].Stationary_matrix[0][0] <= _WIRE_117[0][0] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[0][1] <= _WIRE_117[0][1] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[0][2] <= _WIRE_117[0][2] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[0][3] <= _WIRE_117[0][3] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[1][0] <= _WIRE_117[1][0] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[1][1] <= _WIRE_117[1][1] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[1][2] <= _WIRE_117[1][2] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[1][3] <= _WIRE_117[1][3] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[2][0] <= _WIRE_117[2][0] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[2][1] <= _WIRE_117[2][1] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[2][2] <= _WIRE_117[2][2] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[2][3] <= _WIRE_117[2][3] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[3][0] <= _WIRE_117[3][0] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[3][1] <= _WIRE_117[3][1] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[3][2] <= _WIRE_117[3][2] @[FlexDPU.scala 79:33]
    PF[14].Stationary_matrix[3][3] <= _WIRE_117[3][3] @[FlexDPU.scala 79:33]
    PF[14].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_118 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_118[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_118[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_118[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_118[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_119 : UInt<32>[4]
    _WIRE_119 <= _WIRE_118
    PF[14].Streaming_matrix[0] <= _WIRE_119[0] @[FlexDPU.scala 81:32]
    PF[14].Streaming_matrix[1] <= _WIRE_119[1] @[FlexDPU.scala 81:32]
    PF[14].Streaming_matrix[2] <= _WIRE_119[2] @[FlexDPU.scala 81:32]
    PF[14].Streaming_matrix[3] <= _WIRE_119[3] @[FlexDPU.scala 81:32]
    PF[15].DataValid <= UInt<1>("h0") @[FlexDPU.scala 78:25]
    wire _WIRE_120 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_120[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_120[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_120[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_120[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_121 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_121[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_121[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_121[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_121[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_122 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_122[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_122[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_122[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_122[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_123 : UInt<16>[4] @[FlexDPU.scala 79:85]
    _WIRE_123[0] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_123[1] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_123[2] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    _WIRE_123[3] <= UInt<16>("h0") @[FlexDPU.scala 79:85]
    wire _WIRE_124 : UInt<16>[4][4] @[FlexDPU.scala 79:52]
    _WIRE_124[0] <= _WIRE_120 @[FlexDPU.scala 79:52]
    _WIRE_124[1] <= _WIRE_121 @[FlexDPU.scala 79:52]
    _WIRE_124[2] <= _WIRE_122 @[FlexDPU.scala 79:52]
    _WIRE_124[3] <= _WIRE_123 @[FlexDPU.scala 79:52]
    wire _WIRE_125 : UInt<16>[4][4]
    _WIRE_125 <= _WIRE_124
    PF[15].Stationary_matrix[0][0] <= _WIRE_125[0][0] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[0][1] <= _WIRE_125[0][1] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[0][2] <= _WIRE_125[0][2] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[0][3] <= _WIRE_125[0][3] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[1][0] <= _WIRE_125[1][0] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[1][1] <= _WIRE_125[1][1] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[1][2] <= _WIRE_125[1][2] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[1][3] <= _WIRE_125[1][3] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[2][0] <= _WIRE_125[2][0] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[2][1] <= _WIRE_125[2][1] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[2][2] <= _WIRE_125[2][2] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[2][3] <= _WIRE_125[2][3] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[3][0] <= _WIRE_125[3][0] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[3][1] <= _WIRE_125[3][1] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[3][2] <= _WIRE_125[3][2] @[FlexDPU.scala 79:33]
    PF[15].Stationary_matrix[3][3] <= _WIRE_125[3][3] @[FlexDPU.scala 79:33]
    PF[15].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 80:21]
    wire _WIRE_126 : UInt<32>[4] @[FlexDPU.scala 81:51]
    _WIRE_126[0] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_126[1] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_126[2] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    _WIRE_126[3] <= UInt<32>("h0") @[FlexDPU.scala 81:51]
    wire _WIRE_127 : UInt<32>[4]
    _WIRE_127 <= _WIRE_126
    PF[15].Streaming_matrix[0] <= _WIRE_127[0] @[FlexDPU.scala 81:32]
    PF[15].Streaming_matrix[1] <= _WIRE_127[1] @[FlexDPU.scala 81:32]
    PF[15].Streaming_matrix[2] <= _WIRE_127[2] @[FlexDPU.scala 81:32]
    PF[15].Streaming_matrix[3] <= _WIRE_127[3] @[FlexDPU.scala 81:32]
    when Statvalid : @[FlexDPU.scala 95:20]
      PF[0].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[0].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[0].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[0].NoDPE <= UInt<1>("h0") @[FlexDPU.scala 100:21]
      PF[0].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[0].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[0].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[0].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[0].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[0].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[0].destination @[FlexDPU.scala 104:17]
      PF[1].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[1].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[1].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[1].NoDPE <= UInt<1>("h1") @[FlexDPU.scala 100:21]
      PF[1].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[1].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[1].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[1].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[1].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[1].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[1].destination @[FlexDPU.scala 104:17]
      PF[2].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[2].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[2].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[2].NoDPE <= UInt<2>("h2") @[FlexDPU.scala 100:21]
      PF[2].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[2].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[2].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[2].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[2].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[2].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[2].destination @[FlexDPU.scala 104:17]
      PF[3].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[3].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[3].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[3].NoDPE <= UInt<2>("h3") @[FlexDPU.scala 100:21]
      PF[3].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[3].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[3].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[3].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[3].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[3].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[3].destination @[FlexDPU.scala 104:17]
      PF[4].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[4].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[4].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[4].NoDPE <= UInt<3>("h4") @[FlexDPU.scala 100:21]
      PF[4].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[4].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[4].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[4].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[4].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[4].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[4].destination @[FlexDPU.scala 104:17]
      PF[5].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[5].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[5].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[5].NoDPE <= UInt<3>("h5") @[FlexDPU.scala 100:21]
      PF[5].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[5].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[5].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[5].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[5].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[5].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[5].destination @[FlexDPU.scala 104:17]
      PF[6].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[6].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[6].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[6].NoDPE <= UInt<3>("h6") @[FlexDPU.scala 100:21]
      PF[6].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[6].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[6].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[6].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[6].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[6].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[6].destination @[FlexDPU.scala 104:17]
      PF[7].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[7].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[7].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[7].NoDPE <= UInt<3>("h7") @[FlexDPU.scala 100:21]
      PF[7].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[7].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[7].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[7].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[7].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[7].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[7].destination @[FlexDPU.scala 104:17]
      PF[8].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[8].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[8].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[8].NoDPE <= UInt<4>("h8") @[FlexDPU.scala 100:21]
      PF[8].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[8].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[8].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[8].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[8].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[8].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[8].destination @[FlexDPU.scala 104:17]
      PF[9].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[9].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[9].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[9].NoDPE <= UInt<4>("h9") @[FlexDPU.scala 100:21]
      PF[9].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[9].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[9].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[9].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[9].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[9].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[9].destination @[FlexDPU.scala 104:17]
      PF[10].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[10].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[10].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[10].NoDPE <= UInt<4>("ha") @[FlexDPU.scala 100:21]
      PF[10].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[10].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[10].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[10].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[10].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[10].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[10].destination @[FlexDPU.scala 104:17]
      PF[11].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[11].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[11].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[11].NoDPE <= UInt<4>("hb") @[FlexDPU.scala 100:21]
      PF[11].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[11].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[11].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[11].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[11].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[11].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[11].destination @[FlexDPU.scala 104:17]
      PF[12].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[12].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[12].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[12].NoDPE <= UInt<4>("hc") @[FlexDPU.scala 100:21]
      PF[12].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[12].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[12].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[12].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[12].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[12].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[12].destination @[FlexDPU.scala 104:17]
      PF[13].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[13].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[13].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[13].NoDPE <= UInt<4>("hd") @[FlexDPU.scala 100:21]
      PF[13].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[13].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[13].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[13].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[13].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[13].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[13].destination @[FlexDPU.scala 104:17]
      PF[14].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[14].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[14].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[14].NoDPE <= UInt<4>("he") @[FlexDPU.scala 100:21]
      PF[14].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[14].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[14].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[14].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[14].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[14].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[14].destination @[FlexDPU.scala 104:17]
      PF[15].DataValid <= Statvalid @[FlexDPU.scala 98:25]
      PF[15].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 99:33]
      PF[15].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 99:33]
      PF[15].NoDPE <= UInt<4>("hf") @[FlexDPU.scala 100:21]
      PF[15].Streaming_matrix[0] <= PF1_Stream_Col[0] @[FlexDPU.scala 101:32]
      PF[15].Streaming_matrix[1] <= PF1_Stream_Col[1] @[FlexDPU.scala 101:32]
      PF[15].Streaming_matrix[2] <= PF1_Stream_Col[2] @[FlexDPU.scala 101:32]
      PF[15].Streaming_matrix[3] <= PF1_Stream_Col[3] @[FlexDPU.scala 101:32]
      PF1mux <= PF[15].i_mux_bus @[FlexDPU.scala 102:16]
      PF1src <= PF[15].Source @[FlexDPU.scala 103:16]
      PF1dest <= PF[15].destination @[FlexDPU.scala 104:17]
      inst flexdpecom4 of flexdpecom4 @[FlexDPU.scala 107:46]
      flexdpecom4.clock <= clock
      flexdpecom4.reset <= reset
      inst flexdpecom4_1 of flexdpecom4_1 @[FlexDPU.scala 107:46]
      flexdpecom4_1.clock <= clock
      flexdpecom4_1.reset <= reset
      inst flexdpecom4_2 of flexdpecom4_2 @[FlexDPU.scala 107:46]
      flexdpecom4_2.clock <= clock
      flexdpecom4_2.reset <= reset
      inst flexdpecom4_3 of flexdpecom4_3 @[FlexDPU.scala 107:46]
      flexdpecom4_3.clock <= clock
      flexdpecom4_3.reset <= reset
      wire FDPE : { flip i_stationary : UInt<1>, flip i_data_valid : UInt<1>, flip i_data_bus : UInt<16>[4], flip i_data_bus2 : UInt<16>[4], flip Stationary_matrix : UInt<16>[4][4], o_valid : UInt<1>[4], o_data_bus : UInt<16>[4], o_adder : UInt<16>[3], flip i_mux_bus : UInt<4>[4]}[4] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_mux_bus[0] <= FDPE[0].i_mux_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_mux_bus[1] <= FDPE[0].i_mux_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_mux_bus[2] <= FDPE[0].i_mux_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_mux_bus[3] <= FDPE[0].i_mux_bus[3] @[FlexDPU.scala 107:27]
      FDPE[0].o_adder <= flexdpecom4.io.o_adder @[FlexDPU.scala 107:27]
      FDPE[0].o_data_bus <= flexdpecom4.io.o_data_bus @[FlexDPU.scala 107:27]
      FDPE[0].o_valid <= flexdpecom4.io.o_valid @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[0][0] <= FDPE[0].Stationary_matrix[0][0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[0][1] <= FDPE[0].Stationary_matrix[0][1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[0][2] <= FDPE[0].Stationary_matrix[0][2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[0][3] <= FDPE[0].Stationary_matrix[0][3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[1][0] <= FDPE[0].Stationary_matrix[1][0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[1][1] <= FDPE[0].Stationary_matrix[1][1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[1][2] <= FDPE[0].Stationary_matrix[1][2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[1][3] <= FDPE[0].Stationary_matrix[1][3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[2][0] <= FDPE[0].Stationary_matrix[2][0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[2][1] <= FDPE[0].Stationary_matrix[2][1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[2][2] <= FDPE[0].Stationary_matrix[2][2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[2][3] <= FDPE[0].Stationary_matrix[2][3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[3][0] <= FDPE[0].Stationary_matrix[3][0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[3][1] <= FDPE[0].Stationary_matrix[3][1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[3][2] <= FDPE[0].Stationary_matrix[3][2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.Stationary_matrix[3][3] <= FDPE[0].Stationary_matrix[3][3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus2[0] <= FDPE[0].i_data_bus2[0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus2[1] <= FDPE[0].i_data_bus2[1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus2[2] <= FDPE[0].i_data_bus2[2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus2[3] <= FDPE[0].i_data_bus2[3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus[0] <= FDPE[0].i_data_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus[1] <= FDPE[0].i_data_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus[2] <= FDPE[0].i_data_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_bus[3] <= FDPE[0].i_data_bus[3] @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_data_valid <= FDPE[0].i_data_valid @[FlexDPU.scala 107:27]
      flexdpecom4.io.i_stationary <= FDPE[0].i_stationary @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_mux_bus[0] <= FDPE[1].i_mux_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_mux_bus[1] <= FDPE[1].i_mux_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_mux_bus[2] <= FDPE[1].i_mux_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_mux_bus[3] <= FDPE[1].i_mux_bus[3] @[FlexDPU.scala 107:27]
      FDPE[1].o_adder <= flexdpecom4_1.io.o_adder @[FlexDPU.scala 107:27]
      FDPE[1].o_data_bus <= flexdpecom4_1.io.o_data_bus @[FlexDPU.scala 107:27]
      FDPE[1].o_valid <= flexdpecom4_1.io.o_valid @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[0][0] <= FDPE[1].Stationary_matrix[0][0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[0][1] <= FDPE[1].Stationary_matrix[0][1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[0][2] <= FDPE[1].Stationary_matrix[0][2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[0][3] <= FDPE[1].Stationary_matrix[0][3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[1][0] <= FDPE[1].Stationary_matrix[1][0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[1][1] <= FDPE[1].Stationary_matrix[1][1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[1][2] <= FDPE[1].Stationary_matrix[1][2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[1][3] <= FDPE[1].Stationary_matrix[1][3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[2][0] <= FDPE[1].Stationary_matrix[2][0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[2][1] <= FDPE[1].Stationary_matrix[2][1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[2][2] <= FDPE[1].Stationary_matrix[2][2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[2][3] <= FDPE[1].Stationary_matrix[2][3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[3][0] <= FDPE[1].Stationary_matrix[3][0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[3][1] <= FDPE[1].Stationary_matrix[3][1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[3][2] <= FDPE[1].Stationary_matrix[3][2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.Stationary_matrix[3][3] <= FDPE[1].Stationary_matrix[3][3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus2[0] <= FDPE[1].i_data_bus2[0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus2[1] <= FDPE[1].i_data_bus2[1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus2[2] <= FDPE[1].i_data_bus2[2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus2[3] <= FDPE[1].i_data_bus2[3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus[0] <= FDPE[1].i_data_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus[1] <= FDPE[1].i_data_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus[2] <= FDPE[1].i_data_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_bus[3] <= FDPE[1].i_data_bus[3] @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_data_valid <= FDPE[1].i_data_valid @[FlexDPU.scala 107:27]
      flexdpecom4_1.io.i_stationary <= FDPE[1].i_stationary @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_mux_bus[0] <= FDPE[2].i_mux_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_mux_bus[1] <= FDPE[2].i_mux_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_mux_bus[2] <= FDPE[2].i_mux_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_mux_bus[3] <= FDPE[2].i_mux_bus[3] @[FlexDPU.scala 107:27]
      FDPE[2].o_adder <= flexdpecom4_2.io.o_adder @[FlexDPU.scala 107:27]
      FDPE[2].o_data_bus <= flexdpecom4_2.io.o_data_bus @[FlexDPU.scala 107:27]
      FDPE[2].o_valid <= flexdpecom4_2.io.o_valid @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[0][0] <= FDPE[2].Stationary_matrix[0][0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[0][1] <= FDPE[2].Stationary_matrix[0][1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[0][2] <= FDPE[2].Stationary_matrix[0][2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[0][3] <= FDPE[2].Stationary_matrix[0][3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[1][0] <= FDPE[2].Stationary_matrix[1][0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[1][1] <= FDPE[2].Stationary_matrix[1][1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[1][2] <= FDPE[2].Stationary_matrix[1][2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[1][3] <= FDPE[2].Stationary_matrix[1][3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[2][0] <= FDPE[2].Stationary_matrix[2][0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[2][1] <= FDPE[2].Stationary_matrix[2][1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[2][2] <= FDPE[2].Stationary_matrix[2][2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[2][3] <= FDPE[2].Stationary_matrix[2][3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[3][0] <= FDPE[2].Stationary_matrix[3][0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[3][1] <= FDPE[2].Stationary_matrix[3][1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[3][2] <= FDPE[2].Stationary_matrix[3][2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.Stationary_matrix[3][3] <= FDPE[2].Stationary_matrix[3][3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus2[0] <= FDPE[2].i_data_bus2[0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus2[1] <= FDPE[2].i_data_bus2[1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus2[2] <= FDPE[2].i_data_bus2[2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus2[3] <= FDPE[2].i_data_bus2[3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus[0] <= FDPE[2].i_data_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus[1] <= FDPE[2].i_data_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus[2] <= FDPE[2].i_data_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_bus[3] <= FDPE[2].i_data_bus[3] @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_data_valid <= FDPE[2].i_data_valid @[FlexDPU.scala 107:27]
      flexdpecom4_2.io.i_stationary <= FDPE[2].i_stationary @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_mux_bus[0] <= FDPE[3].i_mux_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_mux_bus[1] <= FDPE[3].i_mux_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_mux_bus[2] <= FDPE[3].i_mux_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_mux_bus[3] <= FDPE[3].i_mux_bus[3] @[FlexDPU.scala 107:27]
      FDPE[3].o_adder <= flexdpecom4_3.io.o_adder @[FlexDPU.scala 107:27]
      FDPE[3].o_data_bus <= flexdpecom4_3.io.o_data_bus @[FlexDPU.scala 107:27]
      FDPE[3].o_valid <= flexdpecom4_3.io.o_valid @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[0][0] <= FDPE[3].Stationary_matrix[0][0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[0][1] <= FDPE[3].Stationary_matrix[0][1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[0][2] <= FDPE[3].Stationary_matrix[0][2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[0][3] <= FDPE[3].Stationary_matrix[0][3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[1][0] <= FDPE[3].Stationary_matrix[1][0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[1][1] <= FDPE[3].Stationary_matrix[1][1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[1][2] <= FDPE[3].Stationary_matrix[1][2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[1][3] <= FDPE[3].Stationary_matrix[1][3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[2][0] <= FDPE[3].Stationary_matrix[2][0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[2][1] <= FDPE[3].Stationary_matrix[2][1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[2][2] <= FDPE[3].Stationary_matrix[2][2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[2][3] <= FDPE[3].Stationary_matrix[2][3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[3][0] <= FDPE[3].Stationary_matrix[3][0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[3][1] <= FDPE[3].Stationary_matrix[3][1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[3][2] <= FDPE[3].Stationary_matrix[3][2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.Stationary_matrix[3][3] <= FDPE[3].Stationary_matrix[3][3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus2[0] <= FDPE[3].i_data_bus2[0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus2[1] <= FDPE[3].i_data_bus2[1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus2[2] <= FDPE[3].i_data_bus2[2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus2[3] <= FDPE[3].i_data_bus2[3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus[0] <= FDPE[3].i_data_bus[0] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus[1] <= FDPE[3].i_data_bus[1] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus[2] <= FDPE[3].i_data_bus[2] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_bus[3] <= FDPE[3].i_data_bus[3] @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_data_valid <= FDPE[3].i_data_valid @[FlexDPU.scala 107:27]
      flexdpecom4_3.io.i_stationary <= FDPE[3].i_stationary @[FlexDPU.scala 107:27]
      FDPE[0].i_stationary <= UInt<1>("h1") @[FlexDPU.scala 110:34]
      FDPE[0].i_data_valid <= UInt<1>("h1") @[FlexDPU.scala 111:34]
      FDPE[0].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 112:39]
      FDPE[0].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 112:39]
      FDPE[0].i_mux_bus[0] <= PF[0].i_mux_bus[0] @[FlexDPU.scala 115:42]
      FDPE[0].i_data_bus[0] <= PF[0].Source[0] @[FlexDPU.scala 116:43]
      FDPE[0].i_data_bus2[0] <= PF[0].destination[0] @[FlexDPU.scala 117:44]
      FDPE[0].i_mux_bus[1] <= PF[0].i_mux_bus[1] @[FlexDPU.scala 115:42]
      FDPE[0].i_data_bus[1] <= PF[0].Source[1] @[FlexDPU.scala 116:43]
      FDPE[0].i_data_bus2[1] <= PF[0].destination[1] @[FlexDPU.scala 117:44]
      FDPE[0].i_mux_bus[2] <= PF[0].i_mux_bus[2] @[FlexDPU.scala 115:42]
      FDPE[0].i_data_bus[2] <= PF[0].Source[2] @[FlexDPU.scala 116:43]
      FDPE[0].i_data_bus2[2] <= PF[0].destination[2] @[FlexDPU.scala 117:44]
      FDPE[0].i_mux_bus[3] <= PF[0].i_mux_bus[3] @[FlexDPU.scala 115:42]
      FDPE[0].i_data_bus[3] <= PF[0].Source[3] @[FlexDPU.scala 116:43]
      FDPE[0].i_data_bus2[3] <= PF[0].destination[3] @[FlexDPU.scala 117:44]
      FDPE[1].i_stationary <= UInt<1>("h1") @[FlexDPU.scala 110:34]
      FDPE[1].i_data_valid <= UInt<1>("h1") @[FlexDPU.scala 111:34]
      FDPE[1].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 112:39]
      FDPE[1].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 112:39]
      FDPE[1].i_mux_bus[0] <= PF[1].i_mux_bus[0] @[FlexDPU.scala 115:42]
      FDPE[1].i_data_bus[0] <= PF[1].Source[0] @[FlexDPU.scala 116:43]
      FDPE[1].i_data_bus2[0] <= PF[1].destination[0] @[FlexDPU.scala 117:44]
      FDPE[1].i_mux_bus[1] <= PF[1].i_mux_bus[1] @[FlexDPU.scala 115:42]
      FDPE[1].i_data_bus[1] <= PF[1].Source[1] @[FlexDPU.scala 116:43]
      FDPE[1].i_data_bus2[1] <= PF[1].destination[1] @[FlexDPU.scala 117:44]
      FDPE[1].i_mux_bus[2] <= PF[1].i_mux_bus[2] @[FlexDPU.scala 115:42]
      FDPE[1].i_data_bus[2] <= PF[1].Source[2] @[FlexDPU.scala 116:43]
      FDPE[1].i_data_bus2[2] <= PF[1].destination[2] @[FlexDPU.scala 117:44]
      FDPE[1].i_mux_bus[3] <= PF[1].i_mux_bus[3] @[FlexDPU.scala 115:42]
      FDPE[1].i_data_bus[3] <= PF[1].Source[3] @[FlexDPU.scala 116:43]
      FDPE[1].i_data_bus2[3] <= PF[1].destination[3] @[FlexDPU.scala 117:44]
      FDPE[2].i_stationary <= UInt<1>("h1") @[FlexDPU.scala 110:34]
      FDPE[2].i_data_valid <= UInt<1>("h1") @[FlexDPU.scala 111:34]
      FDPE[2].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 112:39]
      FDPE[2].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 112:39]
      FDPE[2].i_mux_bus[0] <= PF[2].i_mux_bus[0] @[FlexDPU.scala 115:42]
      FDPE[2].i_data_bus[0] <= PF[2].Source[0] @[FlexDPU.scala 116:43]
      FDPE[2].i_data_bus2[0] <= PF[2].destination[0] @[FlexDPU.scala 117:44]
      FDPE[2].i_mux_bus[1] <= PF[2].i_mux_bus[1] @[FlexDPU.scala 115:42]
      FDPE[2].i_data_bus[1] <= PF[2].Source[1] @[FlexDPU.scala 116:43]
      FDPE[2].i_data_bus2[1] <= PF[2].destination[1] @[FlexDPU.scala 117:44]
      FDPE[2].i_mux_bus[2] <= PF[2].i_mux_bus[2] @[FlexDPU.scala 115:42]
      FDPE[2].i_data_bus[2] <= PF[2].Source[2] @[FlexDPU.scala 116:43]
      FDPE[2].i_data_bus2[2] <= PF[2].destination[2] @[FlexDPU.scala 117:44]
      FDPE[2].i_mux_bus[3] <= PF[2].i_mux_bus[3] @[FlexDPU.scala 115:42]
      FDPE[2].i_data_bus[3] <= PF[2].Source[3] @[FlexDPU.scala 116:43]
      FDPE[2].i_data_bus2[3] <= PF[2].destination[3] @[FlexDPU.scala 117:44]
      FDPE[3].i_stationary <= UInt<1>("h1") @[FlexDPU.scala 110:34]
      FDPE[3].i_data_valid <= UInt<1>("h1") @[FlexDPU.scala 111:34]
      FDPE[3].Stationary_matrix[0][0] <= io.Stationary_matrix[0][0] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[0][1] <= io.Stationary_matrix[0][1] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[0][2] <= io.Stationary_matrix[0][2] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[0][3] <= io.Stationary_matrix[0][3] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[1][0] <= io.Stationary_matrix[1][0] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[1][1] <= io.Stationary_matrix[1][1] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[1][2] <= io.Stationary_matrix[1][2] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[1][3] <= io.Stationary_matrix[1][3] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[2][0] <= io.Stationary_matrix[2][0] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[2][1] <= io.Stationary_matrix[2][1] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[2][2] <= io.Stationary_matrix[2][2] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[2][3] <= io.Stationary_matrix[2][3] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[3][0] <= io.Stationary_matrix[3][0] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[3][1] <= io.Stationary_matrix[3][1] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[3][2] <= io.Stationary_matrix[3][2] @[FlexDPU.scala 112:39]
      FDPE[3].Stationary_matrix[3][3] <= io.Stationary_matrix[3][3] @[FlexDPU.scala 112:39]
      FDPE[3].i_mux_bus[0] <= PF[3].i_mux_bus[0] @[FlexDPU.scala 115:42]
      FDPE[3].i_data_bus[0] <= PF[3].Source[0] @[FlexDPU.scala 116:43]
      FDPE[3].i_data_bus2[0] <= PF[3].destination[0] @[FlexDPU.scala 117:44]
      FDPE[3].i_mux_bus[1] <= PF[3].i_mux_bus[1] @[FlexDPU.scala 115:42]
      FDPE[3].i_data_bus[1] <= PF[3].Source[1] @[FlexDPU.scala 116:43]
      FDPE[3].i_data_bus2[1] <= PF[3].destination[1] @[FlexDPU.scala 117:44]
      FDPE[3].i_mux_bus[2] <= PF[3].i_mux_bus[2] @[FlexDPU.scala 115:42]
      FDPE[3].i_data_bus[2] <= PF[3].Source[2] @[FlexDPU.scala 116:43]
      FDPE[3].i_data_bus2[2] <= PF[3].destination[2] @[FlexDPU.scala 117:44]
      FDPE[3].i_mux_bus[3] <= PF[3].i_mux_bus[3] @[FlexDPU.scala 115:42]
      FDPE[3].i_data_bus[3] <= PF[3].Source[3] @[FlexDPU.scala 116:43]
      FDPE[3].i_data_bus2[3] <= PF[3].destination[3] @[FlexDPU.scala 117:44]
      when PF[0].PF_Valid : @[FlexDPU.scala 144:29]
        node _ModuleIndex_T = add(ModuleIndex, UInt<1>("h1")) @[FlexDPU.scala 146:40]
        node _ModuleIndex_T_1 = tail(_ModuleIndex_T, 1) @[FlexDPU.scala 146:40]
        ModuleIndex <= _ModuleIndex_T_1 @[FlexDPU.scala 146:25]
      node _T_13 = eq(ModuleIndex, UInt<2>("h3")) @[FlexDPU.scala 149:27]
      node _T_14 = and(_T_13, PF[0].PF_Valid) @[FlexDPU.scala 149:53]
      when _T_14 : @[FlexDPU.scala 149:71]
        ModuleIndex <= ModuleIndex @[FlexDPU.scala 150:25]
      node _PF1_Stream_Col_0_T = bits(ModuleIndex, 1, 0)
      PF1_Stream_Col[0] <= io.Streaming_matrix[0][_PF1_Stream_Col_0_T] @[FlexDPU.scala 156:31]
      node _PF1_Stream_Col_1_T = bits(ModuleIndex, 1, 0)
      PF1_Stream_Col[1] <= io.Streaming_matrix[1][_PF1_Stream_Col_1_T] @[FlexDPU.scala 156:31]
      node _PF1_Stream_Col_2_T = bits(ModuleIndex, 1, 0)
      PF1_Stream_Col[2] <= io.Streaming_matrix[2][_PF1_Stream_Col_2_T] @[FlexDPU.scala 156:31]
      node _PF1_Stream_Col_3_T = bits(ModuleIndex, 1, 0)
      PF1_Stream_Col[3] <= io.Streaming_matrix[3][_PF1_Stream_Col_3_T] @[FlexDPU.scala 156:31]
      node _T_15 = eq(PF1CountIteration, UInt<2>("h3")) @[FlexDPU.scala 172:33]
      when _T_15 : @[FlexDPU.scala 172:58]
        wire reserve : UInt<32>
        reserve <= UInt<32>("h0")

